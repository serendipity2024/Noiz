import EventEmitter from "@scena/event-emitter";
import { SelectoOptions, SelectoProperties, SelectoEvents } from "./types";
declare class Selecto extends EventEmitter<SelectoEvents> {
    options: SelectoOptions;
    private target;
    private dragContainer;
    private container;
    private gesto;
    private injectResult;
    private selectedTargets;
    private dragScroll;
    private keycon;
    constructor(options?: Partial<SelectoOptions>);
    setSelectedTargets(selectedTargets: Array<HTMLElement | SVGElement>): this;
    getSelectedTargets(): Array<HTMLElement | SVGElement>;
    setKeyContainer(keyContainer: HTMLElement | Document | Window): void;
    setToggleContinueSelect(toggleContinueSelect: string[][] | string[] | string): void;
    setPreventDefault(value: boolean): void;
    setCheckInput(value: boolean): void;
    triggerDragStart(e: MouseEvent | TouchEvent): this;
    destroy(): void;
    getElementPoints(target: HTMLElement | SVGElement): number[][];
    getSelectableElements(): (HTMLElement | SVGElement)[];
    findSelectableTargets(datas?: any): void;
    clickTarget(e: MouseEvent | TouchEvent, clickedTarget?: Element): this;
    private setKeyController;
    private setKeyEvent;
    private initElement;
    private hitTest;
    private initDragScroll;
    private select;
    private selectEnd;
    private onDragStart;
    private check;
    private onDrag;
    private onDragEnd;
    private sameCombiKey;
    private onKeyDown;
    private onKeyUp;
    private onBlur;
    private onDocumentSelectStart;
}
interface Selecto extends SelectoProperties {
}
export default Selecto;
