{"version":3,"file":"selecto.js","sources":["../src/utils.ts","../src/consts.ts","../src/SelectoManager.tsx","../src/Selecto.tsx","../src/index.umd.ts"],"sourcesContent":["import { Hypertext, Rect } from \"./types\";\nimport { IObject, addClass, hasClass, calculateBoundSize } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\n\nexport function getClient(e: MouseEvent | TouchEvent) {\n    if (\"touches\" in e) {\n        const touch = e.touches[0] || e.changedTouches[0];\n\n        return {\n            clientX: touch.clientX,\n            clientY: touch.clientY,\n        };\n    } else {\n        return {\n            clientX: e.clientX,\n            clientY: e.clientY,\n        };\n    }\n}\n\nexport function createElement(\n    jsx: Hypertext,\n    prevTarget?: HTMLElement | SVGElement,\n    container?: HTMLElement | SVGElement,\n) {\n    const { tag, children, attributes, className, style } = jsx;\n    const el = prevTarget || document.createElement(tag) as HTMLElement | SVGElement;\n\n    for (const name in attributes) {\n        el.setAttribute(name, attributes[name]);\n    }\n    const elChildren = el.children;\n    children.forEach((child, i) => {\n        createElement(child, elChildren[i] as HTMLElement | SVGElement, el);\n    });\n    if (className) {\n        className.split(\" \").forEach(name => {\n            if (!hasClass(el, name)) {\n                addClass(el, name);\n            }\n        });\n    }\n    if (style) {\n        const elStyle = el.style;\n        for (const name in style) {\n            elStyle[name] = style[name];\n        }\n    }\n    if (!prevTarget && container) {\n        container.appendChild(el);\n    }\n    return el;\n}\nexport function h(\n    tag: string,\n    attrs: IObject<any>,\n    ...children: Hypertext[]\n): Hypertext {\n    const {\n        className = \"\",\n        style = {},\n        ...attributes\n    } = attrs || {};\n    return {\n        tag,\n        className,\n        style,\n        attributes,\n        children,\n    };\n}\n\nexport function diffValue<T>(prev: T, cur: T, func: (prev: T, cur: T) => void) {\n    if (prev !== cur) {\n        func(prev, cur);\n    }\n}\n\nexport function getRect(\n    e: any, ratio: number,\n    boundArea = e.datas.boundArea,\n): Rect {\n    let {\n        distX = 0,\n        distY = 0,\n    } = e;\n    const { startX, startY } = e.datas;\n\n    if (ratio > 0) {\n        const nextHeight = Math.sqrt((distX * distX + distY * distY) / (1 + ratio * ratio));\n        const nextWidth = ratio * nextHeight;\n\n        distX = (distX >= 0 ? 1 : -1) * nextWidth;\n        distY = (distY >= 0 ? 1 : -1) * nextHeight;\n    }\n    let width = Math.abs(distX);\n    let height = Math.abs(distY);\n\n    const maxWidth = distX < 0 ? startX - boundArea.left : boundArea.right - startX;\n    const maxHeight = distY < 0 ? startY - boundArea.top : boundArea.bottom - startY;\n\n    [width, height] = calculateBoundSize([width, height], [0, 0], [maxWidth, maxHeight], !!ratio);\n    distX = (distX >= 0 ? 1 : -1) * width;\n    distY = (distY >= 0 ? 1 : -1) * height;\n\n    const tx = Math.min(0, distX);\n    const ty = Math.min(0, distY);\n    const left = startX + tx;\n    const top = startY + ty;\n\n    return {\n        left,\n        top,\n        right: left + width,\n        bottom: top + height,\n        width,\n        height,\n    };\n}\n\nexport function getDefaultElementRect(el: HTMLElement | SVGElement) {\n    const rect = el.getBoundingClientRect();\n    const { left, top, width, height } = rect;\n\n    return {\n        pos1: [left, top],\n        pos2: [left + width, top],\n        pos3: [left, top + height],\n        pos4: [left + width, top + height],\n    };\n}\n\nexport function passTargets(\n    beforeTargets: Array<HTMLElement | SVGElement>,\n    afterTargets: Array<HTMLElement | SVGElement>,\n) {\n    const {\n        list,\n        prevList,\n        added,\n        removed,\n    } = diff(beforeTargets, afterTargets);\n\n    return added.map(index => list[index]).concat(removed.map(index => prevList[index]));\n}\n","import styled from \"css-styled\";\nimport { SelectoOptions } from \"./types\";\n\nexport const injector = styled(`\n:host {\n    position: fixed;\n    display: none;\n    border: 1px solid #4af;\n    background: rgba(68, 170, 255, 0.5);\n    z-index: 100;\n}\n:host {\n    position: absolute;\n}\n`);\n\n/**\n * @memberof Selecto\n */\nexport const CLASS_NAME = `selecto-selection ${injector.className}`;\n\nexport const PROPERTIES = [\n    \"boundContainer\",\n    \"selectableTargets\",\n    \"selectByClick\",\n    \"selectFromInside\",\n    \"continueSelect\",\n    \"toggleContinueSelect\",\n    \"keyContainer\",\n    \"hitRate\",\n    \"scrollOptions\",\n    \"checkInput\",\n    \"preventDefault\",\n    \"ratio\",\n    \"getElementRect\",\n    \"preventDragFromInside\",\n    \"rootContainer\",\n    \"dragCondition\",\n] as const;\n/**\n * @memberof Selecto\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    \"dragContainer\",\n    \"cspNonce\",\n    ...PROPERTIES,\n] as const;\n\nexport const OPTION_TYPES: { [key in keyof SelectoOptions]: any } = {\n    boundContainer: null,\n    target: null,\n    container: null,\n    dragContainer: null,\n    selectableTargets: Array,\n    selectByClick: Boolean,\n    selectFromInside: Boolean,\n    continueSelect: Boolean,\n    toggleContinueSelect: Array,\n    keyContainer: null,\n    hitRate: Number,\n    scrollOptions: Object,\n    checkInput: Boolean,\n    preventDefault: Boolean,\n    cspNonce: String,\n    ratio: Number,\n    getElementRect: Function,\n    preventDragFromInside: Boolean,\n    rootContainer: Object,\n    dragCondition: Function,\n};\n\n/**\n * @memberof Selecto\n */\nexport const EVENTS = [\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n    \"selectStart\",\n    \"select\",\n    \"selectEnd\",\n    \"keydown\",\n    \"keyup\",\n    \"scroll\",\n] as const;\n\n/**\n * @memberof Selecto\n */\nexport const METHODS = [\n    \"clickTarget\",\n    \"getSelectableElements\",\n    \"setSelectedTargets\",\n    \"getElementPoints\",\n    \"getSelectedTargets\",\n    \"findSelectableTargets\",\n    \"triggerDragStart\",\n] as const;\n","import EventEmitter from \"@scena/event-emitter\";\nimport Gesto, { OnDrag, OnDragStart } from \"gesto\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport {\n    isObject,\n    camelize,\n    IObject,\n    addEvent,\n    removeEvent,\n    isArray,\n    isString,\n    between,\n} from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport DragScroll from \"@scena/dragscroll\";\nimport KeyController, { getCombi } from \"keycon\";\nimport {\n    getAreaSize,\n    getOverlapPoints,\n    isInside,\n    fitPoints,\n} from \"overlap-area\";\nimport { getDistElementMatrix, calculateMatrixDist, createMatrix } from \"css-to-mat\";\nimport {\n    createElement,\n    h,\n    getClient,\n    diffValue,\n    getRect,\n    getDefaultElementRect,\n    passTargets,\n} from \"./utils\";\nimport {\n    SelectoOptions,\n    SelectoProperties,\n    OnDragEvent,\n    SelectoEvents,\n    Rect,\n    BoundContainer,\n} from \"./types\";\nimport { PROPERTIES, injector, CLASS_NAME } from \"./consts\";\n\n/**\n * Selecto.js is a component that allows you to select elements in the drag area using the mouse or touch.\n * @sort 1\n * @extends EventEmitter\n */\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function set(value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function set(value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\nclass Selecto extends EventEmitter<SelectoEvents> {\n    public options: SelectoOptions;\n    private target!: HTMLElement | SVGElement;\n    private dragContainer!: Element | Window | Element[];\n    private container!: HTMLElement;\n    private gesto!: Gesto;\n    private injectResult!: InjectResult;\n    private selectedTargets: Array<HTMLElement | SVGElement> = [];\n    private dragScroll: DragScroll = new DragScroll();\n    private keycon!: KeyController;\n    /**\n     *\n     */\n    constructor(options: Partial<SelectoOptions> = {}) {\n        super();\n        this.target = options.target;\n        this.container = options.container || document.body;\n        this.options = {\n            target: null,\n            container: null,\n            dragContainer: null,\n            selectableTargets: [],\n            selectByClick: true,\n            selectFromInside: true,\n            hitRate: 100,\n            continueSelect: false,\n            toggleContinueSelect: null,\n            keyContainer: null,\n            scrollOptions: undefined,\n            checkInput: false,\n            preventDefault: false,\n            boundContainer: false,\n            preventDragFromInside: true,\n            dragCondition: null,\n            rootContainer: null,\n            getElementRect: getDefaultElementRect,\n            cspNonce: \"\",\n            ratio: 0,\n            ...options,\n        };\n        this.initElement();\n        this.initDragScroll();\n        this.setKeyController();\n    }\n    /**\n     * You can set the currently selected targets.\n     *\n     */\n    public setSelectedTargets(\n        selectedTargets: Array<HTMLElement | SVGElement>\n    ): this {\n        this.selectedTargets = selectedTargets;\n\n        return this;\n    }\n    /**\n     * You can get the currently selected targets.\n     */\n    public getSelectedTargets(): Array<HTMLElement | SVGElement> {\n        return this.selectedTargets;\n    }\n    public setKeyContainer(keyContainer: HTMLElement | Document | Window) {\n        const options = this.options;\n\n        diffValue(options.keyContainer, keyContainer, () => {\n            options.keyContainer = keyContainer;\n\n            this.setKeyController();\n        });\n    }\n    public setToggleContinueSelect(\n        toggleContinueSelect: string[][] | string[] | string\n    ) {\n        const options = this.options;\n\n        diffValue(options.toggleContinueSelect, toggleContinueSelect, () => {\n            options.toggleContinueSelect = toggleContinueSelect;\n\n            this.setKeyEvent();\n        });\n    }\n    public setPreventDefault(value: boolean) {\n        this.gesto.options.preventDefault = value;\n    }\n    public setCheckInput(value: boolean) {\n        this.gesto.options.checkInput = value;\n    }\n    /**\n     * `OnDragStart` is triggered by an external event.\n     * @param - external event\n     * @example\n     * import Selecto from \"selecto\";\n     *\n     * const selecto = new Selecto();\n     *\n     * window.addEventListener(\"mousedown\", e => {\n     *   selecto.triggerDragStart(e);\n     * });\n     */\n    public triggerDragStart(e: MouseEvent | TouchEvent) {\n        this.gesto.triggerDragStart(e);\n        return this;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.keycon && this.keycon.destroy();\n        this.gesto.unset();\n        this.injectResult.destroy();\n        removeEvent(document, \"selectstart\", this.onDocumentSelectStart);\n\n        this.keycon = null;\n        this.gesto = null;\n        this.injectResult = null;\n        this.target = null;\n        this.container = null;\n        this.options = null;\n    }\n    public getElementPoints(target: HTMLElement | SVGElement) {\n        const getElementRect = this.getElementRect || getDefaultElementRect;\n        const info = getElementRect(target);\n        const points = [info.pos1, info.pos2, info.pos4, info.pos3];\n\n        if (getElementRect !== getDefaultElementRect) {\n            const rect = target.getBoundingClientRect();\n\n            return fitPoints(points, rect);\n        }\n        return points;\n    }\n    /**\n     * Get all elements set in `selectableTargets`.\n     */\n    public getSelectableElements() {\n        const selectableElements: Array<HTMLElement | SVGElement> = [];\n\n        this.options.selectableTargets.forEach((target) => {\n            if (isObject(target)) {\n                selectableElements.push(target);\n            } else {\n                const elements = [].slice.call(\n                    document.querySelectorAll(target)\n                );\n\n                elements.forEach((el) => {\n                    selectableElements.push(el);\n                });\n            }\n        });\n\n        return selectableElements;\n    }\n    /**\n     * Find for selectableTargets again during drag event\n     */\n    public findSelectableTargets(datas: any = this.gesto.getEventDatas()) {\n        const selectableTargets = this.getSelectableElements();\n        const selectablePoints = selectableTargets.map((target) =>\n            this.getElementPoints(target)\n        );\n        datas.selectableTargets = selectableTargets;\n        datas.selectablePoints = selectablePoints;\n    }\n    /**\n     * External click or mouse events can be applied to the selecto.\n     * @params - Extenal click or mouse event\n     * @params - Specify the clicked target directly.\n     */\n    public clickTarget(\n        e: MouseEvent | TouchEvent,\n        clickedTarget?: Element\n    ): this {\n        const { clientX, clientY } = getClient(e);\n        const dragEvent = {\n            datas: {\n                selectFlag: false,\n            },\n            clientX,\n            clientY,\n            inputEvent: e,\n            isClick: true,\n            stop: () => {\n                return false;\n            },\n        } as any;\n        if (this.onDragStart(dragEvent, clickedTarget)) {\n            this.onDragEnd(dragEvent);\n        }\n        return this;\n    }\n    private setKeyController() {\n        const { keyContainer, toggleContinueSelect } = this.options;\n\n        if (this.keycon) {\n            this.keycon.destroy();\n            this.keycon = null;\n        }\n        if (toggleContinueSelect) {\n            this.keycon = new KeyController(keyContainer || window);\n            this.keycon\n                .keydown(this.onKeyDown)\n                .keyup(this.onKeyUp)\n                .on(\"blur\", this.onBlur);\n        }\n    }\n    private setKeyEvent() {\n        const { toggleContinueSelect } = this.options;\n        if (!toggleContinueSelect || this.keycon) {\n            return;\n        }\n        this.setKeyController();\n    }\n    private initElement() {\n        this.target = createElement(\n            (<div className={CLASS_NAME}></div>) as any,\n            this.target,\n            this.container\n        );\n\n        const target = this.target;\n\n        const { dragContainer, checkInput, preventDefault } = this.options;\n        this.dragContainer =\n            typeof dragContainer === \"string\"\n                ? [].slice.call(document.querySelectorAll(dragContainer))\n                : this.options.dragContainer || (this.target.parentNode as any);\n        this.gesto = new Gesto(this.dragContainer, {\n            checkWindowBlur: true,\n            container: window,\n            checkInput,\n            preventDefault,\n        }).on({\n            dragStart: this.onDragStart,\n            drag: this.onDrag,\n            dragEnd: this.onDragEnd,\n        });\n        addEvent(document, \"selectstart\", this.onDocumentSelectStart);\n\n        this.injectResult = injector.inject(target, {\n            nonce: this.options.cspNonce,\n        });\n    }\n    private hitTest(\n        selectRect: Rect,\n        clientX: number,\n        clientY: number,\n        targets: Array<HTMLElement | SVGElement>,\n        selectablePoints: number[][][]\n    ) {\n        const { hitRate, selectByClick } = this.options;\n        const { left, top, right, bottom } = selectRect;\n        const rectPoints = [\n            [left, top],\n            [right, top],\n            [right, bottom],\n            [left, bottom],\n        ];\n        return targets.filter((_, i) => {\n            const points = selectablePoints[i];\n            const inArea = isInside([clientX, clientY], points);\n\n            if (selectByClick && inArea) {\n                return true;\n            }\n            const overlapPoints = getOverlapPoints(rectPoints, points);\n\n            if (!overlapPoints.length) {\n                return false;\n            }\n            const overlapSize = getAreaSize(overlapPoints);\n            const targetSize = getAreaSize(points);\n            const rate = between(\n                Math.round((overlapSize / targetSize) * 100),\n                0,\n                100\n            );\n\n            if (rate >= Math.min(100, hitRate)) {\n                return true;\n            }\n            return false;\n        });\n    }\n    private initDragScroll() {\n        this.dragScroll\n            .on(\"scroll\", ({ container, direction }) => {\n                this.emit(\"scroll\", {\n                    container,\n                    direction,\n                });\n            })\n            .on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n                const datas = inputEvent.datas;\n                const boundArea = datas.boundArea;\n\n                datas.startX -= offsetX;\n                datas.startY -= offsetY;\n                datas.selectablePoints.forEach((points: number[][]) => {\n                    points.forEach((pos) => {\n                        pos[0] -= offsetX;\n                        pos[1] -= offsetY;\n                    });\n                });\n\n                boundArea.left -= offsetX;\n                boundArea.right -= offsetX;\n                boundArea.top -= offsetY;\n                boundArea.bottom -= offsetY;\n\n                this.gesto.scrollBy(\n                    offsetX,\n                    offsetY,\n                    inputEvent.inputEvent,\n                    false\n                );\n\n                inputEvent.distX += offsetX;\n                inputEvent.distY += offsetY;\n                this.check(inputEvent);\n            });\n    }\n    private select(\n        prevSelectedTargets: Array<HTMLElement | SVGElement>,\n        selectedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        inputEvent: any,\n        isStart?: boolean\n    ) {\n        const { added, removed, prevList, list } = diff(\n            prevSelectedTargets,\n            selectedTargets\n        );\n\n        this.selectedTargets = selectedTargets;\n\n        if (isStart) {\n            /**\n             * When the select(drag) starts, the selectStart event is called.\n             * @memberof Selecto\n             * @event selectStart\n             * @param {Selecto.OnSelect} - Parameters for the selectStart event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"selectStart\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * }).on(\"selectEnd\", e => {\n             *   e.afterAdded.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.afterRemoved.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.emit(\"selectStart\", {\n                selected: selectedTargets,\n                added: added.map((index) => list[index]),\n                removed: removed.map((index) => prevList[index]),\n                rect,\n                inputEvent,\n            });\n        }\n        if (added.length || removed.length) {\n            /**\n             * When the select in real time, the select event is called.\n             * @memberof Selecto\n             * @event select\n             * @param {Selecto.OnSelect} - Parameters for the select event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"select\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.emit(\"select\", {\n                selected: selectedTargets,\n                added: added.map((index) => list[index]),\n                removed: removed.map((index) => prevList[index]),\n                rect,\n                inputEvent,\n            });\n        }\n    }\n    private selectEnd(\n        startSelectedTargets: Array<HTMLElement | SVGElement>,\n        startPassedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        e: OnDragEvent\n    ) {\n        const { inputEvent, isDouble } = e;\n        const { added, removed, prevList, list } = diff(\n            startSelectedTargets,\n            this.selectedTargets\n        );\n        const {\n            added: afterAdded,\n            removed: afterRemoved,\n            prevList: afterPrevList,\n            list: afterList,\n        } = diff(startPassedTargets, this.selectedTargets);\n        const type = inputEvent && inputEvent.type;\n        const isDragStart = type === \"mousedown\" || type === \"touchstart\";\n\n        /**\n         * When the select(dragEnd or click) ends, the selectEnd event is called.\n         * @memberof Selecto\n         * @event selectEnd\n         * @param {Selecto.OnSelectEnd} - Parameters for the selectEnd event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"selectStart\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * }).on(\"selectEnd\", e => {\n         *   e.afterAdded.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.afterRemoved.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"selectEnd\", {\n            selected: this.selectedTargets,\n            added: added.map((index) => list[index]),\n            removed: removed.map((index) => prevList[index]),\n            afterAdded: afterAdded.map((index) => afterList[index]),\n            afterRemoved: afterRemoved.map((index) => afterPrevList[index]),\n            isDragStart,\n            isClick: !!e.isClick,\n            isDouble: !!isDouble,\n            rect,\n            inputEvent,\n        });\n    }\n    private onDragStart = (e: OnDragStart, clickedTarget?: Element) => {\n        const { datas, clientX, clientY, inputEvent } = e;\n        const {\n            continueSelect,\n            selectFromInside,\n            selectByClick,\n            rootContainer,\n            boundContainer,\n            preventDragFromInside = true,\n            dragCondition,\n        } = this.options;\n\n        if (dragCondition && !dragCondition(e)) {\n            e.stop();\n            return;\n        }\n        this.findSelectableTargets(datas);\n        datas.startSelectedTargets = this.selectedTargets;\n        datas.scaleMatrix = createMatrix();\n        datas.containerX = 0;\n        datas.containerY = 0;\n\n        let boundArea = {\n            left: -Infinity,\n            top: -Infinity,\n            right: Infinity,\n            bottom: Infinity,\n        };\n        if (rootContainer) {\n            const containerRect = this.container.getBoundingClientRect();\n\n            datas.containerX = containerRect.left;\n            datas.containerY = containerRect.top;\n            datas.scaleMatrix = getDistElementMatrix(this.container, rootContainer);\n        }\n\n        if (boundContainer) {\n            const boundInfo: Required<BoundContainer> =\n                isObject(boundContainer) && \"element\" in boundContainer\n                    ? {\n                        left: true,\n                        top: true,\n                        bottom: true,\n                        right: true,\n                        ...boundContainer,\n                    }\n                    : {\n                        element: boundContainer,\n                        left: true,\n                        top: true,\n                        bottom: true,\n                        right: true,\n                    };\n            const boundElement = boundInfo.element;\n            let rectElement: HTMLElement;\n\n            if (boundElement) {\n                if (isString(boundElement)) {\n                    rectElement = document.querySelector(boundElement);\n                } else if (boundElement === true) {\n                    rectElement = this.container;\n                } else {\n                    rectElement = boundElement;\n                }\n                const rect = rectElement.getBoundingClientRect();\n\n                if (boundInfo.left) {\n                    boundArea.left = rect.left;\n                }\n                if (boundInfo.top) {\n                    boundArea.top = rect.top;\n                }\n                if (boundInfo.right) {\n                    boundArea.right = rect.right;\n                }\n                if (boundInfo.bottom) {\n                    boundArea.bottom = rect.bottom;\n                }\n            }\n        }\n\n        datas.boundArea = boundArea;\n\n        const hitRect = {\n            left: clientX,\n            top: clientY,\n            right: clientX,\n            bottom: clientY,\n            width: 0,\n            height: 0,\n        };\n        let firstPassedTargets: Array<HTMLElement | SVGElement> = [];\n        if (!selectFromInside || selectByClick) {\n            let pointTarget = (clickedTarget ||\n                document.elementFromPoint(clientX, clientY)) as\n                | HTMLElement\n                | SVGElement;\n\n            while (pointTarget) {\n                if (\n                    datas.selectableTargets.indexOf(\n                        pointTarget as HTMLElement | SVGElement\n                    ) > -1\n                ) {\n                    break;\n                }\n                pointTarget = pointTarget.parentElement;\n            }\n            firstPassedTargets = pointTarget ? [pointTarget] : [];\n        }\n        const hasInsideTargets = firstPassedTargets.length > 0;\n        const isPreventSelect = !selectFromInside && hasInsideTargets;\n\n        if (isPreventSelect && !selectByClick) {\n            e.stop();\n            return false;\n        }\n        const type = inputEvent.type;\n        const isTrusted = type === \"mousedown\" || type === \"touchstart\";\n        /**\n         * When the drag starts, the dragStart event is called.\n         * Call the stop () function if you have a specific element or don't want to raise a select\n         * @memberof Selecto\n         * @event dragStart\n         * @param {OnDragStart} - Parameters for the dragStart event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"dragStart\", e => {\n         *   if (e.inputEvent.target.tagName === \"SPAN\") {\n         *     e.stop();\n         *   }\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        const result =\n            !(e as any).isClick && isTrusted\n                ? this.emit(\"dragStart\", { ...e })\n                : true;\n\n        if (!result) {\n            e.stop();\n            return false;\n        }\n\n        if (!continueSelect) {\n            datas.startPassedTargets = [];\n        } else {\n            firstPassedTargets = passTargets(\n                this.selectedTargets,\n                firstPassedTargets\n            );\n            datas.startPassedTargets = this.selectedTargets;\n        }\n        this.select(\n            this.selectedTargets,\n            firstPassedTargets,\n            hitRect,\n            inputEvent,\n            true\n        );\n        datas.startX = clientX;\n        datas.startY = clientY;\n        datas.selectFlag = false;\n        datas.preventDragFromInside = false;\n\n        const offsetPos = calculateMatrixDist(datas.scaleMatrix, [\n            clientX - datas.containerX,\n            clientY - datas.containerY,\n        ]);\n        datas.boundsArea = this.target.style.cssText += `position: ${rootContainer ? \"absolute\" : \"fixed\"};`\n            + `left:0px;top:0px;`\n            + `transform: translate(${offsetPos[0]}px, ${offsetPos[1]}px)`;\n\n        if (isPreventSelect && selectByClick) {\n            inputEvent.preventDefault();\n\n            if (preventDragFromInside) {\n                this.selectEnd(\n                    datas.startSelectedTargets,\n                    datas.startPassedTargets,\n                    hitRect,\n                    e\n                );\n                datas.preventDragFromInside = true;\n            }\n        } else {\n            datas.selectFlag = true;\n            if (type === \"touchstart\") {\n                inputEvent.preventDefault();\n            }\n            const { scrollOptions } = this.options;\n            if (scrollOptions && scrollOptions.container) {\n                this.dragScroll.dragStart(e, scrollOptions);\n            }\n        }\n        return true;\n    };\n    private check(e: any, rect = getRect(e, this.options.ratio)) {\n        const { datas, inputEvent } = e;\n        const { top, left, width, height } = rect;\n        const selectFlag = datas.selectFlag;\n        const {\n            containerX,\n            containerY,\n            scaleMatrix,\n        } = datas;\n        const offsetPos = calculateMatrixDist(scaleMatrix, [\n            left - containerX,\n            top - containerY,\n        ]);\n        const offsetSize = calculateMatrixDist(scaleMatrix, [\n            width,\n            height,\n        ]);\n        let prevSelectedTargets: Array<HTMLElement | SVGElement> = [];\n        let selectedTargets: Array<HTMLElement | SVGElement> = [];\n        if (selectFlag) {\n            this.target.style.cssText +=\n                `display: block;` +\n                `left:0px;top:0px;` +\n                `transform: translate(${offsetPos[0]}px, ${offsetPos[1]}px);` +\n                `width:${offsetSize[0]}px;height:${offsetSize[1]}px;`;\n\n            const passedTargets = this.hitTest(\n                rect,\n                datas.startX,\n                datas.startY,\n                datas.selectableTargets,\n                datas.selectablePoints\n            );\n            prevSelectedTargets = this.selectedTargets;\n            selectedTargets = passTargets(\n                datas.startPassedTargets,\n                passedTargets\n            );\n\n            this.selectedTargets = selectedTargets;\n        }\n        /**\n         * When the drag, the drag event is called.\n         * Call the stop () function if you have a specific element or don't want to raise a select\n         * @memberof Selecto\n         * @event drag\n         * @param {OnDrag} - Parameters for the drag event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"drag\", e => {\n         *   e.stop();\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        const result = this.emit(\"drag\", {\n            ...e,\n            isSelect: selectFlag,\n            rect,\n        });\n        if (result === false) {\n            this.target.style.cssText += \"display: none;\";\n            e.stop();\n            return;\n        }\n\n        if (selectFlag) {\n            this.select(prevSelectedTargets, selectedTargets, rect, inputEvent);\n        }\n    }\n    private onDrag = (e: OnDrag) => {\n        if (e.datas.selectFlag) {\n            const { scrollOptions } = this.options;\n            if (scrollOptions && scrollOptions.container) {\n                if (this.dragScroll.drag(e, scrollOptions)) {\n                    return;\n                }\n            }\n        }\n        this.check(e);\n    };\n    private onDragEnd = (e: OnDragEvent) => {\n        const { datas, inputEvent } = e;\n        const rect = getRect(e, this.options.ratio);\n        const selectFlag = datas.selectFlag;\n\n        if (inputEvent && !e.isClick) {\n            this.emit(\"dragEnd\", {\n                isDouble: !!e.isDouble,\n                isDrag: false,\n                isSelect: selectFlag,\n                ...e,\n                isClick: !!e.isClick,\n                rect,\n            });\n        }\n        this.target.style.cssText += \"display: none;\";\n        if (selectFlag) {\n            datas.selectFlag = false;\n            this.dragScroll.dragEnd();\n        }\n        if (!datas.preventDragFromInside) {\n            this.selectEnd(\n                datas.startSelectedTargets,\n                datas.startPassedTargets,\n                rect,\n                e\n            );\n        }\n    };\n    private sameCombiKey(e: any, isKeyup?: boolean) {\n        const toggleContinueSelect = [].concat(\n            this.options.toggleContinueSelect\n        );\n        const combi = getCombi(e.inputEvent, e.key);\n        const toggleKeys = isArray(toggleContinueSelect[0])\n            ? toggleContinueSelect\n            : [toggleContinueSelect];\n\n        if (isKeyup) {\n            const singleKey = e.key;\n\n            return toggleKeys.some((keys) =>\n                keys.some((key) => key === singleKey)\n            );\n        }\n        return toggleKeys.some((keys) =>\n            keys.every((key) => combi.indexOf(key) > -1)\n        );\n    }\n    private onKeyDown = (e: any) => {\n        if (!this.sameCombiKey(e)) {\n            return;\n        }\n        this.continueSelect = true;\n        /**\n         * When you keydown the key you specified in toggleContinueSelect, the keydown event is called.\n         * @memberof Selecto\n         * @event keydown\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"keydown\", {});\n    };\n    private onKeyUp = (e: any) => {\n        if (!this.sameCombiKey(e, true)) {\n            return;\n        }\n        this.continueSelect = false;\n        /**\n         * When you keyup the key you specified in toggleContinueSelect, the keyup event is called.\n         * @memberof Selecto\n         * @event keyup\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"keyup\", {});\n    };\n    private onBlur = () => {\n        if (this.toggleContinueSelect && this.continueSelect) {\n            this.continueSelect = false;\n            this.emit(\"keyup\", {});\n        }\n    };\n    private onDocumentSelectStart = (e: any) => {\n        if (!this.gesto.isFlag()) {\n            return;\n        }\n        let dragContainer = this.dragContainer;\n\n        if (dragContainer === window) {\n            dragContainer = document.documentElement;\n        }\n        const containers =\n            dragContainer instanceof Element\n                ? [dragContainer]\n                : ([].slice.call(dragContainer) as Element[]);\n        const target = e.target;\n\n        containers.some((container) => {\n            if (container === target || container.contains(target)) {\n                e.preventDefault();\n                return true;\n            }\n        });\n    };\n}\n\ninterface Selecto extends SelectoProperties { }\n\nexport default Selecto;\n","import SelectoManager from \"./SelectoManager\";\n\nclass Selecto extends SelectoManager {\n\n}\nexport default Selecto;\n","import Selecto, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Selecto as any)[name] = modules[name];\n}\n\nexport default Selecto;\n"],"names":["getClient","e","touch","touches","changedTouches","clientX","clientY","createElement","jsx","prevTarget","container","tag","children","attributes","className","style","el","document","name","setAttribute","elChildren","forEach","child","i","split","hasClass","addClass","elStyle","appendChild","h","attrs","_i","_a","_b","_c","diffValue","prev","cur","func","getRect","ratio","boundArea","datas","distX","distY","_d","startX","startY","nextHeight","Math","sqrt","nextWidth","width","abs","height","maxWidth","left","right","maxHeight","top","bottom","tx","min","ty","getDefaultElementRect","rect","getBoundingClientRect","pos1","pos2","pos3","pos4","passTargets","beforeTargets","afterTargets","list","prevList","added","removed","map","index","concat","injector","styled","CLASS_NAME","PROPERTIES","OPTIONS","__spreadArrays","OPTION_TYPES","boundContainer","target","dragContainer","selectableTargets","Array","selectByClick","Boolean","selectFromInside","continueSelect","toggleContinueSelect","keyContainer","hitRate","Number","scrollOptions","Object","checkInput","preventDefault","cspNonce","String","getElementRect","Function","preventDragFromInside","rootContainer","dragCondition","EVENTS","METHODS","__extends","options","_super","_this","DragScroll","clickedTarget","inputEvent","stop","findSelectableTargets","startSelectedTargets","selectedTargets","scaleMatrix","createMatrix","containerX","containerY","Infinity","containerRect","getDistElementMatrix","boundInfo","isObject","element","boundElement","rectElement","isString","querySelector","hitRect","firstPassedTargets","pointTarget","elementFromPoint","indexOf","parentElement","hasInsideTargets","length","isPreventSelect","type","isTrusted","result","isClick","emit","startPassedTargets","select","selectFlag","offsetPos","calculateMatrixDist","boundsArea","cssText","selectEnd","dragScroll","dragStart","drag","check","isDouble","isDrag","isSelect","dragEnd","sameCombiKey","gesto","isFlag","window","documentElement","containers","Element","slice","call","some","contains","body","undefined","initElement","initDragScroll","setKeyController","setKeyEvent","value","triggerDragStart","off","keycon","destroy","unset","injectResult","removeEvent","onDocumentSelectStart","info","points","fitPoints","selectableElements","push","elements","querySelectorAll","getEventDatas","getSelectableElements","selectablePoints","getElementPoints","dragEvent","onDragStart","onDragEnd","KeyController","keydown","onKeyDown","keyup","onKeyUp","on","onBlur","parentNode","Gesto","checkWindowBlur","onDrag","addEvent","inject","nonce","selectRect","targets","rectPoints","filter","_","inArea","isInside","overlapPoints","getOverlapPoints","overlapSize","getAreaSize","targetSize","rate","between","round","direction","offsetX","offsetY","pos","scrollBy","prevSelectedTargets","isStart","selected","afterAdded","afterRemoved","afterPrevList","afterList","isDragStart","offsetSize","passedTargets","hitTest","isKeyup","combi","getCombi","key","toggleKeys","isArray","singleKey_1","keys","every","Selecto","Properties","prototype","property","enumerable","configurable","get","setter","camelize","set","defineProperty","EventEmitter","SelectoManager","modules"],"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"}