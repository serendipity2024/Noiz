{"version":3,"file":"moveable.cjs.js","sources":["../src/react-moveable/ables/AbleManager.ts","../src/react-moveable/consts.ts","../src/react-moveable/utils.tsx","../src/react-moveable/ables/Pinchable.ts","../src/react-moveable/gesto/CustomGesto.ts","../src/react-moveable/groupUtils.ts","../src/react-moveable/gesto/GestoUtils.ts","../src/react-moveable/ables/snappable/snap.ts","../src/react-moveable/ables/snappable/innerBounds.ts","../src/react-moveable/ables/snappable/bounds.ts","../src/react-moveable/ables/snappable/render.tsx","../src/react-moveable/ables/Snappable.tsx","../src/react-moveable/ables/Draggable.tsx","../src/react-moveable/renderDirections.tsx","../src/react-moveable/ables/Rotatable.tsx","../src/react-moveable/ables/Resizable.ts","../src/react-moveable/ables/Scalable.ts","../src/react-moveable/ables/Warpable.tsx","../src/react-moveable/classNames.ts","../src/react-moveable/ables/DragArea.tsx","../src/react-moveable/ables/Origin.tsx","../src/react-moveable/ables/Scrollable.ts","../src/react-moveable/ables/Default.ts","../src/react-moveable/ables/Padding.tsx","../src/react-moveable/ables/roundable/borderRadius.tsx","../src/react-moveable/ables/Clippable.tsx","../src/react-moveable/ables/OriginDraggable.tsx","../src/react-moveable/ables/Roundable.tsx","../src/react-moveable/ables/BeforeRenderable.ts","../src/react-moveable/ables/Renderable.ts","../src/react-moveable/gesto/getAbleGesto.ts","../src/react-moveable/EventManager.ts","../src/react-moveable/MoveableManager.tsx","../src/react-moveable/ables/Groupable.tsx","../src/react-moveable/ables/Clickable.ts","../src/react-moveable/ables/edgeDraggable.tsx","../src/react-moveable/ables/IndividualGroupable.tsx","../src/react-moveable/ables/consts.ts","../src/react-moveable/MoveableGroup.tsx","../src/react-moveable/MoveableIndividualGroup.tsx","../src/react-moveable/InitialMoveable.tsx","../src/react-moveable/Moveable.tsx","../src/react-moveable/makeMoveable.ts","../src/react-moveable/index.umd.ts"],"sourcesContent":["import { Able, DefaultProps } from \"../types\";\n\nexport function makeAble<\n    Name extends string,\n    AbleObject extends Partial<Able<any, any>>,\n    Props extends DefaultProps<Name, AbleObject>,\n>(name: Name, able: AbleObject) {\n    return {\n        events: {} as const,\n        props: {\n            [name]: Boolean,\n        } as Props,\n        name,\n        ...able,\n    } as const;\n}\n","import getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\nimport { MoveableInterface } from \"./types\";\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    let defaultCursor = \"ns-resize\";\n\n    if (degree45 === 135) {\n        defaultCursor = \"nwse-resize\";\n    } else if (degree45 === 45) {\n        defaultCursor = \"nesw-resize\";\n    } else if (degree45 === 90) {\n        defaultCursor = \"ew-resize\";\n    }\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};cursor: -webkit-image-set(url('${x1}') 1x, url('${x2}') 2x) 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT = agent.browser.webkit;\nexport const IS_WEBKIT605 = IS_WEBKIT && (() => {\n    const res = /applewebkit\\/([^\\s]+)/g.exec(navigator.userAgent.toLowerCase());\n\n    return res ? parseFloat(res[1]) < 605 : false;\n})();\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = `\n{\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tleft: 0;\n\ttop: 0;\n    z-index: 3000;\n    --moveable-color: #4af;\n    --zoom: 1;\n    --zoompx: 1px;\n    will-change: transform;\n}\n.control-box {\n    z-index: 0;\n}\n.line, .control {\n    position: absolute;\n\tleft: 0;\n    top: 0;\n    will-change: transform;\n}\n.control {\n\twidth: 14px;\n\theight: 14px;\n\tborder-radius: 50%;\n\tborder: 2px solid #fff;\n\tbox-sizing: border-box;\n    background: #4af;\n    background: var(--moveable-color);\n\tmargin-top: -7px;\n    margin-left: -7px;\n    border: 2px solid #fff;\n    z-index: 10;\n}\n.padding {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100px;\n    height: 100px;\n    transform-origin: 0 0;\n}\n.line {\n\twidth: 1px;\n    height: 1px;\n    background: #4af;\n    background: var(--moveable-color);\n\ttransform-origin: 0px 50%;\n}\n.line.dashed {\n    box-sizing: border-box;\n    background: transparent;\n}\n.line.dashed.horizontal {\n    border-top: 1px dashed #4af;\n    border-top-color: #4af;\n    border-top-color: var(--moveable-color);\n}\n.line.dashed.vertical {\n    border-left: 1px dashed #4af;\n    border-left-color: #4af;\n    border-left-color: var(--moveable-color);\n}\n.line.vertical {\n    transform: translateX(-50%);\n}\n.line.horizontal {\n    transform: translateY(-50%);\n}\n.line.vertical.bold {\n    width: 2px;\n}\n.line.horizontal.bold {\n    height: 2px;\n}\n\n.control.origin {\n\tborder-color: #f55;\n\tbackground: #fff;\n\twidth: 12px;\n\theight: 12px;\n\tmargin-top: -6px;\n    margin-left: -6px;\n\tpointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"] {\n\t${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n.group {\n    z-index: -1;\n}\n.area {\n    position: absolute;\n}\n.area-pieces {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n}\n.area.avoid, .area.pass {\n    pointer-events: none;\n}\n.area.avoid+.area-pieces {\n    display: block;\n}\n.area-piece {\n    position: absolute;\n}\n\n${IS_WEBKIT605 ? `:global svg *:before {\n\tcontent:\"\";\n\ttransform-origin: inherit;\n}` : \"\"}\n`;\nexport const DRAGGER_EVENTS = [\"dragstart\", \"drag\", \"dragend\", \"pinchstart\", \"pinch\", \"pinchend\"];\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const FLOAT_POINT_NUM = 0.0001;\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\nexport const DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    s: [2, 3],\n    w: [2, 0],\n    e: [1, 3],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\n    \"isMoveableElement\",\n    \"updateRect\",\n    \"updateTarget\",\n    \"destroy\",\n    \"dragStart\",\n    \"isInside\",\n    \"hitTest\",\n    \"setState\",\n    \"getRect\",\n    \"request\",\n    \"isDragging\",\n    \"getManager\",\n];\n","import { PREFIX, IS_WEBKIT605, TINY_NUM, IS_WEBKIT } from \"./consts\";\nimport { prefixNames, InvertObject } from \"framework-utils\";\nimport {\n    splitBracket, isUndefined, isObject, splitUnit,\n    IObject, hasClass, isArray, isString, getRad,\n    getShapeDirection, isFunction,\n} from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, calculate,\n    multiplies,\n    minus,\n    getOrigin,\n    createScaleMatrix,\n    plus,\n    ignoreDimension,\n    convertCSStoMatrix,\n    convertMatrixtoCSS,\n} from \"@scena/matrix\";\nimport {\n    MoveableManagerState, Able, MoveableClientRect,\n    MoveableProps, ControlPose, ArrayFormat, MoveableRefType,\n    MatrixInfo, ExcludeEndParams, ExcludeParams,\n} from \"./types\";\nimport { parse, toMat, calculateMatrixDist } from \"css-to-mat\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    const value = splitBracket(transform).value!;\n    return value.split(/s*,\\s*/g).map(v => parseFloat(v));\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    const transformOrigin = style.transformOrigin;\n\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n) {\n    const body = document.body;\n    let target = !el || isParent ? el : el.parentElement;\n    let isEnd = el === lastParent || target === lastParent;\n    let position = \"relative\";\n\n    while (target && target !== body) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const style = getComputedStyle(target);\n        const transform = style.transform;\n        position = style.position!;\n\n        if (target.tagName.toLowerCase() === \"svg\" || position !== \"static\" || (transform && transform !== \"none\")) {\n            break;\n        }\n        target = target.parentElement;\n        position = \"relative\";\n    }\n    return {\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === body,\n        offsetParent: target as HTMLElement || body,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    container: SVGElement | HTMLElement | null | undefined,\n    style: CSSStyleDeclaration,\n    isFixed: boolean,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n\n    if (isFixed) {\n        const containerClientRect = (container || document.documentElement).getBoundingClientRect();\n\n        offsetLeft -= containerClientRect.left;\n        offsetTop -= containerClientRect.top;\n    }\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    let targetOrigin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT605\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOrigin(style).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        hasOffset = true;\n\n        [\n            offsetLeft, offsetTop, origin[0], origin[1],\n        ] = getSVGGraphicsOffset(el as SVGGraphicsElement, origin);\n    } else {\n        origin = getTransformOrigin(style).map(pos => parseFloat(pos));\n        targetOrigin = origin.slice();\n    }\n    return {\n        tagName,\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft || 0, offsetTop || 0],\n        origin,\n        targetOrigin,\n    };\n}\nexport function getBodyOffset(\n    el: HTMLElement | SVGElement,\n    isSVG: boolean,\n    style: CSSStyleDeclaration = getComputedStyle(el),\n) {\n    const bodyStyle = getComputedStyle(document.body);\n    const bodyPosition = bodyStyle.position;\n    if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n        return [0, 0];\n    }\n\n    let marginLeft = parseInt(bodyStyle.marginLeft, 10);\n    let marginTop = parseInt(bodyStyle.marginTop, 10);\n\n    if (style.position === \"absolute\") {\n        if (style.top !== \"auto\" || style.bottom !== \"auto\") {\n            marginTop = 0;\n        }\n        if (style.left !== \"auto\" || style.right !== \"auto\") {\n            marginLeft = 0;\n        }\n    }\n\n    return [marginLeft, marginTop];\n}\nexport function convert3DMatrixes(matrixes: MatrixInfo[]) {\n    matrixes.forEach(info => {\n        const matrix = info.matrix;\n\n        if (matrix) {\n            info.matrix = convertDimension(matrix, 3, 4);\n        }\n    });\n}\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    // prevMatrix?: number[],\n) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: MatrixInfo[] = [];\n    let isEnd = false;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetTransformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    const offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n\n    // if (prevMatrix) {\n    //     isEnd = target === container;\n    //     if (prevMatrix.length > 10) {\n    //         is3d = true;\n    //         n = 4;\n    //     }\n    //     container = target.parentElement;\n    // }\n\n    while (el && !isEnd) {\n        const style: CSSStyleDeclaration = getComputedStyle(el);\n        const position = style.position;\n        const isFixed = position === \"fixed\";\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(style.transform!));\n\n        // convert 3 to 4\n        const length = matrix.length;\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n\n            convert3DMatrixes(matrixes);\n        }\n        if (is3d && length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            tagName,\n            hasOffset,\n            isSVG,\n            origin,\n            targetOrigin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, container, style, isFixed);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n        if (tagName === \"svg\" && targetMatrix) {\n            // scale matrix for svg's SVGElements.\n            matrixes.push({\n                type: \"target\",\n                target: el,\n                matrix: getSVGMatrix(el as SVGSVGElement, n),\n            });\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createIdentityMatrix(n),\n            });\n        } else if (tagName === \"g\" && target !== el) {\n            offsetLeft = 0;\n            offsetTop = 0;\n        }\n        const {\n            offsetParent,\n            isEnd: isOffsetEnd,\n            isStatic,\n        } = getOffsetInfo(el, container);\n\n        if (IS_WEBKIT && hasOffset && !isSVG && isStatic && (position === \"relative\" || position === \"static\")) {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            isEnd = isEnd || isOffsetEnd;\n        }\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n\n        if (hasOffset && offsetContainer !== offsetParent) {\n            // border\n            parentClientLeft = offsetParent.clientLeft;\n            parentClientTop = offsetParent.clientTop;\n        }\n        if (hasOffset && offsetParent === document.body) {\n            const margin = getBodyOffset(el, false, style);\n            offsetLeft += margin[0];\n            offsetTop += margin[1];\n        }\n        matrixes.push({\n            type: \"target\",\n            target: el,\n            matrix: getAbsoluteMatrix(matrix, n, origin),\n        });\n        if (hasOffset) {\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createOriginMatrix([\n                    offsetLeft - el.scrollLeft + parentClientLeft,\n                    offsetTop - el.scrollTop + parentClientTop,\n                ], n),\n            });\n        } else {\n            // svg\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                origin,\n            });\n        }\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (!targetTransformOrigin) {\n            targetTransformOrigin = targetOrigin;\n        }\n\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            isEnd = isOffsetEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    if (!targetTransformOrigin) {\n        targetTransformOrigin = [0, 0];\n    }\n\n    return {\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        targetOrigin: targetTransformOrigin,\n        is3d,\n    };\n}\nexport function calculateElementInfo(\n    target?: SVGElement | HTMLElement | null,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // state?: Partial<MoveableManagerState> | false,\n) {\n    // const prevMatrix = state ? state.beforeMatrix : undefined;\n    // const prevRootMatrix = state ? state.rootMatrix : undefined;\n    // const prevN = state ? (state.is3d ? 4 : 3) : undefined;\n    let width = 0;\n    let height = 0;\n    let rotation = 0;\n    let allResult: {} = {};\n\n    if (target) {\n        const style = getComputedStyle(target);\n\n        width = (target as HTMLElement).offsetWidth;\n        height = (target as HTMLElement).offsetHeight;\n\n        if (isUndefined(width)) {\n            [width, height] = getSize(target, style, true);\n        }\n    }\n\n    if (target) {\n        const result = calculateMatrixStack(\n            target, container, rootContainer, isAbsolute3d,\n            // prevMatrix, prevRootMatrix, prevN,\n        );\n        const position = calculateMoveablePosition(\n            result.allMatrix,\n            result.transformOrigin,\n            width, height,\n        );\n        allResult = {\n            ...result,\n            ...position,\n        };\n        const rotationPosition = calculateMoveablePosition(\n            result.allMatrix, [50, 50], 100, 100,\n        );\n        rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n    }\n    const n = isAbsolute3d ? 4 : 3;\n    return {\n        width,\n        height,\n        rotation,\n        // rootMatrix: number[];\n        // beforeMatrix: number[];\n        // offsetMatrix: number[];\n        // allMatrix: number[];\n        // targetMatrix: number[];\n        // targetTransform: string;\n        // transformOrigin: number[];\n        // targetOrigin: number[];\n        // is3d: boolean;\n        rootMatrix: createIdentityMatrix(n),\n        beforeMatrix: createIdentityMatrix(n),\n        offsetMatrix: createIdentityMatrix(n),\n        allMatrix: createIdentityMatrix(n),\n        targetMatrix: createIdentityMatrix(n),\n        targetTransform: \"\",\n        transformOrigin: [0, 0],\n        targetOrigin: [0, 0],\n        is3d: !!isAbsolute3d,\n        // left: number;\n        // top: number;\n        // right: number;\n        // bottom: number;\n        // origin: number[];\n        // pos1: number[];\n        // pos2: number[];\n        // pos3: number[];\n        // pos4: number[];\n        // direction: 1 | -1;\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        direction: 1,\n        ...allResult,\n    };\n}\nexport function getElementInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n) {\n    return calculateElementInfo(target, container, rootContainer, true);\n}\nexport function calculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // prevMatrix?: number[],\n    // prevRootMatrix?: number[],\n    // prevN?: number,\n) {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        targetOrigin,\n        offsetContainer,\n    } = getMatrixStackInfo(target, container); // prevMatrix\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n    } = getMatrixStackInfo(offsetContainer, rootContainer); // prevRootMatrix\n\n    // if (rootContainer === document.body) {\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\n    // }\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\n    const n = isNext3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    const originalContainer = container || document.body;\n    let targetMatrix = prevTargetMatrix;\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let allMatrix = createIdentityMatrix(n);\n    let rootMatrix = createIdentityMatrix(n);\n    let beforeMatrix = createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n    const endContainer = getOffsetInfo(originalContainer, originalContainer, true).offsetParent;\n\n    rootMatrixes.reverse();\n    matrixes.reverse();\n\n    if (!is3d && isNext3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n\n        convert3DMatrixes(matrixes);\n    }\n    if (!isRoot3d && isNext3d) {\n        convert3DMatrixes(rootMatrixes);\n    }\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    // if (!prevRootMatrix) {\n    rootMatrixes.forEach(info => {\n        rootMatrix = multiply(rootMatrix, info.matrix!, n);\n    });\n    // }\n    matrixes.forEach((info, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // calculate for SVGElement\n        if (!info.matrix) {\n            const nextInfo = matrixes[i + 1];\n            const offset = getSVGOffset(\n                info,\n                nextInfo,\n                endContainer,\n                n,\n                multiply(rootMatrix, allMatrix, n),\n            );\n            info.matrix = createOriginMatrix(offset, n);\n        }\n        allMatrix = multiply(allMatrix, info.matrix!, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const targetTransform = makeMatrixCSS(\n        isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\n        isMatrix3d,\n    );\n\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n\n    return {\n        rootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        targetTransform,\n        transformOrigin,\n        targetOrigin,\n        is3d: isNext3d,\n    };\n}\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n\n    if (!el) {\n        return { x: 0, y: 0, width: 0, height: 0, clientWidth, clientHeight };\n    }\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n        clientWidth,\n        clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n        clientWidth,\n        clientHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n * (n - 1)],\n        scaleMatrix[n * (n - 1) + 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n) {\n    if (!el.getBBox) {\n        return [0, 0];\n    }\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function calculatePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function calculatePoses(matrix: number[], width: number, height: number, n: number) {\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => calculatePosition(matrix, pos, n));\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function calculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = calculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    offsetInfo: MatrixInfo,\n    targetInfo: MatrixInfo,\n    container: HTMLElement | SVGElement,\n    n: number,\n    beforeMatrix: number[],\n) {\n    const target = offsetInfo.target;\n    const origin = offsetInfo.origin!;\n    const targetMatrix = targetInfo.matrix!;\n    const [width, height] = getSize(target, undefined, true);\n    const containerClientRect = container.getBoundingClientRect();\n    let margin = [0, 0];\n\n    if (container === document.body) {\n        margin = getBodyOffset(target, true);\n    }\n    const rect = target.getBoundingClientRect();\n    const rectLeft\n        = rect.left - containerClientRect.left + container.scrollLeft\n        - (container.clientLeft || 0) + margin[0];\n    const rectTop\n        = rect.top - containerClientRect.top + container.scrollTop\n        - (container.clientTop || 0) + margin[1];\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        targetMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = calculateRect(mat, width, height, n);\n    const posOrigin = calculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            calculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            calculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            targetMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = calculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\nexport function calculateMoveablePosition(matrix: number[], origin: number[], width: number, height: number) {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const poses = calculatePoses(matrix, width, height, n);\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = poses;\n    let [originX, originY] = calculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const direction = getShapeDirection(poses);\n\n    return {\n        left,\n        top,\n        right,\n        bottom,\n        origin: [originX, originY],\n        pos1: [x1, y1],\n        pos2: [x2, y2],\n        pos3: [x3, y3],\n        pos4: [x4, y4],\n        direction,\n    };\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], zoom = 1, rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, zoom: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translateZ(0px) translate(${x}px, ${y}px) rotate(${rotation}rad) scale(${zoom})`,\n    };\n}\nexport function getCSSSize(target: SVGElement | HTMLElement) {\n    const style = getComputedStyle(target);\n\n    return [\n        parseFloat(style.width!),\n        parseFloat(style.height!),\n    ];\n}\nexport function getSize(\n    target: SVGElement | HTMLElement,\n    style: CSSStyleDeclaration = getComputedStyle(target),\n    isOffset?: boolean,\n    isBoxSizing: boolean = isOffset || style.boxSizing === \"border-box\",\n) {\n    let width = (target as HTMLElement).offsetWidth;\n    let height = (target as HTMLElement).offsetHeight;\n    const hasOffset = !isUndefined(width);\n\n    if ((isOffset || isBoxSizing) && hasOffset) {\n        return [width, height];\n    }\n    if (!hasOffset && target.tagName.toLowerCase() !== \"svg\") {\n        const bbox = (target as SVGGraphicsElement).getBBox();\n        return [bbox.width, bbox.height];\n    }\n\n    width = target.clientWidth;\n    height = target.clientHeight;\n\n    if (isOffset || isBoxSizing) {\n        const borderLeft = parseFloat(style.borderLeftWidth!) || 0;\n        const borderRight = parseFloat(style.borderRightWidth!) || 0;\n        const borderTop = parseFloat(style.borderTopWidth!) || 0;\n        const borderBottom = parseFloat(style.borderBottomWidth!) || 0;\n\n        return [\n            width + borderLeft + borderRight,\n            height + borderTop + borderBottom,\n        ];\n    } else {\n        const paddingLeft = parseFloat(style.paddingLeft!) || 0;\n        const paddingRight = parseFloat(style.paddingRight!) || 0;\n        const paddingTop = parseFloat(style.paddingTop!) || 0;\n        const paddingBottom = parseFloat(style.paddingBottom!) || 0;\n\n        return [\n            width - paddingLeft - paddingRight,\n            height - paddingTop - paddingBottom,\n        ];\n    }\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\nexport function getTargetInfo(\n    moveableElement?: HTMLElement | null,\n    target?: HTMLElement | SVGElement | null,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    // state?: Partial<MoveableManagerState> | false | undefined,\n) {\n    let beforeDirection: 1 | -1 = 1;\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let moveableClientRect = resetClientRect();\n\n    const result = calculateElementInfo(\n        target, container!, rootContainer!, false,\n        // state,\n    );\n    if (target) {\n        const n = result.is3d ? 4 : 3;\n        const beforePosition = calculateMoveablePosition(\n            result.offsetMatrix,\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\n            result.width, result.height,\n        );\n        beforeDirection = beforePosition.direction;\n        beforeOrigin = plus(\n            beforePosition.origin,\n            [beforePosition.left - result.left, beforePosition.top - result.top],\n        );\n\n        targetClientRect = getClientRect(target);\n        containerClientRect = getClientRect(\n            getOffsetInfo(parentContainer, parentContainer, true).offsetParent || document.body,\n            true,\n        );\n        if (moveableElement) {\n            moveableClientRect = getClientRect(moveableElement);\n        }\n    }\n\n    return {\n        targetClientRect,\n        containerClientRect,\n        moveableClientRect,\n        beforeDirection,\n        beforeOrigin,\n        originalBeforeOrigin: beforeOrigin,\n        target,\n        ...result,\n    };\n}\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, right: 0,\n        top: 0, bottom: 0,\n        width: 0, height: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean) {\n    let left = 0;\n    let top = 0;\n    let width = 0;\n    let height = 0;\n\n    if (el === document.body || el === document.documentElement) {\n        width = window.innerWidth;\n        height = window.innerHeight;\n        left = -(document.documentElement.scrollLeft || document.body.scrollLeft);\n        top = -(document.documentElement.scrollTop || document.body.scrollTop);\n    } else {\n        const clientRect = el.getBoundingClientRect();\n\n        left = clientRect.left;\n        top = clientRect.top;\n        width = clientRect.width;\n        height = clientRect.height;\n    }\n\n    const rect: MoveableClientRect = {\n        left,\n        right: left + width,\n        top,\n        bottom: top + height,\n        width,\n        height,\n    };\n\n    if (isExtends) {\n        rect.clientLeft = el.clientLeft;\n        rect.clientTop = el.clientTop;\n        rect.clientWidth = el.clientWidth;\n        rect.clientHeight = el.clientHeight;\n        rect.scrollWidth = el.scrollWidth;\n        rect.scrollHeight = el.scrollHeight;\n        rect.overflow = getComputedStyle(el).overflow !== \"visible\";\n    }\n    return rect;\n}\nexport function getDirection(target: SVGElement | HTMLElement) {\n    if (!target) {\n        return;\n    }\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\nexport function throttle(num: number, unit: number) {\n    if (!unit) {\n        return num;\n    }\n    return Math.round(num / unit) * unit;\n}\nexport function throttleArray(nums: number[], unit: number) {\n    nums.forEach((_, i) => {\n        nums[i] = throttle(nums[i], unit);\n    });\n    return nums;\n}\n\nexport function unset(self: any, name: string) {\n    if (self[name]) {\n        self[name].unset();\n        self[name] = null;\n    }\n}\n\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeParams<T>,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    const nextParams = {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        moveable,\n        datas: datas.datas,\n    } as any;\n\n    if (datas.isStartEvent) {\n        datas.lastEvent = nextParams;\n    } else {\n        datas.isStartEvent = true;\n    }\n    return nextParams;\n}\nexport function fillEndParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeEndParams<T> & { isDrag?: boolean },\n): T {\n    const datas = e.datas;\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n\n    return {\n        isDrag,\n        ...params,\n        moveable,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        lastEvent: datas.lastEvent,\n        isDouble: e.isDouble,\n        datas: datas.datas,\n    } as any;\n}\n\nexport function triggerEvent<T extends IObject<any> = MoveableProps, U extends keyof T = string>(\n    moveable: any,\n    name: U,\n    params: T[U] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\n    isManager?: boolean,\n): any {\n    return moveable.triggerEvent(name, params, isManager);\n}\n\nexport function getComputedStyle(el: Element, pseudoElt?: string | null) {\n    return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function calculateInversePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(\n        invert(matrix, n),\n        convertPositionMatrix(pos, n),\n        n,\n    );\n}\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = calculateInversePosition(rootMatrix, [e.distX, e.distY], n);\n\n    return e;\n}\n\nexport function calculatePadding(\n    matrix: number[], pos: number[],\n    transformOrigin: number[], origin: number[], n: number,\n) {\n    return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\n\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\n}\n\nexport function moveControlPos(\n    controlPoses: ControlPose[],\n    index: number,\n    dist: number[],\n    isRect?: boolean,\n) {\n    const { direction, sub } = controlPoses[index];\n    const dists = controlPoses.map(() => [0, 0]);\n    const directions = direction ? direction.split(\"\") : [];\n\n    if (isRect && index < 8) {\n        const verticalDirection = directions.filter(dir => dir === \"w\" || dir === \"e\")[0];\n        const horizontalDirection = directions.filter(dir => dir === \"n\" || dir === \"s\")[0];\n\n        dists[index] = dist;\n        controlPoses.forEach((controlPose, i) => {\n            const {\n                direction: controlDir,\n            } = controlPose;\n\n            if (!controlDir) {\n                return;\n            }\n            if (controlDir.indexOf(verticalDirection) > -1) {\n                dists[i][0] = dist[0];\n            }\n            if (controlDir.indexOf(horizontalDirection) > -1) {\n                dists[i][1] = dist[1];\n            }\n        });\n        if (verticalDirection) {\n            dists[1][0] = dist[0] / 2;\n            dists[5][0] = dist[0] / 2;\n        }\n        if (horizontalDirection) {\n            dists[3][1] = dist[1] / 2;\n            dists[7][1] = dist[1] / 2;\n        }\n    } else if (direction && !sub) {\n        directions.forEach(dir => {\n            const isVertical = dir === \"n\" || dir === \"s\";\n\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: dirDir,\n                    horizontal: dirHorizontal,\n                    vertical: dirVertical,\n                } = controlPose;\n\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\n                    return;\n                }\n                dists[i] = [\n                    isVertical || !dirHorizontal ? 0 : dist[0],\n                    !isVertical || !dirVertical ? 0 : dist[1],\n                ];\n            });\n        });\n    } else {\n        dists[index] = dist;\n    }\n\n    return dists;\n}\n\nexport function getTinyDist(v: number) {\n    return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\n\nexport function directionCondition(moveable: any, e: any) {\n    if (e.isRequest) {\n        if (e.requestAble === \"resizable\" || e.requestAble === \"scalable\") {\n            return e.parentDirection!;\n        } else {\n            return false;\n        }\n    }\n    return hasClass(e.inputEvent.target, prefix(\"direction\"));\n}\n\nexport function invertObject<T extends IObject<any>>(obj: T): InvertObject<T> {\n    const nextObj: IObject<any> = {};\n\n    for (const name in obj) {\n        nextObj[obj[name]] = name;\n    }\n    return nextObj as any;\n}\n\nexport function getTransform(transforms: string[], index: number) {\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n    const beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n    const targetFunctionText = transforms[index] || \"\";\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n    const afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n\n    const beforeFunctions = parse(beforeFunctionTexts);\n    const beforeFunctions2 = parse(beforeFunctionTexts2);\n    const targetFunctions = parse([targetFunctionText]);\n    const afterFunctions = parse(afterFunctionTexts);\n    const afterFunctions2 = parse(afterFunctionTexts2);\n\n\n    const beforeFunctionMatrix = toMat(beforeFunctions);\n    const beforeFunctionMatrix2 = toMat(beforeFunctions2);\n    const afterFunctionMatrix = toMat(afterFunctions);\n    const afterFunctionMatrix2 = toMat(afterFunctions2);\n    const allFunctionMatrix = multiply(\n        beforeFunctionMatrix,\n        afterFunctionMatrix,\n        4,\n    );\n    return {\n        transforms,\n        beforeFunctionMatrix,\n        beforeFunctionMatrix2,\n        targetFunctionMatrix: toMat(targetFunctions),\n        afterFunctionMatrix,\n        afterFunctionMatrix2,\n        allFunctionMatrix,\n        beforeFunctions,\n        beforeFunctions2,\n        targetFunction: targetFunctions[0],\n        afterFunctions,\n        afterFunctions2,\n        beforeFunctionTexts,\n        beforeFunctionTexts2,\n        targetFunctionText,\n        afterFunctionTexts,\n        afterFunctionTexts2,\n    };\n}\n\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\n    if (!arr || !isObject(arr)) {\n        return false;\n    }\n    return isArray(arr) || \"length\" in arr;\n}\n\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector: true): T | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector?: boolean): T | string | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>,\n    isSelector?: boolean,\n): any {\n    if (!target) {\n        return null;\n    }\n    if (isString(target)) {\n        if (isSelector) {\n            return document.querySelector(target);\n        }\n        return target;\n    }\n    if (isFunction(target)) {\n        return target();\n    }\n    if (\"current\" in target) {\n        return target.current;\n    }\n    return target;\n}\n\nexport function getRefTargets(\n    targets: MoveableRefType | ArrayFormat<MoveableRefType>,\n    isSelector: true): Array<HTMLElement | SVGElement | null>;\nexport function getRefTargets(\n    targets: MoveableRefType | ArrayFormat<MoveableRefType>,\n    isSelector?: boolean): Array<HTMLElement | SVGElement | string | null>;\nexport function getRefTargets(targets: MoveableRefType | ArrayFormat<MoveableRefType>, isSelector?: boolean) {\n    if (!targets) {\n        return [];\n    }\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n\n    return userTargets.reduce((prev, target) => {\n        if (isString(target) && isSelector) {\n            return [...prev, ...[].slice.call(document.querySelectorAll<HTMLElement>(target))];\n        }\n        prev.push(getRefTarget(target, isSelector));\n        return prev;\n    }, [] as Array<SVGElement | HTMLElement | string | null | undefined>);\n}\n\nexport function getElementTargets(\n    targets: Array<SVGElement | HTMLElement | string | null | undefined>,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n) {\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\n    targets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                elementTargets.push(...selectorMap[target]);\n            }\n            return;\n        }\n        elementTargets.push(target);\n    });\n\n    return elementTargets;\n}\n\nexport function minmax(...values: number[]) {\n    return [Math.min(...values), Math.max(...values)];\n}\n\n\nexport function getAbsoluteRotation(pos1: number[], pos2: number[], direction: number) {\n    let deg = getRad(pos1, pos2) / Math.PI * 180;\n\n    deg = direction >= 0 ? deg : 180 - deg;\n    deg = deg >= 0 ? deg : 360 + deg;\n\n    return deg;\n}\n\n\nexport function getDragDistByState(state: MoveableManagerState, dist: number[]) {\n    const {\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    let inverseMatrix = invert(rootMatrix, n);\n\n    if (!is3d) {\n        inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n    }\n    inverseMatrix[12] = 0;\n    inverseMatrix[13] = 0;\n    inverseMatrix[14] = 0;\n\n    return calculateMatrixDist(inverseMatrix, dist);\n}\n","import { makeAble } from \"./AbleManager\";\nimport { triggerEvent, fillParams, fillEndParams } from \"../utils\";\nimport {\n    PinchableProps, Able, SnappableState,\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\nexport default makeAble(\"pinchable\", {\n    events: {\n        onPinchStart: \"pinchStart\",\n        onPinch: \"pinch\",\n        onPinchEnd: \"pinchEnd\",\n        onPinchGroupStart: \"pinchGroupStart\",\n        onPinchGroup: \"pinchGroup\",\n        onPinchGroupEnd: \"pinchGroupEnd\",\n    } as const,\n    dragStart() {\n        return true;\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, targets, angle, originalDatas } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        pinchAbles.forEach(able => {\n            originalDatas[able.name] = originalDatas[able.name] || {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: originalDatas[able.name],\n                parentRotate: angle,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const {\n            datas, scale: pinchScale, distance,\n            originalDatas,\n            inputEvent, targets,\n            angle,\n        } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: originalDatas[able.name],\n                inputEvent,\n                parentDistance,\n                parentRotate: angle,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: originalDatas[able.name],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        return this.pinchStart!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.pinch!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.pinchEnd!(moveable, { ...e, targets: moveable.props.targets });\n    },\n});\n\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\nimport { convertDragDist } from \"../utils\";\n\nexport function setCustomDrag(\n    e: any,\n    state: MoveableManagerState<any>,\n    delta: number[],\n    isPinch: boolean,\n    isConvert: boolean,\n) {\n\n    const result = state.gesto!.move(delta, e.inputEvent);\n    const datas = result.originalDatas || result.datas;\n    const draggableDatas = datas.draggable || (datas.draggable = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isDrag: true,\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: draggableDatas,\n        originalDatas: e.originalDatas,\n    };\n}\n\nexport default class CustomGesto {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n\n    public dragStart(client: number[], e: any) {\n        this.isDrag = false;\n        this.isFlag = false;\n        const originalDatas = e.originalDatas;\n\n        this.datas = originalDatas;\n        if (!originalDatas.draggable) {\n            originalDatas.draggable = {};\n        }\n        return {\n            ...this.move(client, e.inputEvent),\n            type: \"dragstart\",\n        };\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n            this.isDrag = true;\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            type: \"drag\",\n            clientX,\n            clientY,\n            inputEvent,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas.draggable,\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentGesto: this,\n        };\n    }\n}\n","import { Able, MoveableGroupInterface, MoveableManagerInterface } from \"./types\";\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\n\nexport function fillChildEvents(\n    moveable: MoveableGroupInterface<any, any>,\n    name: string,\n    e: any,\n): any[] {\n    const datas = e.originalDatas;\n\n    datas.groupable = datas.groupable || {};\n\n    const groupableDatas = datas.groupable;\n\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\n\n    const childDatas = groupableDatas.childDatas;\n\n    return moveable.moveables.map((_, i) => {\n        childDatas[i] = childDatas[i] || {};\n        childDatas[i][name] = childDatas[i][name] || {};\n\n        return {\n            ...e,\n            datas: childDatas[i][name],\n            originalDatas: childDatas[i],\n        };\n    });\n}\nexport function triggerChildGesto(\n    moveable: MoveableGroupInterface<any, any>,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const events = fillChildEvents(moveable, able.name, e);\n\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent: any = ev;\n\n        if (isStart) {\n            childEvent = new CustomGesto().dragStart(delta, ev);\n        } else {\n            if (!childMoveable.state.gesto) {\n                childMoveable.state.gesto = datas.childGestos[i];\n            }\n            childEvent = setCustomDrag(ev, childMoveable.state, delta, isPinch, isConvert);\n        }\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            childMoveable.state.gesto = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childGestos = moveables.map(child => child.state.gesto);\n    }\n    return childs;\n}\nexport function triggerChildAbles<T extends Able>(\n    moveable: MoveableGroupInterface<any, any>,\n    able: T,\n    type: keyof T & string,\n    e: any,\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\n) {\n    const isEnd = !!type.match(/End$/g);\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent = ev;\n\n        childEvent = eachEvent(childMoveable, ev);\n\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        result && callback && callback(childMoveable, ev, result, i);\n\n        if (isEnd) {\n            childMoveable.state.gesto = null;\n        }\n        return result;\n    });\n\n    return childs;\n}\n","\nimport {\n    invert, calculate, minus, plus,\n    convertPositionMatrix,\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\n} from \"@scena/matrix\";\nimport {\n    calculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\n    calculatePosition, calculateInversePosition, getTransform, calculateMoveablePosition,\n} from \"../utils\";\nimport { splitUnit, isArray, splitSpace, average, findIndex } from \"@daybrush/utils\";\nimport {\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag,\n} from \"../types\";\nimport Draggable from \"../ables/Draggable\";\nimport { setCustomDrag } from \"./CustomGesto\";\nimport { parse, parseMat } from \"css-to-mat\";\n\nexport function calculatePointerDist(moveable: MoveableManagerInterface, e: any) {\n    const { clientX, clientY, datas } = e;\n    const {\n        moveableClientRect,\n        rootMatrix,\n        is3d,\n        pos1,\n    } = moveable.state;\n    const { left, top } = moveableClientRect;\n    const n = is3d ? 4 : 3;\n    const [posX, posY] = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\n\n    return [distX, distY];\n}\n\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\n    const {\n        allMatrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = allMatrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(allMatrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function getTransformDirection(e: any) {\n    return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nexport function resolveTransformEvent(event: any, functionName: string) {\n    const {\n        datas,\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = event;\n\n    const index = datas.transformIndex;\n    const nextTransforms = originalDatas.nextTransforms;\n    const nextTransformAppendedIndexes = originalDatas.nextTransformAppendedIndexes;\n    const nextIndex = index === -1 ? nextTransforms.length\n        : index + nextTransformAppendedIndexes.filter((i: number) => i < index).length;\n\n    const result = getTransform(nextTransforms, nextIndex);\n    const targetFunction = result.targetFunction;\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\n    datas.afterFunctionTexts = result.afterFunctionTexts;\n    datas.beforeTransform = result.beforeFunctionMatrix;\n    datas.beforeTransform2 = result.beforeFunctionMatrix2;\n    datas.targetTansform = result.targetFunctionMatrix;\n    datas.afterTransform = result.afterFunctionMatrix;\n    datas.afterTransform2 = result.afterFunctionMatrix2;\n    datas.targetAllTransform = result.allFunctionMatrix;\n\n    if (targetFunction.functionName === matFunctionName) {\n        datas.afterFunctionTexts.splice(0, 1);\n        datas.isAppendTransform = false;\n    } else {\n        datas.isAppendTransform = true;\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, nextIndex];\n    }\n}\n\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\n}\nexport function getTransformDist({ datas, distX, distY }: any) {\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n\n    return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\n    const {\n        beforeTransform,\n        afterTransform,\n        beforeTransform2,\n        afterTransform2,\n        targetAllTransform,\n    } = datas;\n\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\n    const nextTargetMatrix\n        = isAfter\n            ? multiply(targetAllTransform, targetMatrix, 4)\n            : multiply(targetMatrix, targetAllTransform, 4);\n\n    // res1 = B-1 * nextTargetMatrix\n    const res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4);\n\n    // res3 = res2 * A-1\n    const afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n\n    return afterTargetMatrix;\n}\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\n    // TT = BT\n    const {\n        inverseBeforeMatrix,\n        is3d,\n        startDragBeforeDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n    return minus(\n        calculate(\n            inverseBeforeMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        startDragBeforeDist,\n    );\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\n\nexport function calculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    const nextPoses = getPosesByDirection(poses, direction);\n\n    return [\n        average(nextPoses.map(pos => pos[0])),\n        average(nextPoses.map(pos => pos[1])),\n    ];\n}\nexport function getPosByReverseDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos4)       [0, -1](pos3,pos4)       [1, -1](pos3)\n    [-1, 0](pos2, pos4)                           [1, 0](pos3, pos1)\n    [-1, 1](pos2)        [0, 1](pos1, pos2)       [1, 1](pos1)\n    */\n\n    return getPosByDirection(poses, direction.map(dir => -dir));\n}\n\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    fixedDirection: number[],\n) {\n    const poses = calculatePoses(matrix, width, height, n);\n    const fixedPos = getPosByDirection(poses, fixedDirection);\n    const distX = startPos[0] - fixedPos[0];\n    const distY = startPos[1] - fixedPos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function getNextTransformMatrix(\n    state: MoveableManagerState<any>,\n    datas: any,\n    transform: string,\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n    } = state;\n    const {\n        beforeTransform,\n        afterTransform,\n    } = datas;\n    const n = is3d ? 4 : 3;\n    const targetTransform = parseMat([transform]);\n\n    return getNextMatrix(\n        offsetMatrix,\n        convertDimension(multiply(multiply(beforeTransform, targetTransform as any, 4), afterTransform, 4), 4, n),\n        transformOrigin,\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\n\nexport function fillTransformStartEvent(e: any): OnTransformStartEvent {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    return {\n        setTransform: (transform: string | string[], index = -1) => {\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            setTransformIndex(e, index);\n        },\n        setTransformIndex: (index: number) => {\n            setTransformIndex(e, index);\n        },\n    };\n}\nexport function setDefaultTransformIndex(e: any, property: string) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    const startTransforms = originalDatas.startTransforms;\n\n    setTransformIndex(e, findIndex<string>(startTransforms, func => func.indexOf(`${property}(`) === 0));\n}\nexport function setTransformIndex(e: any, index: number) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    const datas = e.datas;\n\n    datas.transformIndex = index;\n    if (index === -1) {\n        return;\n    }\n    const transform = originalDatas.startTransforms[index];\n\n    if (!transform) {\n        return;\n    }\n    const info = parse([transform]);\n\n    datas.startValue = info[0].functionValue;\n}\nexport function fillOriginalTransform(\n    e: any,\n    transform: string,\n) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n\n    originalDatas.nextTransforms = splitSpace(transform);\n}\nexport function fillTransformEvent(\n    moveable: MoveableManagerInterface<DraggableProps>,\n    nextTransform: string,\n    delta: number[],\n    isPinch: boolean,\n    e: any,\n): OnTransformEvent {\n    fillOriginalTransform(e, nextTransform);\n    return {\n        transform: nextTransform,\n        drag: Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, delta, isPinch, false),\n        ) as OnDrag,\n    };\n}\nexport function getTranslateDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const state = moveable.state;\n    const {\n        left,\n        top,\n    } = state;\n\n    const groupable = moveable.props.groupable;\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n    const dist = minus(fixedPosition, nextFixedPosition);\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getScaleDist(\n    moveable: MoveableManagerInterface<any>,\n    scaleDist: number[],\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    return getTranslateDist(\n        moveable,\n        `scale(${scaleDist.join(\", \")})`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\n    const {\n        width,\n        height,\n        transformOrigin,\n    } = moveable.state;\n    return [\n        -1 + transformOrigin[0] / (width / 2),\n        -1 + transformOrigin[1] / (height / 2),\n    ];\n}\nexport function getDirectionOffset(\n    moveable: MoveableManagerInterface, direction: number[],\n    nextMatrix: number[] = moveable.state.allMatrix,\n) {\n    const {\n        width,\n        height,\n        is3d,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n    const nextFixedOffset = [\n        width / 2 * (1 + direction[0]),\n        height / 2 * (1 + direction[1]),\n    ];\n    return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nexport function getRotateDist(\n    moveable: MoveableManagerInterface<any>,\n    rotateDist: number,\n    fixedPosition: number[],\n    datas: any,\n) {\n    const fixedDirection = getOriginDirection(moveable);\n\n    return getTranslateDist(\n        moveable,\n        `rotate(${rotateDist}deg)`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getResizeDist(\n    moveable: MoveableManagerInterface<any>,\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    transformOrigin: string[],\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const {\n        transformOrigin: prevOrigin,\n        targetMatrix,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = moveable.state;\n\n    const n = is3d ? 4 : 3;\n    const nextOrigin = calculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getAbsolutePosition(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    SnapGuideline, ResizableProps, ScalableProps,\n    SnapOffsetInfo, MoveableManagerInterface, MoveableClientRect,\n    ElementGuidelineValue,\n} from \"../../types\";\nimport {\n    selectValue, throttle, getAbsolutePosesByState,\n    getRect, groupBy, getTinyDist, calculateInversePosition,\n    calculatePosition, roundSign, getRefTarget,\n} from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { diff } from \"@egjs/children-differ\";\nimport { isObject } from \"@daybrush/utils\";\n\nexport function calculateContainerPos(\n    rootMatrix: number[],\n    containerRect: MoveableClientRect,\n    n: number,\n) {\n    const clientPos = calculatePosition(\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\n\n    return [\n        containerRect.left + clientPos[0],\n        containerRect.top + clientPos[1],\n    ];\n}\n\nexport function getGapGuidelines(\n    guidelines: SnapGuideline[],\n    type: \"vertical\" | \"horizontal\",\n    snapThreshold: number,\n    index: number,\n    [start, end]: number[],\n    [otherStart, otherEnd]: number[],\n) {\n    const totalGuidelines: SnapGuideline[] = [];\n    const otherIndex = index ? 0 : 1;\n    const otherType = type === \"vertical\" ? \"horizontal\" : \"vertical\";\n\n    const elementGuidelines\n        = groupBy(guidelines.filter(({ type: guidelineType }) => guidelineType === type), ({ element }) => element)\n            .map(group => group[0])\n            .filter(({ pos, sizes }) => pos[otherIndex] <= otherEnd\n                && otherStart <= pos[otherIndex] + sizes![otherIndex]);\n\n    elementGuidelines.forEach(guideline1 => {\n        const elementStart = guideline1.pos[index];\n        const elementEnd = elementStart + guideline1.sizes![index];\n\n        elementGuidelines.forEach(guideline2 => {\n            const {\n                pos: guideline2Pos,\n                sizes: guideline2Sizes,\n                element: guideline2Element,\n                className: guidline2ClassName,\n            } = guideline2;\n            const targetStart = guideline2Pos[index];\n            const targetEnd = targetStart + guideline2Sizes![index];\n            let pos = 0;\n            let gap = 0;\n            let canSnap = true;\n\n            if (elementEnd <= targetStart) {\n                // gap -\n                gap = elementEnd - targetStart;\n                pos = targetEnd - gap;\n\n                if (start < pos - snapThreshold) {\n                    canSnap = false;\n                }\n                // element target moveable\n            } else if (targetEnd <= elementStart) {\n                // gap +\n                gap = elementStart - targetEnd;\n                pos = targetStart - gap;\n\n                if (end > pos + snapThreshold) {\n                    canSnap = false;\n                }\n                // moveable target element\n            } else {\n                return;\n            }\n            if (canSnap) {\n                totalGuidelines.push({\n                    pos: otherType === \"vertical\" ? [pos, guideline2Pos[1]] : [guideline2Pos[0], pos],\n                    element: guideline2Element,\n                    sizes: guideline2Sizes,\n                    size: 0,\n                    type: otherType,\n                    gap,\n                    className: guidline2ClassName,\n                    gapGuidelines: elementGuidelines,\n                });\n            }\n            if (elementEnd <= start && end <= targetStart) {\n                // elementEnd   moveable   target\n                const centerPos = ((targetStart + elementEnd) - (end - start)) / 2;\n\n                if (throttle(start - (centerPos - snapThreshold), 0.1) >= 0) {\n                    totalGuidelines.push({\n                        pos: otherType === \"vertical\" ? [centerPos, guideline2Pos[1]] : [guideline2Pos[0], centerPos],\n                        className: guidline2ClassName,\n                        element: guideline2Element,\n                        sizes: guideline2Sizes,\n                        size: 0,\n                        type: otherType,\n                        gap: elementEnd - start,\n                        gapGuidelines: elementGuidelines,\n                    });\n                }\n            }\n        });\n    });\n    return totalGuidelines;\n}\nexport function getDefaultGuidelines(\n    horizontalGuidelines: number[] | false,\n    verticalGuidelines: number[] | false,\n    width: number,\n    height: number,\n    clientLeft = 0,\n    clientTop = 0,\n    snapOffset = { left: 0, top: 0, right: 0, bottom: 0 },\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n    const {\n        left: snapOffsetLeft,\n        top: snapOffsetTop,\n        bottom: snapOffsetBottom,\n        right: snapOffsetRight,\n    } = snapOffset;\n    const snapWidth = width! + snapOffsetRight - snapOffsetLeft;\n    const snapHeight = height! + snapOffsetBottom - snapOffsetTop;\n\n    horizontalGuidelines && horizontalGuidelines!.forEach(pos => {\n        guidelines.push({ type: \"horizontal\", pos: [\n            snapOffsetLeft,\n            throttle(pos - clientTop + snapOffsetTop, 0.1),\n        ], size: snapWidth });\n    });\n    verticalGuidelines && verticalGuidelines!.forEach(pos => {\n        guidelines.push({ type: \"vertical\", pos: [\n            throttle(pos - clientLeft + snapOffsetLeft, 0.1),\n            snapOffsetTop,\n        ], size: snapHeight });\n    });\n    return guidelines;\n}\nexport function calculateElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    values: ElementGuidelineValue[],\n) {\n    const guidelines: SnapGuideline[] = [];\n\n    if (!values.length) {\n        return guidelines;\n    }\n    const state = moveable.state;\n    const {\n        snapCenter,\n    } = moveable.props;\n    const {\n        containerClientRect,\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const [containerLeft, containerTop] = calculateContainerPos(rootMatrix, containerClientRect, n);\n    const poses = getAbsolutePosesByState(state);\n    const {\n        minX: targetLeft,\n        minY: targetTop,\n    } = getMinMaxs(poses);\n    const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\n        clientLeft - containerLeft,\n        clientTop - containerTop,\n    ], n)).map(pos => roundSign(pos));\n\n    values.forEach(value => {\n        const {\n            element,\n            top: topValue,\n            left: leftValue,\n            right: rightValue,\n            bottom: bottomValue,\n            className,\n        } = value;\n        const rect = element.getBoundingClientRect();\n        const left = rect.left - containerLeft;\n        const top = rect.top - containerTop;\n        const bottom = top + rect.height;\n        const right = left + rect.width;\n        const [elementLeft, elementTop] = calculateInversePosition(rootMatrix, [left, top], n);\n        const [elementRight, elementBottom] = calculateInversePosition(rootMatrix, [right, bottom], n);\n        const width = elementRight - elementLeft;\n        const height = elementBottom - elementTop;\n        const sizes = [width, height];\n\n        //top\n        if (topValue !== false) {\n            guidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(elementLeft + distLeft, 0.1),\n                    elementTop,\n                ], size: height,\n                sizes,\n                className,\n            });\n        }\n\n        // bottom\n        if (bottomValue !== false) {\n            guidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(elementRight + distLeft, 0.1),\n                    elementTop,\n                ], size: height,\n                sizes,\n                className,\n            });\n        }\n\n        // left\n        if (leftValue !== false) {\n            guidelines.push({\n                type: \"horizontal\", element, pos: [\n                    elementLeft,\n                    throttle(elementTop + distTop, 0.1),\n                ], size: width,\n                sizes,\n                className,\n            });\n        }\n\n        // right\n        if (rightValue !== false) {\n            guidelines.push({\n                type: \"horizontal\", element, pos: [\n                    elementLeft,\n                    throttle(elementBottom + distTop, 0.1),\n                ], size: width,\n                sizes,\n                className,\n            });\n        }\n\n        if (snapCenter) {\n            guidelines.push({\n                type: \"vertical\",\n                element,\n                pos: [\n                    throttle((elementLeft + elementRight) / 2 + distLeft, 0.1),\n                    elementTop,\n                ],\n                size: height,\n                sizes,\n                center: true,\n                className,\n            });\n            guidelines.push({\n                type: \"horizontal\",\n                element,\n                pos: [\n                    elementLeft,\n                    throttle((elementTop + elementBottom) / 2 + distTop, 0.1),\n                ],\n                size: width,\n                sizes,\n                center: true,\n                className,\n            });\n        }\n    });\n    return guidelines;\n}\nexport function getElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRefresh: boolean,\n    prevGuidelines: SnapGuideline[] = [],\n) {\n    const guidelines: SnapGuideline[] = [];\n    const state = moveable.state;\n\n    if (isRefresh && state.guidelines && state.guidelines.length) {\n        return guidelines;\n    }\n\n    const {\n        elementGuidelines = [],\n    } = moveable.props;\n\n    if (!elementGuidelines.length) {\n        return guidelines;\n    }\n\n    const prevValues = state.elementGuidelineValues || [];\n    const nextValues = elementGuidelines.map(el => {\n        if (isObject(el) && \"element\" in el) {\n            return el;\n        }\n        return {\n            element: getRefTarget(el, true)!,\n        };\n    }).filter(value => {\n        return value.element;\n    }) as ElementGuidelineValue[];\n\n    state.elementGuidelineValues = nextValues;\n\n    const { added, removed } = diff(prevValues.map(v => v.element), nextValues.map(v => v.element));\n    const removedElements = removed.map(index => prevValues[index].element);\n    const addedGuidelines = calculateElementGuidelines(moveable, added.map(index => nextValues[index]).filter(value => {\n        return (value.refresh && isRefresh) || (!value.refresh && !isRefresh);\n    }));\n\n    return [\n        ...prevGuidelines.filter(guideline => removedElements.indexOf(guideline.element!) === -1),\n        ...addedGuidelines,\n    ];\n}\nexport function getTotalGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const {\n        snapOffset,\n        staticGuidelines,\n        containerClientRect: {\n            overflow,\n            scrollHeight: containerHeight,\n            scrollWidth: containerWidth,\n            clientHeight: containerClientHeight,\n            clientWidth: containerClientWidth,\n            clientLeft,\n            clientTop,\n        },\n    } = moveable.state;\n    const {\n        snapHorizontal = true,\n        snapVertical = true,\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n        snapGridWidth = 0,\n        snapGridHeight = 0,\n    } = moveable.props;\n    const totalGuidelines: SnapGuideline[] = [...staticGuidelines, ...getElementGuidelines(moveable, true)];\n\n    if (snapGap) {\n        const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n        const elementGuidelines = staticGuidelines.filter(({ element }) => element);\n\n        totalGuidelines.push(...getGapGuidelines(\n            elementGuidelines,\n            \"horizontal\",\n            snapThreshold,\n            0,\n            [left, right],\n            [top, bottom],\n        ), ...getGapGuidelines(\n            elementGuidelines,\n            \"vertical\",\n            snapThreshold,\n            1,\n            [top, bottom],\n            [left, right],\n        ));\n    }\n    totalGuidelines.push(...getGridGuidelines(\n        snapGridWidth,\n        snapGridHeight,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n    ));\n\n    totalGuidelines.push(...getDefaultGuidelines(\n        (snapHorizontal && horizontalGuidelines) || false,\n        (snapVertical && verticalGuidelines) || false,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n        snapOffset,\n    ));\n\n    return totalGuidelines;\n}\nexport function getGridGuidelines(\n    snapGridWidth: number,\n    snapGridHeight: number,\n    containerWidth: number,\n    containerHeight: number,\n    clientLeft = 0,\n    clientTop = 0,\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n\n    if (snapGridHeight) {\n        for (let pos = 0; pos <= containerHeight; pos += snapGridHeight) {\n            guidelines.push({\n                type: \"horizontal\",\n                pos: [0, throttle(pos - clientTop, 0.1)],\n                size: containerWidth!,\n                hide: true,\n            });\n        }\n    }\n    if (snapGridWidth) {\n        for (let pos = 0; pos <= containerWidth; pos += snapGridWidth) {\n            guidelines.push({\n                type: \"vertical\",\n                pos: [throttle(pos - clientLeft, 0.1), 0],\n                size: containerHeight!,\n                hide: true,\n            });\n        }\n    }\n    return guidelines;\n}\nexport function checkMoveableSnapPoses(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    snapCenter?: boolean,\n    customSnapThreshold?: number,\n) {\n    const props = moveable.props;\n    const {\n        snapElement = true,\n    } = props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return checkSnapPoses(\n        moveable.state.guidelines,\n        posesX,\n        posesY,\n        {\n            snapThreshold,\n            snapCenter,\n            snapElement,\n        },\n    );\n}\n\nexport function checkSnapPoses(\n    guidelines: SnapGuideline[],\n    posesX: number[],\n    posesY: number[],\n    options: {\n        snapThreshold?: number,\n        snapCenter?: boolean,\n        snapElement?: boolean,\n    },\n) {\n    return {\n        vertical: checkSnap(guidelines, \"vertical\", posesX, options),\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, options),\n    };\n}\nexport function checkSnapKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): { vertical: SnapOffsetInfo, horizontal: SnapOffsetInfo } {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    let [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    dx = getTinyDist(dx);\n    dy = getTinyDist(dy);\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    rect: {\n        left?: number,\n        top?: number,\n        bottom?: number,\n        right?: number,\n        center?: number,\n        middle?: number,\n    },\n    isCenter: boolean,\n    customSnapThreshold?: number,\n) {\n    const snapCenter = moveable.props.snapCenter;\n    const isSnapCenter = snapCenter! && isCenter;\n\n    let verticalNames: Array<\"left\" | \"center\" | \"right\"> = [\"left\", \"right\"];\n    let horizontalNames: Array<\"top\" | \"middle\" | \"bottom\"> = [\"top\", \"bottom\"];\n\n    if (isSnapCenter) {\n        verticalNames.push(\"center\");\n        horizontalNames.push(\"middle\");\n    }\n    verticalNames = verticalNames.filter(name => name in rect);\n    horizontalNames = horizontalNames.filter(name => name in rect);\n\n    return checkMoveableSnapPoses(\n        moveable,\n        verticalNames.map(name => rect[name]!),\n        horizontalNames.map(name => rect[name]!),\n        isSnapCenter,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: SnapGuideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    {\n        snapThreshold = 5,\n        snapElement,\n        snapCenter,\n    }: {\n        snapThreshold?: number,\n        snapCenter?: boolean,\n        snapElement?: boolean,\n    } = {},\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            index: -1,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type, center, element } = guideline;\n            if (\n                (!snapElement && element)\n                || (!snapCenter && center)\n                || type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n\n        return {\n            pos: targetPos,\n            index,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    const isSnap = snapPosInfos.length > 0;\n    return {\n        isSnap,\n        index: isSnap ? snapPosInfos[0].index : -1,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n) {\n    let nextPoses: number[][] = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkMoveableSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), true, 1);\n}\n\nexport function checkSnapBoundPriority(\n    a: { isBound: boolean, isSnap: boolean, offset: number },\n    b: { isBound: boolean, isSnap: boolean, offset: number },\n) {\n    const aDist = Math.abs(a.offset);\n    const bDist = Math.abs(b.offset);\n\n    if (a.isBound && b.isBound) {\n        return bDist - aDist;\n    } else if (a.isBound) {\n        return -1;\n    } else if (b.isBound) {\n        return 1;\n    } else if (a.isSnap && b.isSnap) {\n        return bDist - aDist;\n    } else if (a.isSnap) {\n        return -1;\n    } else if (b.isSnap) {\n        return 1;\n    } else if (aDist < TINY_NUM) {\n        return 1;\n    } else if (bDist < TINY_NUM) {\n        return -1;\n    }\n    return aDist - bDist;\n}\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        }\n        return checkSnapBoundPriority(\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\n        );\n    })[0];\n}\n","import { average, getRad } from \"@daybrush/utils\";\nimport { rotate } from \"@scena/matrix\";\nimport { maxOffset, getDistSize, throttle, getTinyDist } from \"../../utils\";\n\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average([line[0][0], line[1][0]]);\n    const cy = average([line[0][1], line[1][1]]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], error: number = TINY_NUM) {\n    const centerSign = hitTestLine(dots[0], line) <= 0;\n\n    return dots.slice(1).every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    line: number[][],\n    center: number[],\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const {\n        horizontal: isHorizontalStart,\n        vertical: isVerticalStart,\n    } = isStartLine(center, line);\n\n    if (isSameStartLine([\n        center,\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n\n    // test vertical\n    const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart);\n    const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart);\n    const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n    isRender?: boolean,\n) {\n    const dot1 = line[0];\n    const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n    const dy1 = getTinyDist(dot2[1] - dot1[1]);\n    const dx1 = getTinyDist(dot2[0] - dot1[0]);\n\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        if (isRender && !dy1) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (dx1) {\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n            const y = dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        } else {\n            const offset = boundDot1[0] - dot1[0];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    } else if (!dy2) {\n        // horizontal\n        if (isRender && !dx1) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (dy1) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            // const a = dy1 / dx1;\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n            const x = (boundDot1[1] - dot1[1]) / (dy1 / dx1) + dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        } else {\n            const offset = boundDot1[1] - dot1[1];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    lines: number[][][],\n    center: number[],\n    datas: any,\n) {\n    return lines.map(([multiple, pos1, pos2]) => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, [pos1, pos2], center);\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckInnerBoundLines(poses, [0, 0], false).map(([sign, pos1, pos2]) => {\n        return [\n            sign.map(dir => Math.abs(dir) * 2),\n            pos1,\n            pos2,\n        ];\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, getPosByDirection(poses, [0, 0]), datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport function getCheckInnerBoundLines(\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n) {\n    return getCheckSnapLineDirections(direction, keepRatio).map(([sign, dir1, dir2]) => {\n        return [\n            sign,\n            getPosByDirection(poses, dir1),\n            getPosByDirection(poses, dir2),\n        ];\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    const dots = [\n        center,\n        ...boundDots,\n    ];\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some(line => !isSameStartLine(dots, line));\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManagerInterface<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    const lines = [\n        [pos1, pos2],\n        [pos2, pos4],\n        [pos4, pos3],\n        [pos3, pos1],\n    ];\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lines.forEach(line => {\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart, 1, true);\n        const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart, 1, true);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart, 1, true);\n        const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart, 1, true);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import { getRad } from \"@daybrush/utils\";\nimport {\n    BoundInfo, SnappableProps, BoundType,\n    RotatableProps, MoveableManagerInterface, SnappableState,\n} from \"../../types\";\nimport { rotate, minus } from \"@scena/matrix\";\nimport { getDistSize, throttle } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    bounds: BoundType | false | undefined,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        position = \"client\",\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds || {};\n    const nextBounds = {\n        position,\n        left,\n        top,\n        right,\n        bottom,\n    };\n\n    return {\n        vertical: checkBounds(nextBounds, verticalPoses, true),\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\n    };\n}\nexport function getBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    externalBounds?: BoundType | false | null,\n) {\n    const {\n        containerClientRect: {\n            clientHeight: containerHeight,\n            clientWidth: containerWidth,\n            clientLeft,\n            clientTop,\n        },\n        snapOffset: {\n            left: snapOffsetLeft,\n            top: snapOffsetTop,\n            right: snapOffsetRight,\n            bottom: snapOffsetBottom,\n        },\n    } = moveable.state;\n    const bounds = externalBounds || moveable.props.bounds || {} as BoundType;\n    const position = bounds.position || \"client\";\n    const isCSS = position === \"css\";\n    const {\n        left = -Infinity,\n        top = -Infinity,\n    } = bounds;\n    let {\n        right = isCSS ? -Infinity : Infinity,\n        bottom = isCSS ? -Infinity : Infinity,\n    } = bounds;\n\n    if (isCSS) {\n        right = containerWidth! + snapOffsetRight - snapOffsetLeft - right;\n        bottom = containerHeight! + snapOffsetBottom - snapOffsetTop - bottom;\n    }\n\n    return {\n        left: left + snapOffsetLeft - clientLeft!,\n        right: right + snapOffsetLeft - clientLeft!,\n        top: top + snapOffsetTop - clientTop!,\n        bottom: bottom + snapOffsetTop - clientTop!,\n    };\n}\nexport function checkBoundKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const [endX, endY] = endPos;\n    let [dx, dy] = minus(endPos, startPos);\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        }\n        if (isBound) {\n            if (y < top || y > bottom) {\n                isBound = false;\n            }\n        }\n        if (!isBound) {\n            if (isBottom && bottom <= endY) {\n                y = bottom;\n                x = (y - b) / a;\n                isBound = true;\n            } else if (!isBottom &&  endY <= top) {\n                y = top;\n                x = (y - b) / a;\n                isBound = true;\n            }\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBounds(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo[] {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n    const boundInfos: BoundInfo[] = [];\n\n    if (startBoundPos + 1 > minPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        });\n    }\n    if (endBoundPos - 1 < maxPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        });\n    }\n\n    if (!boundInfos.length) {\n        boundInfos.push({\n            isBound: false,\n            offset: 0,\n            pos: 0,\n        });\n    }\n\n    return boundInfos.sort((a, b) => Math.abs(b.offset) - Math.abs(a.offset));\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, SnappableState>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    if (!moveable.props.bounds) {\n        return [];\n    }\n    const rad = rotation * Math.PI / 180;\n\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index]) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import { find } from \"@daybrush/utils\";\nimport {\n    RenderGuidelineInfo, Renderer, RenderGuidelineInnerInfo,\n    MoveableManagerInterface, SnappableProps, SnapGuideline,\n    SnappableOptions, SnappableRenderType, GapGuideline, SnappableState,\n} from \"../../types\";\nimport { prefix, flat, throttle, groupBy } from \"../../utils\";\n\nconst DIRECTION_NAMES = {\n    horizontal: [\n        \"left\",\n        \"top\",\n        \"width\",\n        \"Y\",\n        \"X\",\n    ] as const,\n    vertical: [\n        \"top\", \"left\", \"height\", \"X\", \"Y\",\n    ] as const,\n} as const;\n\nexport function groupByElementGuidelines(\n    guidelines: SnapGuideline[],\n    clientPos: number,\n    size: number,\n    index: number\n) {\n    const groupInfos: Array<[Element, number, any]> = [];\n\n    const group = groupBy(\n        guidelines.filter(({ element, gap }) => element && !gap),\n        ({ element, pos }) => {\n            const elementPos = pos[index];\n            const sign = Math.min(0, elementPos - clientPos) < 0 ? -1 : 1;\n            const groupKey = `${sign}_${pos[index ? 0 : 1]}`;\n            const groupInfo = find(groupInfos, ([groupElement, groupPos]) => {\n                return element === groupElement && elementPos === groupPos;\n            });\n            if (groupInfo) {\n                return groupInfo[2];\n            }\n            groupInfos.push([element!, elementPos, groupKey]);\n            return groupKey;\n        }\n    );\n    group.forEach((elementGuidelines) => {\n        elementGuidelines.sort((a, b) => {\n            const result =\n                getElementGuidelineDist(a.pos[index], a.size, clientPos, size)\n                    .size -\n                getElementGuidelineDist(b.pos[index], a.size, clientPos, size)\n                    .size;\n\n            return result || a.pos[index ? 0 : 1] - b.pos[index ? 0 : 1];\n        });\n    });\n    return group;\n}\nexport function getElementGuidelineDist(\n    elementPos: number,\n    elementSize: number,\n    targetPos: number,\n    targetSize: number\n) {\n    // relativePos < 0  => element(l)  ---  (r)target\n    // relativePos > 0  => target(l)   ---  (r)element\n    const relativePos = elementPos - targetPos;\n    const startPos = relativePos < 0 ? relativePos + elementSize : targetSize;\n    const endPos = relativePos < 0 ? 0 : relativePos;\n    const size = endPos - startPos;\n\n    return {\n        size,\n        pos: startPos,\n    };\n}\n\nexport function renderGuideline(info: RenderGuidelineInfo, React: Renderer): any {\n    const { direction, classNames, size, pos, zoom, key } = info;\n    const isHorizontal = direction === \"horizontal\";\n    const scaleDirection = isHorizontal ? \"Y\" : \"X\";\n    // const scaleDirection2 = isHorizontal ? \"Y\" : \"X\";\n\n    return React.createElement(\"div\", {\n        key,\n        className: classNames.join(\" \"),\n        style: {\n            [isHorizontal ? \"width\" : \"height\"]: `${size}`,\n            transform: `translate(${pos[0]}, ${pos[1]}) translate${scaleDirection}(-50%) scale${scaleDirection}(${zoom})`,\n        },\n    });\n}\n\nexport function renderInnerGuideline(info: RenderGuidelineInnerInfo, React: Renderer): any {\n    return renderGuideline({\n        ...info,\n        classNames: [\n            prefix(\"line\", \"guideline\", info.direction),\n            ...info.classNames,\n        ].filter(className => className) as string[],\n        size: info.size || `${info.sizeValue}px`,\n        pos: info.pos || info.posValue.map(v => `${throttle(v, 0.1)}px`),\n    }, React);\n}\n\nexport function renderElementGroups(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    direction: \"vertical\" | \"horizontal\",\n    groups: SnapGuideline[][],\n    minPos: number,\n    clientPos: number,\n    clientSize: number,\n    targetPos: number,\n    snapThreshold: number,\n    snapDigit: number,\n    index: number,\n    snapDistFormat: Required<SnappableOptions>[\"snapDistFormat\"],\n    React: Renderer\n) {\n    const { zoom, isDisplaySnapDigit = true } = moveable.props;\n    const [posName1, posName2, sizeName, , scaleDirection] = DIRECTION_NAMES[direction];\n    return flat(\n        groups.map((elementGuidelines, i) => {\n            let isFirstRenderSize = true;\n\n            return elementGuidelines.map(({ pos, size }, j) => {\n                const {\n                    pos: linePos,\n                    size: lineSize,\n                } = getElementGuidelineDist(\n                    pos[index],\n                    size,\n                    clientPos,\n                    clientSize\n                );\n\n                if (lineSize < snapThreshold) {\n                    return null;\n                }\n                const isRenderSize = isFirstRenderSize;\n\n                isFirstRenderSize = false;\n                const snapSize =\n                    isDisplaySnapDigit && isRenderSize\n                        ? parseFloat(lineSize.toFixed(snapDigit))\n                        : 0;\n                return (\n                    <div\n                        key={`${direction}LinkGuideline${i}-${j}`}\n                        className={prefix(\"guideline-group\", direction)}\n                        style={{\n                            [posName1]: `${minPos + linePos}px`,\n                            [posName2]: `${-targetPos + pos[index ? 0 : 1]}px`,\n                            [sizeName]: `${lineSize}px`,\n                        }}\n                    >\n                        {renderInnerGuideline(\n                            {\n                                direction: direction,\n                                classNames: [prefix(\"dashed\")],\n                                size: \"100%\",\n                                posValue: [0, 0],\n                                sizeValue: lineSize,\n                                zoom: zoom!,\n                            },\n                            React\n                        )}\n                        <div\n                            className={prefix(\"size-value\")}\n                            style={{\n                                transform: `translate${scaleDirection}(-50%) scale(${zoom})`,\n                            }}\n                        >\n                            {snapSize > 0 ? snapDistFormat(snapSize) : \"\"}\n                        </div>\n                    </div>\n                );\n            });\n        })\n    );\n}\nexport function renderSnapPoses(\n    moveable: MoveableManagerInterface,\n    direction: string,\n    snapPoses: SnappableRenderType[],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    index: number,\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n    return snapPoses.map(({ type, pos }, i) => {\n        const renderPos = [0, 0];\n\n        renderPos[index] = minPos;\n        renderPos[index ? 0 : 1] = -targetPos + pos;\n\n        return renderInnerGuideline(\n            {\n                key: `${direction}TargetGuideline${i}`,\n                classNames: [prefix(\"target\", \"bold\", type)],\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n                direction: direction,\n            },\n            React\n        );\n    });\n}\nexport function filterElementInnerGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    guidelines: SnapGuideline[],\n    index: number,\n    targetPos: number[],\n    clientPos: number[],\n    targetSizes: number[],\n) {\n    const { isDisplayInnerSnapDigit } = moveable.props;\n    const innerGuidelines: SnapGuideline[] = [];\n    const otherIndex = index ? 0 : 1;\n    const targetContentPos = targetPos[index];\n    const targetContentSize = targetSizes[index];\n    let gapGuidelines: GapGuideline[] = [];\n    let nextGuidelines = guidelines.filter(guideline => {\n        const { element, pos, size } = guideline;\n\n        if (\n            isDisplayInnerSnapDigit && element\n            && pos[index] < targetContentPos && targetContentPos + targetContentSize < pos[index] + size\n        ) {\n            innerGuidelines.push(guideline);\n\n            const contentPos = pos[index] - targetContentPos;\n            const inlinePos = pos[otherIndex] - targetPos[otherIndex];\n\n            gapGuidelines.push({\n                ...guideline,\n                inner: true,\n                gap: contentPos,\n                renderPos: index ? [inlinePos, contentPos] : [contentPos, inlinePos],\n            });\n            gapGuidelines.push({\n                ...guideline,\n                inner: true,\n                gap: pos[index] + size - targetContentPos - targetContentSize,\n                renderPos: index ? [inlinePos, targetContentSize] : [targetContentSize, inlinePos],\n            });\n            return false;\n        }\n        return true;\n    });\n\n    nextGuidelines = nextGuidelines.filter(guideline1 => {\n        const {\n            element: element1,\n            pos: pos1,\n            size: size1,\n        } = guideline1;\n        const contentPos1 = pos1[index];\n\n        if (!element1) {\n            return true;\n        }\n        return nextGuidelines.every(guideline2 => {\n            const {\n                element: element2,\n                pos: pos2,\n                size: size2,\n            } = guideline2;\n            const contentPos2 = pos2[index];\n            if (!element2 || guideline1 === guideline2) {\n                return true;\n            }\n            return contentPos1 + size1 <= contentPos2\n                || contentPos2 + size2 <= contentPos1\n                || (contentPos1 < contentPos2 && contentPos2 + size2 < contentPos1 + size1);\n        });\n    });\n    const groups = groupByElementGuidelines(\n        nextGuidelines,\n        clientPos[index],\n        targetContentSize,\n        index,\n    );\n    gapGuidelines = gapGuidelines.filter(guideline => {\n        const gap = guideline.gap!;\n        const inlinePos = guideline.pos[otherIndex];\n\n        return groups.every(group => {\n            return group.every(groupGuideline => {\n                const groupPos = groupGuideline.pos;\n                const renderPos = -targetContentPos + groupPos[index];\n\n                if (groupPos[otherIndex] !== inlinePos) {\n                    return true;\n                }\n                if (gap < 0 && renderPos < 0) {\n                    return false;\n                }\n                if (gap > 0 && renderPos > targetSizes[index]) {\n                    return false;\n                }\n                return true;\n            });\n        });\n    });\n\n    return {\n        guidelines: nextGuidelines,\n        groups,\n        gapGuidelines,\n    };\n}\nexport function renderGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    direction: string,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n\n    return guidelines.filter(({ hide }) => {\n        return !hide;\n    }).map((guideline, i) => {\n        const { pos, size, element } = guideline;\n\n        const renderPos = [\n            -targetPos[0] + pos[0],\n            -targetPos[1] + pos[1],\n        ];\n\n        return renderInnerGuideline(\n            {\n                key: `${direction}Guideline${i}`,\n                classNames: element ? [prefix(\"bold\")] : [],\n                direction: direction,\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n            },\n            React\n        );\n    });\n}\n\nexport function renderGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    direction: \"vertical\" | \"horizontal\",\n    gapGuidelines: GapGuideline[],\n    snapDistFormat: Required<SnappableOptions>[\"snapDistFormat\"],\n    React: any\n): any[] {\n    const { snapDigit = 0, isDisplaySnapDigit = true, zoom } = moveable.props;\n    const scaleDirection = direction === \"horizontal\" ? \"X\" : \"Y\";\n    const sizeName = direction === \"horizontal\" ? \"width\" : \"height\";\n\n    return gapGuidelines.map(({ renderPos, gap, className, inner }, i) => {\n        const absGap = Math.abs(gap!);\n        const snapSize = isDisplaySnapDigit\n            ? parseFloat(absGap.toFixed(snapDigit))\n            : 0;\n        return (\n            <div\n                key={`${direction}GapGuideline${i}`}\n                className={prefix(\"guideline-group\", direction)}\n                style={{\n                    left: `${renderPos[0]}px`,\n                    top: `${renderPos[1]}px`,\n                    [sizeName]: `${absGap}px`,\n                }}\n            >\n                {renderInnerGuideline(\n                    {\n                        direction: direction,\n                        classNames: [prefix(inner ? \"dashed\" : \"gap\"), className],\n                        size: \"100%\",\n                        posValue: [0, 0],\n                        sizeValue: absGap,\n                        zoom: zoom!,\n                    },\n                    React\n                )}\n                <div\n                    className={prefix(\"size-value\", \"gap\")}\n                    style={{\n                        transform: `translate${scaleDirection}(-50%) scale(${zoom})`,\n                    }}\n                >\n                    {snapSize > 0 ? snapDistFormat(snapSize) : \"\"}\n                </div>\n            </div>\n        );\n    });\n}\n","import {\n    Renderer,\n    SnappableProps,\n    SnappableState,\n    SnapGuideline,\n    SnapInfo,\n    BoundInfo,\n    ScalableProps,\n    SnapPosInfo,\n    RotatableProps,\n    RectInfo,\n    DraggableProps,\n    SnapOffsetInfo,\n    GapGuideline,\n    MoveableManagerInterface,\n    SnappableRenderType,\n    BoundType,\n    SnapBoundInfo,\n    MoveableGroupInterface,\n} from \"../types\";\nimport {\n    prefix,\n    calculatePoses,\n    getRect,\n    getAbsolutePosesByState,\n    getAbsolutePoses,\n    throttle,\n    getDistSize,\n    groupBy,\n    flat,\n    maxOffset,\n    minOffset,\n    triggerEvent,\n    calculateInversePosition,\n    directionCondition,\n    getClientRect,\n    getRefTarget,\n    getDragDistByState,\n} from \"../utils\";\nimport { IObject, findIndex, hasClass, getRad, getDist } from \"@daybrush/utils\";\nimport {\n    getPosByReverseDirection,\n    getDragDist,\n    scaleMatrix,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { minus, rotate, plus } from \"@scena/matrix\";\nimport { dragControlCondition as rotatableDragControlCondtion } from \"./Rotatable\";\nimport { FLOAT_POINT_NUM, TINY_NUM } from \"../consts\";\nimport {\n    getInnerBoundInfo,\n    getCheckInnerBoundLines,\n    getInnerBoundDragInfo,\n    checkRotateInnerBounds,\n    checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport {\n    checkBoundPoses,\n    checkRotateBounds,\n    checkBoundKeepRatio,\n    getBounds,\n} from \"./snappable/bounds\";\nimport {\n    checkSnaps,\n    getSnapInfosByDirection,\n    checkMoveableSnapPoses,\n    getNearestSnapGuidelineInfo,\n    getNearOffsetInfo,\n    checkSnapKeepRatio,\n    checkSnapPoses,\n    getElementGuidelines,\n    calculateContainerPos,\n    getTotalGuidelines,\n} from \"./snappable/snap\";\nimport {\n    renderElementGroups, renderSnapPoses,\n    renderGuidelines, renderGapGuidelines,\n    filterElementInnerGuidelines,\n} from \"./snappable/render\";\n\ninterface DirectionSnapType<T> {\n    vertical: T;\n    horizontal: T;\n}\n\n\nexport function snapStart(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n) {\n    const state = moveable.state;\n\n    if (state.guidelines && state.guidelines.length) {\n        return;\n    }\n    const container = moveable.state.container;\n    const snapContainer = moveable.props.snapContainer || container!;\n\n    const containerClientRect = state.containerClientRect;\n    const snapOffset = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n    };\n\n    if (container !== snapContainer) {\n        const snapContainerTarget = getRefTarget(snapContainer, true);\n\n        if (snapContainerTarget) {\n            const snapContainerRect = getClientRect(snapContainerTarget);\n            const offset1 = getDragDistByState(state, [\n                snapContainerRect.left - containerClientRect.left,\n                snapContainerRect.top - containerClientRect.top,\n            ]);\n            const offset2 = getDragDistByState(state, [\n                snapContainerRect.right - containerClientRect.right,\n                snapContainerRect.bottom - containerClientRect.bottom,\n            ]);\n            snapOffset.left = throttle(offset1[0], 0.1);\n            snapOffset.top = throttle(offset1[1], 0.1);\n            snapOffset.right = throttle(offset2[0], 0.1);\n            snapOffset.bottom = throttle(offset2[1], 0.1);\n        }\n    }\n\n    state.snapOffset = snapOffset;\n    state.elementGuidelineValues = [];\n    state.staticGuidelines = getElementGuidelines(moveable, false);\n    state.guidelines = getTotalGuidelines(moveable);\n    state.enableSnap = true;\n}\n\nexport function hasGuidelines(\n    moveable: MoveableManagerInterface<any, any>,\n    ableName: string\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            innerBounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n            snapGridWidth,\n            snapGridHeight,\n        },\n        state: { guidelines, enableSnap },\n    } = moveable;\n\n    if (\n        !snappable ||\n        !enableSnap ||\n        (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        snapGridWidth ||\n        snapGridHeight ||\n        bounds ||\n        innerBounds ||\n        (guidelines && guidelines.length) ||\n        (verticalGuidelines && verticalGuidelines.length) ||\n        (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>\n) {\n    const sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n\n    if (!sizeOffset) {\n        return {\n            isOutside: false,\n            offset: [0, 0],\n        };\n    }\n    const size = getDist(pos1, pos2);\n    const dist1 = getDist(sizeOffset, pos1);\n    const dist2 = getDist(sizeOffset, pos2);\n\n    const isOutside = dist1 > size || dist2 > size;\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return {\n        offset: [widthOffset, heightOffset],\n        isOutside,\n    };\n}\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedPos: number[],\n    direction: number[],\n    is3d: boolean\n) {\n    const nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextPos = getPosByReverseDirection(nextPoses, direction);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextPos));\n}\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n    isRequest: boolean\n): DirectionSnapType<SnapBoundInfo> {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(moveable, startPos, endPos);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? ({\n        horizontal: { isSnap: false },\n        vertical: { isSnap: false },\n    } as any) : checkSnapKeepRatio(moveable, startPos, endPos);\n\n    const horizontalOffset = getSnapBoundOffset(\n        horizontalBoundInfo,\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBoundOffset(\n        verticalBoundInfo,\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\nexport function checkMoveableSnapBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRequest: boolean,\n    poses: number[][],\n    boundPoses: number[][] = poses\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable),\n        boundPoses.map((pos) => pos[0]),\n        boundPoses.map((pos) => pos[1])\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkMoveableSnapPoses(\n        moveable,\n        poses.map((pos) => pos[0]),\n        poses.map((pos) => pos[1]),\n        moveable.props.snapCenter\n    );\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function checkSnapBounds(\n    guideines: SnapGuideline[],\n    bounds: BoundType | undefined | false,\n    posesX: number[],\n    posesY: number[],\n    options: {\n        isRequest?: boolean;\n        snapThreshold?: number;\n        snapCenter?: boolean;\n        snapElement?: boolean;\n    } = {}\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(bounds, posesX, posesY);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = options.isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkSnapPoses(guideines, posesX, posesY, options);\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function normalized(value: number) {\n    return value ? value / Math.abs(value) : 0;\n}\nexport function checkMaxBounds(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    fixedPosition: number[],\n    datas: any\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const { width, height } = moveable.state;\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach((otherDirection) => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n            const deg = (getRad(fixedPosition, otherPos) * 360) / Math.PI;\n\n            if (isCheckHorizontal) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n                    nextOtherPos[1] = fixedPosition[1];\n                }\n                const {\n                    offset: [, heightOffset],\n                    isOutside: isHeightOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[1] < otherPos[1] ? bottom : top) -\n                    otherPos[1],\n                    false,\n                    datas\n                );\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + (isHeightOutside ? 1 : -1) * Math.abs(heightOffset);\n                }\n            }\n            if (isCheckVertical) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n                    nextOtherPos[0] = fixedPosition[0];\n                }\n                const {\n                    offset: [widthOffset],\n                    isOutside: isWidthOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[0] < otherPos[0] ? right : left) - otherPos[0],\n                    true,\n                    datas\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + (isWidthOutside ? 1 : -1) * Math.abs(widthOffset);\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\nfunction checkSnapRightLine(\n    startPos: number[],\n    endPos: number[],\n    snapBoundInfo: { vertical: SnapBoundInfo; horizontal: SnapBoundInfo },\n    keepRatio: boolean\n) {\n    const rad = (getRad(startPos, endPos) / Math.PI) * 180;\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            dist: verticalDist,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            dist: horizontalDist,\n        },\n    } = snapBoundInfo;\n\n    const rad180 = rad % 180;\n    const isHorizontalLine = rad180 < 3 || rad180 > 177;\n    const isVerticalLine = rad180 > 87 && rad180 < 93;\n\n    if (horizontalDist < verticalDist) {\n        if (\n            isVerticalBound ||\n            (isVerticalSnap &&\n                !isVerticalLine &&\n                (!keepRatio || !isHorizontalLine))\n        ) {\n            return \"vertical\";\n        }\n    }\n    if (\n        isHorizontalBound ||\n        (isHorizontalSnap &&\n            !isHorizontalLine &&\n            (!keepRatio || !isVerticalLine))\n    ) {\n        return \"horizontal\";\n    }\n    return \"\";\n}\nfunction getSnapBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n        const snapBoundInfo = keepRatio\n            ? checkSnapBoundsKeepRatio(\n                moveable,\n                otherStartPos,\n                otherEndPos,\n                isRequest\n            )\n            : checkMoveableSnapBounds(moveable, isRequest, [otherEndPos]);\n\n        const {\n            horizontal: {\n                // dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                // dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const snapLine = checkSnapRightLine(\n            otherStartPos,\n            otherEndPos,\n            snapBoundInfo,\n            keepRatio\n        );\n\n        if (!snapLine) {\n            return {\n                sign: multiple,\n                isBound: false,\n                isSnap: false,\n                offset: [0, 0],\n            };\n        }\n\n        const isVertical = snapLine === \"vertical\";\n        const sizeOffset = solveNextOffset(\n            otherStartPos,\n            otherEndPos,\n            -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\n            isVertical,\n            datas,\n        ).offset.map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\nexport function getCheckSnapDirections(\n    direction: number[],\n    keepRatio: boolean\n) {\n    const directions: number[][][] = [];\n    const fixedDirection = [-direction[0], -direction[1]];\n\n    if (direction[0] && direction[1]) {\n        directions.push(\n            [fixedDirection, [direction[0], -direction[1]]],\n            [fixedDirection, [-direction[0], direction[1]]]\n        );\n        if (keepRatio) {\n            // pass two direction condition\n            directions.push([fixedDirection, direction]);\n        }\n    } else if (direction[0]) {\n        // vertcal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [fixedDirection[0], -1]],\n                [fixedDirection, [fixedDirection[0], 1]],\n                [fixedDirection, [direction[0], -1]],\n                [fixedDirection, direction],\n                [fixedDirection, [direction[0], 1]]\n            );\n        } else {\n            directions.push(\n                [\n                    [fixedDirection[0], -1],\n                    [direction[0], -1],\n                ],\n                [\n                    [fixedDirection[0], 0],\n                    [direction[0], 0],\n                ],\n                [\n                    [fixedDirection[0], 1],\n                    [direction[0], 1],\n                ]\n            );\n        }\n    } else if (direction[1]) {\n        // horizontal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [-1, fixedDirection[1]]],\n                [fixedDirection, [1, fixedDirection[1]]],\n                [fixedDirection, [-1, direction[1]]],\n                [fixedDirection, [1, direction[1]]],\n                [fixedDirection, direction]\n            );\n        } else {\n            directions.push(\n                [\n                    [-1, fixedDirection[1]],\n                    [-1, direction[1]],\n                ],\n                [\n                    [0, fixedDirection[1]],\n                    [0, direction[1]],\n                ],\n                [\n                    [1, fixedDirection[1]],\n                    [1, direction[1]],\n                ]\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        directions.push(\n            [fixedDirection, [1, 0]],\n            [fixedDirection, [-1, 0]],\n            [fixedDirection, [0, -1]],\n            [fixedDirection, [0, 1]],\n\n            [\n                [1, 0],\n                [1, -1],\n            ],\n            [\n                [1, 0],\n                [1, 1],\n            ],\n            [\n                [0, 1],\n                [1, 1],\n            ],\n            [\n                [0, 1],\n                [-1, 1],\n            ],\n\n            [\n                [-1, 0],\n                [-1, -1],\n            ],\n            [\n                [-1, 0],\n                [-1, 1],\n            ],\n            [\n                [0, -1],\n                [1, -1],\n            ],\n            [\n                [0, -1],\n                [-1, -1],\n            ]\n        );\n    }\n\n    return directions;\n}\nexport function getSizeOffsetInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    const directions = getCheckSnapDirections(direction, keepRatio);\n    const lines = getCheckInnerBoundLines(poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(\n            moveable,\n            poses,\n            directions,\n            keepRatio,\n            isRequest,\n            datas\n        ),\n        ...getInnerBoundInfo(\n            moveable,\n            lines,\n            getPosByDirection(poses, [0, 0]),\n            datas\n        ),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: { offset: horizontalOffset },\n        vertical: { offset: verticalOffset },\n    } = checkMoveableSnapBounds(moveable, isRequest, [snapPos]);\n\n    if (verticalOffset || horizontalOffset) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n        const nextWidth = Math.min(\n            maxWidth || Infinity,\n            width + direction[0] * nextWidthOffset\n        );\n        const nextHeight = Math.min(\n            maxHeight || Infinity,\n            height + direction[1] * nextHeightOffset\n        );\n\n        return [nextWidth - width, nextHeight - height];\n    }\n    return [0, 0];\n}\nexport function checkSizeDist(\n    moveable: MoveableManagerInterface<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            isRequest,\n            datas\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist =\n                Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist =\n                Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset =\n                isWidthBound && isHeightBound\n                    ? widthDist < heightDist\n                    : isHeightBound ||\n                    (!isWidthBound && widthDist < heightDist);\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = (width * nextHeightOffset) / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = (height * nextWidthOffset) / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (direction[0] && direction[1]) {\n        const { maxWidth, maxHeight } = checkMaxBounds(\n            moveable,\n            poses,\n            direction,\n            fixedPosition,\n            datas\n        );\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset).map(pos => pos.map(p => throttle(p, FLOAT_POINT_NUM))),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            isRequest,\n            datas\n        );\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [widthOffset, heightOffset];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    origin: number[],\n    rotation: number\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return rotation;\n    }\n\n    const { pos1, pos2, pos3, pos4 } = rect;\n    const rad = (rotation * Math.PI) / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map((pos) => minus(pos, origin));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation),\n        ...checkRotateInnerBounds(\n            moveable,\n            prevPoses,\n            nextPoses,\n            origin,\n            rotation\n        ),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n\n    if (result.length) {\n        return result[0];\n    } else {\n        return rotation;\n    }\n}\nexport function checkSnapResize(\n    moveable: MoveableManagerInterface<{}, {}>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const { allMatrix, is3d } = moveable.state;\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                allMatrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedPosition,\n                direction,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManagerInterface<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const { width, height, fixedPosition } = datas;\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const is3d = datas.is3d;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(\n                    datas,\n                    plus(scale, [widthOffset / width, heightOffset / height]),\n                ),\n                width,\n                height,\n                fixedPosition,\n                direction,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n\n    return [sizeDist[0] / width, sizeDist[1] / height];\n}\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: any\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[]\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses: number[][] = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalBound) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset]);\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalSnap) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset]);\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return (\n                    getDistSize(minus([distX, distY], a)) -\n                    getDistSize(minus([distX, distY], b))\n                );\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY =\n                    (distY * Math.abs(distX + offsetX)) / Math.abs(distX) -\n                    distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX =\n                    (distX * Math.abs(distY + offsetY)) / Math.abs(prevDistY) -\n                    distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (\n                    Math.abs(offsetX) > TINY_NUM &&\n                    Math.abs(offsetX) < Math.abs(verticalOffset)\n                ) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (\n                    Math.abs(offsetY) > TINY_NUM &&\n                    Math.abs(offsetY) < Math.abs(horizontalOffset)\n                ) {\n                    const scale =\n                        Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n        offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\nexport function checkSnapDrag(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n    const { left, right, top, bottom } = getRect(poses);\n    const snapCenter = moveable.props.snapCenter;\n    const snapPoses = [\n        [left, top],\n        [right, top],\n        [left, bottom],\n        [right, bottom],\n    ];\n\n    if (snapCenter) {\n        snapPoses.push([(left + right) / 2, (top + bottom) / 2]);\n    }\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkMoveableSnapBounds(moveable, isRequest, snapPoses, poses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound =\n        verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound =\n        horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(\n        verticalSnapBoundInfo.offset,\n        verticalInnerBoundInfo.offset\n    );\n    const horizontalOffset = maxOffset(\n        horizontalSnapBoundInfo.offset,\n        horizontalInnerBoundInfo.offset\n    );\n\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset]\n    );\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: SnapGuideline[] = [];\n\n    posInfos.forEach((posInfo) => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\n\nfunction getGapGuidelinesToStart(\n    guidelines: SnapGuideline[],\n    index: number,\n    targetPos: number[],\n    targetSizes: number[],\n    guidelinePos: number[],\n    gap: number,\n    otherPos: number\n): GapGuideline[] {\n    const absGap = Math.abs(gap);\n    let start = guidelinePos[index] + (gap > 0 ? targetSizes[0] : 0);\n\n    return guidelines\n        .filter(({ pos: gapPos }) => gapPos[index] <= targetPos[index])\n        .sort(({ pos: aPos }, { pos: bPos }) => bPos[index] - aPos[index])\n        .filter(({ pos: gapPos, sizes: gapSizes }) => {\n            const nextPos = gapPos[index];\n\n            if (\n                throttle(nextPos + gapSizes![index], FLOAT_POINT_NUM) ===\n                throttle(start - absGap, FLOAT_POINT_NUM)\n            ) {\n                start = nextPos;\n                return true;\n            }\n            return false;\n        })\n        .map((gapGuideline) => {\n            const renderPos =\n                -targetPos[index] +\n                gapGuideline.pos[index] +\n                gapGuideline.sizes![index];\n\n            return {\n                ...gapGuideline,\n                gap,\n                renderPos: index\n                    ? [otherPos, renderPos]\n                    : [renderPos, otherPos],\n            };\n        });\n}\nfunction getGapGuidelinesToEnd(\n    guidelines: SnapGuideline[],\n    index: number,\n    targetPos: number[],\n    targetSizes: number[],\n    guidelinePos: number[],\n    gap: number,\n    otherPos: number\n): GapGuideline[] {\n    const absGap = Math.abs(gap);\n    let start = guidelinePos[index] + (gap < 0 ? targetSizes[index] : 0);\n\n    return guidelines\n        .filter(({ pos: gapPos }) => gapPos[index] > targetPos[index])\n        .sort(({ pos: aPos }, { pos: bPos }) => aPos[index] - bPos[index])\n        .filter(({ pos: gapPos, sizes: gapSizes }) => {\n            const nextPos = gapPos[index];\n\n            if (\n                throttle(nextPos, FLOAT_POINT_NUM) === throttle(start + absGap, FLOAT_POINT_NUM)\n            ) {\n                start = nextPos + gapSizes![index];\n                return true;\n            }\n            return false;\n        })\n        .map((gapGuideline) => {\n            const renderPos =\n                -targetPos[index] + gapGuideline.pos[index] - absGap;\n\n            return {\n                ...gapGuideline,\n                gap,\n                renderPos: index\n                    ? [otherPos, renderPos]\n                    : [renderPos, otherPos],\n            };\n        });\n}\nfunction getGapGuidelines(\n    guidelines: SnapGuideline[],\n    type: \"vertical\" | \"horizontal\",\n    targetPos: number[],\n    targetSizes: number[]\n): GapGuideline[] {\n    const elementGuidelines = guidelines.filter(\n        ({ element, gap, type: guidelineType }) =>\n            element && gap && guidelineType === type\n    );\n    const [index, otherIndex] = type === \"vertical\" ? [0, 1] : [1, 0];\n\n    return flat(\n        elementGuidelines.map((guideline) => {\n            const pos = guideline.pos;\n            const gap = guideline.gap!;\n            const gapGuidelines = guideline.gapGuidelines!;\n            const sizes = guideline.sizes!;\n\n            let offset = minOffset(\n                pos[otherIndex] + sizes[otherIndex] - targetPos[otherIndex],\n                pos[otherIndex] -\n                targetPos[otherIndex] -\n                targetSizes[otherIndex]\n            );\n            const minSize = Math.min(\n                sizes[otherIndex],\n                targetSizes[otherIndex]\n            );\n\n            if (offset > 0 && offset > minSize) {\n                offset = (offset - minSize / 2) * 2;\n            } else if (offset < 0 && offset < -minSize) {\n                offset = (offset + minSize / 2) * 2;\n            }\n            if (offset === 0) {\n                return [];\n            }\n\n            const otherPos =\n                (offset > 0 ? 0 : targetSizes[otherIndex]) + offset / 2;\n\n            return [\n                ...getGapGuidelinesToStart(\n                    gapGuidelines,\n                    index,\n                    targetPos,\n                    targetSizes,\n                    pos,\n                    gap,\n                    otherPos\n                ),\n                ...getGapGuidelinesToEnd(\n                    gapGuidelines,\n                    index,\n                    targetPos,\n                    targetSizes,\n                    pos,\n                    gap,\n                    otherPos\n                ),\n            ];\n        })\n    );\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: SnappableRenderType[],\n    horizontalSnapPoses: SnappableRenderType[],\n    externalBounds?: BoundType | false | null\n) {\n    const {\n        vertical: verticalBoundInfos,\n        horizontal: horizontalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable, externalBounds),\n        verticalPoses,\n        horizontalPoses\n    );\n    verticalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            verticalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    horizontalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            horizontalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                verticalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        verticalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    horizontalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                horizontalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        horizontalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n}\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\nexport default {\n    name: \"snappable\",\n    props: {\n        snappable: [Boolean, Array],\n        snapContainer: Object,\n        snapCenter: Boolean,\n        snapHorizontal: Boolean,\n        snapVertical: Boolean,\n        snapElement: Boolean,\n        snapGap: Boolean,\n        snapGridWidth: Number,\n        snapGridHeight: Number,\n        isDisplaySnapDigit: Boolean,\n        isDisplayInnerSnapDigit: Boolean,\n        snapDigit: Number,\n        snapThreshold: Number,\n        horizontalGuidelines: Array,\n        verticalGuidelines: Array,\n        elementGuidelines: Array,\n        bounds: Object,\n        innerBounds: Object,\n        snapDistFormat: Function,\n    } as const,\n    events: {\n        onSnap: \"snap\",\n    } as const,\n    css: [\n        `:host {\n    --bounds-color: #d66;\n}\n.guideline {\n    pointer-events: none;\n    z-index: 2;\n}\n.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}\n.guideline-group {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.guideline-group .size-value {\n    position: absolute;\n    color: #f55;\n    font-size: 12px;\n    font-weight: bold;\n}\n.guideline-group.horizontal .size-value {\n    transform-origin: 50% 100%;\n    transform: translateX(-50%);\n    left: 50%;\n    bottom: 5px;\n}\n.guideline-group.vertical .size-value {\n    transform-origin: 0% 50%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 5px;\n}\n.guideline.gap {\n    background: #f55;\n}\n.size-value.gap {\n    color: #f55;\n}\n`,\n    ],\n    render(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        React: Renderer\n    ): any[] {\n        const state = moveable.state;\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            snapRenderInfo,\n            targetClientRect,\n            containerClientRect,\n            is3d,\n            rootMatrix,\n        } = state;\n\n        if (!snapRenderInfo || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n        state.staticGuidelines = getElementGuidelines(moveable, false, state.staticGuidelines);\n        state.guidelines = getTotalGuidelines(moveable);\n\n        const n = is3d ? 4 : 3;\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n        const containerPos = calculateContainerPos(\n            rootMatrix,\n            containerClientRect,\n            n\n        );\n        const [clientLeft, clientTop] = calculateInversePosition(\n            rootMatrix,\n            [\n                targetClientRect.left - containerPos[0],\n                targetClientRect.top - containerPos[1],\n            ],\n            n\n        );\n\n        const {\n            snapThreshold = 5,\n            snapDigit = 0,\n            snapDistFormat = (v: number) => v,\n        } = moveable.props;\n        const externalPoses = snapRenderInfo.externalPoses || [];\n        const poses = getAbsolutePosesByState(moveable.state);\n        const verticalSnapPoses: SnappableRenderType[] = [];\n        const horizontalSnapPoses: SnappableRenderType[] = [];\n        const verticalGuidelines: SnapGuideline[] = [];\n        const horizontalGuidelines: SnapGuideline[] = [];\n        const snapInfos: Array<{\n            vertical: SnapInfo;\n            horizontal: SnapInfo;\n        }> = [];\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const hasExternalPoses = externalPoses.length > 0;\n        const externalRect = hasExternalPoses\n            ? getRect(externalPoses)\n            : ({} as ReturnType<typeof getRect>);\n\n        if (!snapRenderInfo.request) {\n            if (snapRenderInfo.direction) {\n                snapInfos.push(\n                    getSnapInfosByDirection(\n                        moveable,\n                        poses,\n                        snapRenderInfo.direction\n                    )\n                );\n            }\n            if (snapRenderInfo.snap) {\n                const rect = getRect(poses);\n\n                if (snapRenderInfo.center) {\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\n                    (rect as any).center = (rect.left + rect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, rect, true, 1));\n            }\n            if (hasExternalPoses) {\n                if (snapRenderInfo.center) {\n                    (externalRect as any).middle =\n                        (externalRect.top + externalRect.bottom) / 2;\n                    (externalRect as any).center =\n                        (externalRect.left + externalRect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, externalRect, true, 1));\n            }\n            snapInfos.forEach((snapInfo) => {\n                const {\n                    vertical: { posInfos: verticalPosInfos },\n                    horizontal: { posInfos: horizontalPosInfos },\n                } = snapInfo;\n                verticalSnapPoses.push(\n                    ...verticalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                horizontalSnapPoses.push(\n                    ...horizontalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n                horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\n            });\n        }\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses\n        );\n        if (hasExternalPoses) {\n            addBoundGuidelines(\n                moveable,\n                [externalRect.left, externalRect.right],\n                [externalRect.top, externalRect.bottom],\n                verticalSnapPoses,\n                horizontalSnapPoses,\n                snapRenderInfo.externalBounds\n            );\n        }\n\n\n        const gapHorizontalGuidelines = getGapGuidelines(\n            verticalGuidelines,\n            \"vertical\",\n            [targetLeft, targetTop],\n            [width, height]\n        );\n        const gapVerticalGuidelines = getGapGuidelines(\n            horizontalGuidelines,\n            \"horizontal\",\n            [targetLeft, targetTop],\n            [width, height]\n        );\n\n        const allGuidelines = [...verticalGuidelines, ...horizontalGuidelines];\n        triggerEvent(\n            moveable,\n            \"onSnap\",\n            {\n                guidelines: allGuidelines.filter(({ element }) => !element),\n                elements: groupBy(\n                    allGuidelines.filter(({ element }) => element),\n                    ({ element }) => element\n                ),\n                gaps: [...gapVerticalGuidelines, ...gapHorizontalGuidelines],\n            },\n            true\n        );\n        const {\n            guidelines: nextHorizontalGuidelines,\n            groups: elementHorizontalGroups,\n            gapGuidelines: innerGapHorizontalGuidelines,\n        } = filterElementInnerGuidelines(\n            moveable,\n            horizontalGuidelines,\n            0,\n            [targetLeft, targetTop],\n            [clientLeft, clientTop],\n            [width, height],\n        );\n        const {\n            guidelines: nextVerticalGuidelines,\n            groups: elementVerticalGroups,\n            gapGuidelines: innerGapVerticalGuidelines,\n        } = filterElementInnerGuidelines(\n            moveable,\n            verticalGuidelines,\n            1,\n            [targetLeft, targetTop],\n            [clientLeft, clientTop],\n            [width, height],\n        );\n\n        return [\n            ...renderGapGuidelines(\n                moveable,\n                \"vertical\",\n                [...gapVerticalGuidelines, ...innerGapVerticalGuidelines],\n                snapDistFormat,\n                React\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                \"horizontal\",\n                [...gapHorizontalGuidelines, ...innerGapHorizontalGuidelines],\n                snapDistFormat,\n                React\n            ),\n            ...renderElementGroups(\n                moveable,\n                \"horizontal\",\n                elementHorizontalGroups,\n                minLeft,\n                clientLeft,\n                width,\n                targetTop,\n                snapThreshold,\n                snapDigit,\n                0,\n                snapDistFormat,\n                React\n            ),\n            ...renderElementGroups(\n                moveable,\n                \"vertical\",\n                elementVerticalGroups,\n                minTop,\n                clientTop,\n                height,\n                targetLeft,\n                snapThreshold,\n                snapDigit,\n                1,\n                snapDistFormat,\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"horizontal\",\n                nextHorizontalGuidelines,\n                [targetLeft, targetTop],\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"vertical\",\n                nextVerticalGuidelines,\n                [targetLeft, targetTop],\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"horizontal\",\n                horizontalSnapPoses,\n                minLeft,\n                targetTop,\n                width,\n                0,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"vertical\",\n                verticalSnapPoses,\n                minTop,\n                targetLeft,\n                height,\n                1,\n                React\n            ),\n        ];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        e: any\n    ) {\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        snapStart(moveable);\n    },\n    drag(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        const state = moveable.state;\n        state.staticGuidelines = getElementGuidelines(moveable, false, state.staticGuidelines);\n        state.guidelines = getTotalGuidelines(moveable);\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragControlCondition(moveable: MoveableManagerInterface, e: any) {\n        if (directionCondition(moveable, e) || rotatableDragControlCondtion(moveable, e)) {\n            return true;\n        }\n        if (!e.isRequest && e.inputEvent) {\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n        }\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroup(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragGroupControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupControlEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.staticGuidelines = [];\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n    },\n};\n\n\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n/**\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\n * @name Moveable.Snappable#snapContainer\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.querySelector(\".container\"));\n *\n * moveable.snapContainer = document.body;\n */\n/**\n * When you drag, make the snap in the center of the target. (default: false)\n * @name Moveable.Snappable#snapCenter\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n * });\n *\n * moveable.snapCenter = true;\n */\n\n/**\n * When you drag, make the snap in the vertical guidelines. (default: true)\n * @name Moveable.Snappable#snapVertical\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n * });\n *\n * moveable.snapVertical = false;\n */\n/**\n * When you drag, make the snap in the horizontal guidelines. (default: true)\n * @name Moveable.Snappable#snapHorizontal\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n * });\n *\n * moveable.snapHorizontal = false;\n */\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n/**\n * When you drag, make the snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapElement\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n * });\n *\n * moveable.snapElement = false;\n */\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries. (default: null)\n * @name Moveable.Snappable#bounds\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * You can set up inner boundaries. (default: null)\n * @name Moveable.Snappable#innerBounds\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n\n/**\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridWidth\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridWidth = 5;\n */\n\n/**\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridHeight\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridHeight = 5;\n */\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * Whether to show element inner snap distance (default: false)\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplayInnerSnapDigit = true;\n */\n\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: v => v,\n * });\n * moveable.snapDistFormat = v => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n","import {\n    setDragStart, getBeforeDragDist, getTransformDist,\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent, setDefaultTransformIndex,\n} from \"../gesto/GestoUtils\";\nimport {\n    throttleArray, triggerEvent, fillParams,\n    throttle, getDistSize, prefix,\n    fillEndParams, getComputedStyle,\n} from \"../utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { triggerChildGesto } from \"../groupUtils\";\nimport { checkSnapDrag, startCheckSnapDrag } from \"./Snappable\";\nimport { IObject, getRad } from \"@daybrush/utils\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\nexport default {\n    name: \"draggable\",\n    props: {\n        draggable: Boolean,\n        throttleDrag: Number,\n        throttleDragRotate: Number,\n        startDragRotate: Number,\n        edgeDraggable: Boolean,\n    } as const,\n    events: {\n        onDragStart: \"dragStart\",\n        onDrag: \"drag\",\n        onDragEnd: \"dragEnd\",\n        onDragGroupStart: \"dragGroupStart\",\n        onDragGroup: \"dragGroup\",\n        onDragGroupEnd: \"dragGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        React: Renderer,\n    ): any[] {\n        const { throttleDragRotate, zoom } = moveable.props;\n        const { dragInfo, beforeOrigin } = moveable.state;\n\n        if (!throttleDragRotate || !dragInfo) {\n            return [];\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return [];\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return [<div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        }} />];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentGesto } = e;\n        const state = moveable.state;\n        const {\n            target,\n            gesto,\n        } = state;\n\n        if (gesto) {\n            return false;\n        }\n        state.gesto = parentGesto || moveable.targetGesto;\n        const style = getComputedStyle(target!);\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.startValue = [0, 0];\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"translate\");\n        startCheckSnapDrag(moveable, datas);\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startValue = translate;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            state.gesto = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        resolveTransformEvent(e, \"translate\");\n\n        const { datas, parentEvent, parentFlag, isPinch, isRequest } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, startValue } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let isSnap = false;\n        let dragRotateRad = 0;\n\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n            const startDragRotate = props.startDragRotate || 0;\n            const deg\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\n                - startDragRotate;\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n            const r = getDistSize([rx, ry]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag && (!throttleDragRotate || distX || distY)) {\n            const [verticalInfo, horizontalInfo] = checkSnapDrag(\n                moveable, distX, distY, throttleDragRotate, isRequest, datas,\n            );\n            const {\n                isSnap: isVerticalSnap,\n                isBound: isVerticalBound,\n                offset: verticalOffset,\n            } = verticalInfo;\n            const {\n                isSnap: isHorizontalSnap,\n                isBound: isHorizontalBound,\n                offset: horizontalOffset,\n            } = horizontalInfo;\n            isSnap = isVerticalSnap || isHorizontalSnap || isVerticalBound || isHorizontalBound;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n        datas.passDeltaX = distX - (datas.passDistX || 0);\n        datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDistX = distX;\n        datas.passDistY = distY;\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\n\n        if (!throttleDragRotate && !isSnap) {\n            throttleArray(translate, throttleDrag);\n            throttleArray(beforeTranslate, throttleDrag);\n        }\n\n        const beforeDist = minus(beforeTranslate, startValue);\n        const dist = minus(translate, startValue);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = convertTransformFormat(datas,\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            width,\n            height,\n            isPinch,\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas, isDrag } = e;\n\n        moveable.state.gesto = null;\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", fillEndParams<OnDragEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildGesto(moveable, this, \"dragStart\", [\n            clientX || 0,\n            clientY || 0,\n        ], e, false);\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDeltaX, passDeltaY } = e.datas;\n        const events = triggerChildGesto(moveable, this, \"drag\", [passDeltaX, passDeltaY], e, false);\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false);\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: any) {\n        moveable.state.dragInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n","import { prefix, getControlTransform, throttle, getLineStyle } from \"./utils\";\nimport { Renderer, MoveableManagerInterface, RenderDirections } from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS } from \"./consts\";\nimport { IObject, getRad } from \"@daybrush/utils\";\n\nexport function renderDirectionControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    defaultDirections: string[],\n    React: Renderer,\n    additionalClassName: string = \"\",\n): any[] {\n    const {\n        renderPoses,\n        rotation: radRotation,\n        direction,\n    } = moveable.state;\n    const {\n        renderDirections: directions = defaultDirections,\n        zoom,\n    } = moveable.props;\n\n    const directionMap: IObject<boolean> = {};\n\n    if (!directions) {\n        return [];\n    }\n    const sign = (direction > 0 ? 1 : -1);\n    const renderDirections = directions === true ? DIRECTIONS : directions;\n    const degRotation = radRotation / Math.PI * 180;\n\n    renderDirections.forEach(dir => {\n        directionMap[dir] = true;\n    });\n    return renderDirections.map(dir => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes || !directionMap[dir]) {\n            return null;\n        }\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        return (\n            <div className={prefix(\"control\", \"direction\", dir, additionalClassName)}\n                data-rotation={directionRotation} data-direction={dir} key={`direction-${dir}`}\n                style={getControlTransform(radRotation, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\nexport function renderLine(\n    React: Renderer, direction: string,\n    pos1: number[], pos2: number[],\n    zoom: number,\n    key: number | string, ...classNames: string[]) {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line${key}`} className={prefix(\"line\", \"direction\", direction, ...classNames)}\n        data-rotation={rotation}\n        data-line-index={key}\n        data-direction={direction} style={getLineStyle(pos1, pos2, zoom, rad)}></div>;\n}\nexport function renderAllDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n) {\n    return renderDirectionControls(moveable, DIRECTIONS, React);\n}\nexport function renderDiagonalDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n): any[] {\n    return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], React);\n}\n","import {\n    throttle, prefix, triggerEvent, fillParams,\n    calculatePosition, fillEndParams, getRotationRad, getRefTargets,\n} from \"../utils\";\nimport { IObject, hasClass, getRad } from \"@daybrush/utils\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps,\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\n    OnDragStart,\n} from \"../types\";\nimport { triggerChildAbles } from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { minus, plus, rotate as rotateMatrix } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapRotate } from \"./Snappable\";\nimport {\n    fillTransformStartEvent,\n    convertTransformFormat, getRotateDist,\n    getOriginDirection,\n    getDirectionOffset,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    resolveTransformEvent,\n    getTransformDirection,\n} from \"../gesto/GestoUtils\";\nimport { renderDirectionControls } from \"../renderDirections\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number, origin: number[], rect: MoveableClientRect) {\n\n    const n = moveable.state.is3d ? 4 : 3;\n    const nextOrigin = calculatePosition(moveable.state.rootMatrix, origin, n);\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.prevSnapDeg = datas.prevDeg;\n    datas.startDeg = datas.prevDeg;\n    datas.loop = 0;\n}\nfunction getParentDeg(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    parentDist: number,\n    direction: number,\n    startValue: number,\n) {\n    const {\n        prevDeg,\n    } = datas;\n\n    // const absoluteDeg = startValue + parentDist;\n    const dist = checkSnapRotate(\n        moveable,\n        moveableRect,\n        datas.origin,\n        parentDist,\n    );\n    datas.prevDeg = dist;\n\n    const delta = dist - prevDeg;\n\n    return [delta, dist, startValue + dist];\n}\nfunction getDeg(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    deg: number,\n    direction: number,\n    startValue: number,\n    throttleRotate: number,\n    isSnap?: boolean,\n) {\n    const {\n        prevDeg,\n        prevSnapDeg,\n        startDeg,\n        loop: prevLoop,\n    } = datas;\n\n    if (prevDeg > deg && prevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++datas.loop;\n    } else if (prevDeg < deg && prevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --datas.loop;\n    }\n    const loop = datas.loop;\n    const absolutePrevSnapDeg = prevLoop * 360 + prevSnapDeg - startDeg + startValue;\n    let absoluteDeg = loop * 360 + deg - startDeg + startValue;\n\n    datas.prevDeg = absoluteDeg - loop * 360 + startDeg - startValue;\n\n    absoluteDeg = throttle(absoluteDeg, throttleRotate);\n    let dist = direction * (absoluteDeg - startValue);\n    if (isSnap) {\n        dist = checkSnapRotate(moveable, moveableRect, datas.origin, dist);\n        absoluteDeg = dist / direction + startValue;\n    }\n    datas.prevSnapDeg = absoluteDeg - loop * 360 + startDeg - startValue;\n\n    const delta = direction * (absoluteDeg - absolutePrevSnapDeg);\n\n    return [delta, dist, startValue + dist];\n}\nfunction getRotateInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    direction: number,\n    clientX: number, clientY: number,\n    startValue: number,\n    throttleRotate: number,\n) {\n    return getDeg(\n        moveable,\n        moveableRect,\n        datas,\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        startValue,\n        throttleRotate,\n        true,\n    );\n}\n\nexport function getReversePositionX(dir: string) {\n    if (dir === \"left\") {\n        return \"right\";\n    } else if (dir === \"right\") {\n        return \"left\";\n    }\n    return dir;\n}\nexport function getReversePositionY(dir: string) {\n    if (dir === \"top\") {\n        return \"bottom\";\n    } else if (dir === \"bottom\") {\n        return \"top\";\n    }\n    return dir;\n}\nexport function getRotationPositions(\n    rotationPosition: RotatableProps[\"rotationPosition\"],\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number,\n) {\n    if (rotationPosition === \"none\") {\n        return;\n    }\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\n    let radPoses = [pos1, pos2];\n\n    // if (scale[0] < 0) {\n    //     dir1 = getReversePositionX(dir1);\n    //     dir2 = getReversePositionX(dir2);\n    // }\n    // if (scale[1] < 0) {\n    //     dir1 = getReversePositionY(dir1);\n    //     dir2 = getReversePositionY(dir2);\n    // }\n    if (dir1 === \"left\") {\n        radPoses = [pos3, pos1];\n    } else if (dir1 === \"right\") {\n        radPoses = [pos2, pos4];\n    } else if (dir1 === \"bottom\") {\n        radPoses = [pos4, pos3];\n    }\n    let pos = [\n        (radPoses[0][0] + radPoses[1][0]) / 2,\n        (radPoses[0][1] + radPoses[1][1]) / 2,\n    ];\n    const rad = getRotationRad(radPoses, direction);\n    if (dir2) {\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\n    }\n    return [pos, rad] as const;\n}\n\nexport function dragControlCondition(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n    if (e.isRequest) {\n        return e.requestAble === \"rotatable\";\n    }\n    const target = e.inputEvent.target as HTMLElement;\n    if (hasClass(target, prefix(\"rotation-control\"))) {\n        return true;\n    }\n    const rotationTarget = moveable.props.rotationTarget;\n\n    if (rotationTarget) {\n        return getRefTargets(rotationTarget, true).some(element => {\n            if (!element) {\n                return false;\n            }\n            return target === element || target.contains(element);\n        });\n    }\n    return false;\n}\n\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: {\n        rotatable: Boolean,\n        rotationPosition: String,\n        throttleRotate: Number,\n        renderDirections: Object,\n        rotationTarget: Object,\n    } as const,\n    events: {\n        onRotateStart: \"rotateStart\",\n        onRotate: \"rotate\",\n        onRotateEnd: \"rotateEnd\",\n        onRotateGroupStart: \"rotateGroupStart\",\n        onRotateGroup: \"rotateGroup\",\n        onRotateGroupEnd: \"rotateGroupEnd\",\n    } as const,\n    css: [\n        `.rotation {\n            position: absolute;\n            height: 40px;\n            width: 1px;\n            transform-origin: 50% 100%;\n            height: calc(40px * var(--zoom));\n            top: auto;\n            left: 0;\n            bottom: 100%;\n            will-change: transform;\n        }\n        .rotation .rotation-line {\n            display: block;\n            width: 100%;\n            height: 100%;\n            transform-origin: 50% 50%;\n        }\n        .rotation .rotation-control {\n            border-color: #4af;\n            border-color: var(--moveable-color);\n            background:#fff;\n            cursor: alias;\n        }`,\n    ],\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n            zoom,\n            renderDirections,\n        } = moveable.props;\n        const {\n            renderPoses,\n            direction,\n        } = moveable.state;\n        if (!rotatable) {\n            return null;\n        }\n        const positions = getRotationPositions(rotationPosition!, renderPoses, direction);\n\n        const jsxs = [];\n\n        if (positions) {\n            const [pos, rad] = positions;\n            jsxs.push(\n                <div key=\"rotation\" className={prefix(\"rotation\")} style={{\n                    // tslint:disable-next-line: max-line-length\n                    transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rad}rad)`,\n                }}>\n                    <div className={prefix(\"line rotation-line\")} style={{\n                        transform: `scaleX(${zoom})`,\n                    }}></div>\n                    <div className={prefix(\"control rotation-control\")} style={{\n                        transform: `translate(0.5px) scale(${zoom})`,\n                    }}></div>\n                </div>\n            );\n        }\n        if (renderDirections) {\n            jsxs.push(...renderDirectionControls(moveable, [], React));\n        }\n\n\n        return jsxs;\n    },\n    dragControlCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const {\n            target, left, top, origin, beforeOrigin,\n            direction, beforeDirection, targetTransform,\n            moveableClientRect,\n        } = moveable.state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n        datas.fixedPosition = getDirectionOffset(moveable, getOriginDirection(moveable));\n        datas.absoluteInfo = {\n            origin: rect.origin,\n            startValue: rect.rotation,\n        };\n        setRotateStartInfo(moveable, datas.absoluteInfo, clientX, clientY, origin, moveableClientRect);\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n            datas.afterInfo = {\n                origin: rect.origin,\n                prevDeg: externalRotate, startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n        } else {\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n\n            setRotateStartInfo(moveable, datas.beforeInfo, clientX, clientY, beforeOrigin, moveableClientRect);\n            setRotateStartInfo(moveable, datas.afterInfo, clientX, clientY, origin, moveableClientRect);\n        }\n\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startValue = 0;\n        datas.datas = {};\n\n        setDefaultTransformIndex(e, \"rotate\");\n\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startValue = rotatation * Math.PI / 180;\n            },\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart | false,\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n        };\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, clientX, clientY, parentRotate, parentFlag, isPinch, groupDelta } = e;\n        const {\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            absoluteInfo,\n            isRotate,\n            startValue,\n            rect,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n\n        resolveTransformEvent(e, \"rotate\");\n\n        const targetDirection = getTransformDirection(e);\n        const direction = beforeDirection * targetDirection;\n        const {\n            throttleRotate = 0,\n            parentMoveable,\n        } = moveable.props;\n\n        let delta: number;\n        let dist: number;\n        let rotate: number;\n\n        let beforeDelta: number;\n        let beforeDist: number;\n        let beforeRotate: number;\n\n        let absoluteDelta: number;\n        let absoluteDist: number;\n        let absoluteRotate: number;\n\n        const startDeg = 180 / Math.PI * startValue;\n        const absoluteStartDeg = absoluteInfo.startValue;\n\n        if (!parentFlag && \"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            [delta, dist, rotate]\n                = getParentDeg(moveable, rect, afterInfo, parentDist, direction, startDeg);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getParentDeg(moveable, rect, beforeInfo, parentDist, beforeDirection, startDeg);\n            [absoluteDelta, absoluteDist, absoluteRotate]\n                = getParentDeg(moveable, rect, absoluteInfo, parentDist, direction, absoluteStartDeg);\n        } else if (isPinch || parentFlag) {\n            [delta, dist, rotate]\n                = getDeg(moveable, rect, afterInfo, parentRotate, direction, startDeg, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getDeg(moveable, rect, beforeInfo, parentRotate, beforeDirection, startDeg, throttleRotate);\n            [absoluteDelta, absoluteDist, absoluteRotate]\n                = getDeg(moveable, rect, absoluteInfo, parentRotate, direction, absoluteStartDeg, throttleRotate);\n        } else {\n            [delta, dist, rotate]\n                = getRotateInfo(moveable, rect, afterInfo, direction, clientX, clientY, startDeg, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate] = getRotateInfo(\n                moveable, rect, beforeInfo, beforeDirection, clientX, clientY,\n                startDeg, throttleRotate,\n            );\n            [absoluteDelta, absoluteDist, absoluteRotate]\n                = getRotateInfo(\n                    moveable, rect, absoluteInfo, direction, clientX, clientY,\n                    absoluteStartDeg, throttleRotate,\n                );\n        }\n\n        if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `rotate(${rotate}deg)`, `rotate(${dist}deg)`,\n        );\n\n        const inverseDist = getRotateDist(moveable, dist, datas.fixedPosition, datas);\n        const inverseDelta = minus(\n            plus(groupDelta || [0, 0], inverseDist),\n            datas.prevInverseDist || [0, 0],\n        );\n        datas.prevInverseDist = inverseDist;\n\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate,\n\n            beforeDist,\n            beforeDelta,\n            beforeRotate,\n\n            absoluteDist,\n            absoluteDelta,\n            absoluteRotate,\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const { datas, isDrag } = e;\n\n        if (!datas.isRotate) {\n            return false;\n        }\n        datas.isRotate = false;\n\n        triggerEvent(moveable, \"onRotateEnd\", fillEndParams<OnRotateEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupControlCondition: dragControlCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(datas.beforeDirection * moveable.rotation);\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                ev.datas.groupClient = childClient;\n                return { ...ev, parentRotate: 0 };\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const direction = datas.beforeDirection;\n        const parentRotate = params.beforeDist;\n        const deg = params.beforeDelta;\n        const rad = deg / 180 * Math.PI;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [prevX, prevY] = ev.datas.groupClient;\n                const [clientX, clientY] = rotateMatrix([prevX, prevY], rad * direction);\n                const delta = [clientX - prevX, clientY - prevY];\n\n                ev.datas.groupClient = [clientX, clientY];\n\n                return { ...ev, parentRotate, groupDelta: delta };\n            },\n        );\n        moveable.rotation = direction * params.beforeRotate;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set: (rotation: number) => {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n     *\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * requester.request({ rotate: 10 });\n     * requester.request({ rotate: 20 });\n     * requester.request({ rotate: 30 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\n        const datas = {};\n        let distRotate = 0;\n\n        const startRotation = moveable.getRotation();\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaRotate\" in e) {\n                    distRotate += e.deltaRotate;\n                } else if (\"rotate\" in e) {\n                    distRotate = e.rotate - startRotation;\n                }\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    throttle, getDirection, triggerEvent,\n    fillParams, getCSSSize,\n    getDistSize, fillEndParams, directionCondition,\n    getComputedStyle,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getDragDist,\n    getResizeDist,\n    getAbsolutePosition,\n} from \"../gesto/GestoUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    Renderer, OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface, SnappableProps,\n} from \"../types\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirections\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapResize } from \"./Snappable\";\nimport { calculateBoundSize, IObject, isString, getRad, convertUnitSize } from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        resizable: Boolean,\n        throttleResize: Number,\n        renderDirections: Array,\n        keepRatio: Boolean,\n    } as const,\n    events: {\n        onResizeStart: \"resizeStart\",\n        onResize: \"resize\",\n        onResizeEnd: \"resizeEnd\",\n\n        onResizeGroupStart: \"resizeGroupStart\",\n        onResizeGroup: \"resizeGroup\",\n        onResizeGroupEnd: \"resizeGroupEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<Partial<ResizableProps>>, React: Renderer): any[] | undefined {\n        const { resizable, edge } = moveable.props;\n        if (resizable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            parentDirection,\n            datas,\n            parentFlag,\n        } = e;\n\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n\n        const { target, width, height } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        !isPinch && setDragStart(moveable, e);\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n        [\n            datas.startWidth,\n            datas.startHeight,\n        ] = getCSSSize(target);\n        const padding = [Math.max(0, width - datas.startWidth), Math.max(0, height - datas.startHeight)];\n        datas.minSize = padding;\n        datas.maxSize = [Infinity, Infinity];\n\n        if (!parentFlag) {\n            const style = getComputedStyle(target);\n\n            const {\n                position,\n                minWidth,\n                minHeight,\n                maxWidth,\n                maxHeight,\n            } = style;\n            const isParentElement = position === \"static\" || position === \"relative\";\n            const container = isParentElement\n                ? target.parentElement\n                : (target as HTMLElement).offsetParent;\n\n            let containerWidth = width;\n            let containerHeight = height;\n\n            if (container) {\n                containerWidth = container!.clientWidth;\n                containerHeight = container!.clientHeight;\n\n                if (isParentElement) {\n                    const containerStyle = getComputedStyle(container!);\n\n                    containerWidth -= parseFloat(containerStyle.paddingLeft) || 0;\n                    containerHeight -= parseFloat(containerStyle.paddingTop) || 0;\n                }\n            }\n\n            datas.minSize = plus([\n                convertUnitSize(minWidth, containerWidth) || 0,\n                convertUnitSize(minHeight, containerHeight) || 0,\n            ], padding);\n            datas.maxSize = plus([\n                convertUnitSize(maxWidth, containerWidth) || Infinity,\n                convertUnitSize(maxHeight, containerHeight) || Infinity,\n            ], padding);\n        }\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\n\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\n            ? transformOrigin.split(\" \")\n            : transformOrigin;\n\n        datas.isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getAbsolutePosition(moveable, fixedDirection);\n        }\n\n        setRatio(width / height);\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setMin: (minSize: number[]) => {\n                datas.minSize = minSize;\n            },\n            setMax: (maxSize: number[]) => {\n                datas.maxSize = [\n                    maxSize[0] || Infinity,\n                    maxSize[1] || Infinity,\n                ];\n            },\n            setRatio,\n            setFixedDirection,\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent<ResizableProps>(moveable, \"onResizeStart\", params);\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps & SnappableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            distX, distY,\n            parentFlag, isPinch,\n            parentDistance, parentScale,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n            isRequest,\n        } = e;\n\n        const {\n            isResize,\n            transformOrigin,\n            fixedDirection,\n            startWidth,\n            startHeight,\n            prevWidth,\n            prevHeight,\n            minSize,\n            maxSize,\n            ratio,\n            isWidth,\n            startOffsetWidth,\n            startOffsetHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            throttleResize = 0,\n            parentMoveable,\n            snapThreshold = 5,\n        } = moveable.props;\n        let direction = datas.direction;\n        let sizeDirection = direction;\n        let distWidth = 0;\n        let distHeight = 0;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = ratio && (moveable.props.keepRatio || parentKeepRatio);\n        let fixedPosition = dragClient;\n\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        if (parentDist) {\n            distWidth = parentDist[0];\n            distHeight = parentDist[1];\n\n            if (keepRatio) {\n                if (!distWidth) {\n                    distWidth = distHeight * ratio;\n                } else if (!distHeight) {\n                    distHeight = distWidth / ratio;\n                }\n            }\n        } else if (parentScale) {\n            distWidth = (parentScale[0] - 1) * startOffsetWidth;\n            distHeight = (parentScale[1] - 1) * startOffsetHeight;\n        } else if (isPinch) {\n            if (parentDistance) {\n                distWidth = parentDistance;\n                distHeight = parentDistance * startOffsetHeight / startOffsetWidth;\n            }\n        } else {\n            const dist = getDragDist({ datas, distX, distY });\n\n            distWidth = sizeDirection[0] * dist[0];\n            distHeight = sizeDirection[1] * dist[1];\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                const rad = getRad([0, 0], dist);\n                const standardRad = getRad([0, 0], sizeDirection);\n                const size = getDistSize([distWidth, distHeight]);\n                const signSize = Math.cos(rad - standardRad) * size;\n\n                if (!sizeDirection[0]) {\n                    // top, bottom\n                    distHeight = signSize;\n                    distWidth = distHeight / ratio;\n                } else if (!sizeDirection[1]) {\n                    // left, right\n                    distWidth = signSize;\n                    distHeight = distWidth * ratio;\n                } else {\n                    // two-way\n                    const startWidthSize = sizeDirection[0] * 2 * startOffsetWidth;\n                    const startHeightSize = sizeDirection[1] * 2 * startOffsetHeight;\n                    const distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]])\n                        - getDistSize([startWidthSize, startHeightSize]);\n                    const ratioRad = getRad([0, 0], [ratio, 1]);\n\n                    distWidth = Math.cos(ratioRad) * distSize;\n                    distHeight = Math.sin(ratioRad) * distSize;\n                }\n            } else if (!keepRatio) {\n                const nextDirection = [...direction];\n\n                if (!startOffsetWidth) {\n                    if (dist[0] < 0) {\n                        nextDirection[0] = -1;\n                    } else if (dist[0] > 0) {\n                        nextDirection[0] = 1;\n                    }\n                }\n                if (!startOffsetHeight) {\n                    if (dist[1] < 0) {\n                        nextDirection[1] = -1;\n                    } else if (dist[1] > 0) {\n                        nextDirection[1] = 1;\n                    }\n                }\n                direction = nextDirection;\n                sizeDirection = nextDirection;\n                distWidth = sizeDirection[0] * dist[0];\n                distHeight = sizeDirection[1] * dist[1];\n            }\n        }\n        let nextWidth = sizeDirection[0] || keepRatio\n            ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n        let nextHeight = sizeDirection[1] || keepRatio\n            ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n        if (keepRatio && startOffsetWidth && startOffsetHeight) {\n            // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n            if (isWidth) {\n                nextHeight = nextWidth / ratio;\n            } else {\n                nextWidth = nextHeight * ratio;\n            }\n        }\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapResize(\n                moveable, nextWidth,\n                nextHeight, direction,\n                fixedPosition,\n                isRequest,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    nextWidth = throttle(nextWidth, throttleResize!);\n                } else {\n                    nextHeight = throttle(nextHeight, throttleResize!);\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                nextWidth += snapDist[0];\n                nextHeight = nextWidth / ratio;\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                nextHeight += snapDist[1];\n                nextWidth = nextHeight * ratio;\n            }\n        } else {\n            if (startOffsetWidth + distWidth < -snapThreshold) {\n                snapDist[0] = 0;\n            }\n            if (startOffsetWidth + distHeight < -snapThreshold) {\n                snapDist[1] = 0;\n            }\n            nextWidth += snapDist[0];\n            nextHeight += snapDist[1];\n            if (!snapDist[0]) {\n                nextWidth = throttle(nextWidth, throttleResize!);\n            }\n            if (!snapDist[1]) {\n                nextHeight = throttle(nextHeight, throttleResize!);\n            }\n        }\n        [nextWidth, nextHeight] = calculateBoundSize(\n            [nextWidth, nextHeight],\n            minSize,\n            maxSize,\n            keepRatio,\n        );\n        nextWidth = Math.round(nextWidth);\n        nextHeight = Math.round(nextHeight);\n        distWidth = nextWidth - startOffsetWidth;\n        distHeight = nextHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        const inverseDelta = getResizeDist(\n            moveable,\n            nextWidth, nextHeight,\n            fixedDirection, fixedPosition,\n            transformOrigin,\n        );\n\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\n            return;\n        }\n        const params = fillParams<OnResize>(moveable, e, {\n            width: startWidth + distWidth,\n            height: startHeight + distHeight,\n            offsetWidth: nextWidth,\n            offsetHeight: nextHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false),\n            ) as OnDrag,\n        });\n        triggerEvent<ResizableProps>(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            this.dragControl(moveable, e);\n            return true;\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isResize) {\n            return false;\n        }\n        datas.isResize = false;\n\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\n        triggerEvent<ResizableProps>(moveable, \"onResizeEnd\", params);\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const pos = getAbsolutePosition(child, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection(fixedDirection: number[]) {\n                params.setFixedDirection(fixedDirection);\n                events.forEach((ev, i) => {\n                    ev.setFixedDirection(fixedDirection);\n                    setDist(moveable.moveables[i], originalEvents[i]);\n                });\n            },\n        };\n        const result = triggerEvent<ResizableProps>(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const {\n            offsetWidth, offsetHeight, dist,\n        } = params;\n\n        const keepRatio = moveable.props.keepRatio;\n\n        const parentScale = [\n            offsetWidth / (offsetWidth - dist[0]),\n            offsetHeight / (offsetHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * parentScale[0],\n                        ev.datas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent<ResizableProps>(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        });\n\n        triggerEvent<ResizableProps>(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to resize\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @param {number} [e.offsetWidth] - offset number of width\n     * @param {number} [e.offsetHeight] - offset number of height\n     * @param {number} [e.isInstant] - Whether to execute the request instantly\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any>) {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight;\n                }\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can be resized. (default: false)\n * @name Moveable.Resizable#resizable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize.\n * @name Moveable.Resizable#throttleResize\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 0,\n * });\n *\n * moveable.throttleResize = 1;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Resizable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Resizable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    throttle, getDirection, triggerEvent, multiply2,\n    fillParams, getDistSize, fillEndParams, directionCondition,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, getDragDist,\n    resolveTransformEvent,\n    convertTransformFormat,\n    getScaleDist,\n    fillTransformStartEvent,\n    fillTransformEvent,\n    getAbsolutePosition,\n    setDefaultTransformIndex,\n} from \"../gesto/GestoUtils\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirections\";\nimport {\n    ScalableProps, ResizableProps, OnScaleGroup, OnScaleGroupEnd,\n    Renderer, OnScaleGroupStart, DraggableProps, OnDragStart,\n    SnappableState, GroupableProps, OnScaleStart,\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus, minus } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapScale } from \"./Snappable\";\nimport { isArray, IObject, getRad, getDist } from \"@daybrush/utils\";\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        scalable: Boolean,\n        throttleScale: Number,\n        renderDirections: String,\n        keepRatio: Boolean,\n    } as const,\n    events: {\n        onScaleStart: \"scaleStart\",\n        onScale: \"scale\",\n        onScaleEnd: \"scaleEnd\",\n        onScaleGroupStart: \"scaleGroupStart\",\n        onScaleGroup: \"scaleGroup\",\n        onScaleGroupEnd: \"scaleGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<Partial<ResizableProps & ScalableProps>>,\n        React: Renderer): any[] | undefined {\n        const { resizable, scalable, edge } = moveable.props;\n        if (!resizable && scalable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n            pos1,\n            pos2,\n            pos4,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, e);\n        }\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.width = width;\n        datas.height = height;\n        datas.startValue = [1, 1];\n\n        const scaleWidth = getDist(pos1, pos2);\n        const scaleHeight = getDist(pos2, pos4);\n        const isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n\n        datas.scaleWidth = scaleWidth;\n        datas.scaleHeight = scaleHeight;\n        datas.scaleXRatio = scaleWidth / width;\n        datas.scaleYRatio = scaleHeight / height;\n\n        setDefaultTransformIndex(e, \"scale\");\n\n\n\n        datas.isWidth = isWidth;\n\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getAbsolutePosition(moveable, fixedDirection);\n        }\n\n        setRatio(getDist(pos1, pos2) / getDist(pos2, pos4));\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startValue = scale;\n            },\n            setRatio,\n            setFixedDirection,\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent<ScalableProps, \"onScaleStart\">(moveable, \"onScaleStart\", params);\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        resolveTransformEvent(e, \"scale\");\n        const {\n            datas, distX, distY,\n            parentScale,\n            parentDistance,\n            parentKeepRatio,\n            parentFlag, isPinch,\n            dragClient,\n            parentDist,\n            isRequest,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            width,\n            height,\n            isScale,\n            startValue,\n            isWidth,\n            ratio,\n            fixedDirection,\n            scaleXRatio,\n            scaleYRatio,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const {\n            throttleScale,\n            parentMoveable,\n        } = moveable.props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = ratio && (moveable.props.keepRatio || parentKeepRatio);\n        const state = moveable.state;\n\n        let scaleX = 1;\n        let scaleY = 1;\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        if (parentDist) {\n            scaleX = (width + parentDist[0]) / width;\n            scaleY = (height + parentDist[1]) / height;\n        } else if (parentScale) {\n            scaleX = parentScale[0];\n            scaleY = parentScale[1];\n        } else if (isPinch) {\n            if (parentDistance) {\n                scaleX = (width + parentDistance) / width;\n                scaleY = (height + parentDistance * height / width) / height;\n            }\n        } else {\n            const dragDist = getDragDist({ datas, distX, distY });\n            let distScaleWidth = sizeDirection[0] * dragDist[0] * scaleXRatio;\n            let distScaleHeight = sizeDirection[1] * dragDist[1] * scaleYRatio;\n\n            if (keepRatio && width && height) {\n                if (!sizeDirection[0]) {\n                    // top, bottom\n                    // distHeight = signSize;\n                    distScaleWidth = distScaleHeight * ratio;\n                } else if (!sizeDirection[1]) {\n                    // left, right\n                    // distWidth = signSize;\n                    distScaleHeight = distScaleWidth / ratio;\n                } else {\n                    const size = getDistSize([distScaleWidth, distScaleHeight]);\n\n                    // two-way\n                    const dragRad = getRad([0, 0], dragDist);\n                    const standardRad = getRad([0, 0], sizeDirection);\n                    const signSize = Math.cos(dragRad - standardRad) * size;\n                    const ratioRad = getRad([0, 0], [ratio, 1]);\n\n                    distScaleWidth = Math.cos(ratioRad) * signSize;\n                    distScaleHeight = Math.sin(ratioRad) * signSize;\n                }\n            }\n            scaleX = (width + (distScaleWidth / scaleXRatio)) / width;\n            scaleY = (height + (distScaleHeight / scaleYRatio)) / height;\n        }\n\n        scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n        scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n\n        if (scaleX === 0) {\n            scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (scaleY === 0) {\n            scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n\n        const dist = [scaleX / startValue[0], scaleY / startValue[1]];\n        let scale = [scaleX, scaleY];\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction, request: e.isRequest };\n            }\n        }\n\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                dist,\n                direction,\n                isRequest,\n                datas,\n            );\n        }\n\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0] * width) > Math.abs(snapDist[1] * height)) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n                } else {\n                    dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                dist[0] += snapDist[0];\n                const snapHeight = width * dist[0] * startValue[0] / ratio;\n\n                dist[1] = snapHeight / height / startValue[1];\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                dist[1] += snapDist[1];\n                const snapWidth = height * dist[1] * startValue[1] * ratio;\n\n                dist[0] = snapWidth / width / startValue[0];\n            }\n        } else {\n            dist[0] += snapDist[0];\n            dist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n            }\n            if (!snapDist[1]) {\n                dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n            }\n        }\n        if (dist[0] === 0) {\n            dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (dist[1] === 0) {\n            dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n        scale = multiply2(dist, startValue);\n\n        const inverseDist = getScaleDist(moveable, dist, fixedDirection, fixedPosition, datas);\n\n        const inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n\n        datas.prevDist = dist;\n        datas.prevInverseDist = inverseDist;\n        if (\n            scaleX === prevDist[0] && scaleY === prevDist[1]\n            && inverseDelta.every(num => !num)\n            && !parentMoveable\n        ) {\n            return false;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `scale(${scale.join(\", \")})`, `scale(${dist.join(\", \")})`);\n        const params = fillParams<OnScale>(moveable, e, {\n            offsetWidth: width,\n            offsetHeight: height,\n            direction,\n\n            // beforeScale,\n            // beforeDist,\n            // beforeDelta,\n\n            scale,\n            dist,\n            delta,\n\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\n        const { datas, isDrag } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        triggerEvent(moveable, \"onScaleEnd\", fillEndParams<OnScaleEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const pos = getAbsolutePosition(child, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n\n        datas.moveableScale = moveable.scale;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection(fixedDirection: number[]) {\n                params.setFixedDirection(fixedDirection);\n                events.forEach((ev, i) => {\n                    ev.setFixedDirection(fixedDirection);\n                    setDist(moveable.moveables[i], originalEvents[i]);\n                });\n            },\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n\n        const moveableScale = datas.moveableScale;\n        moveable.scale = [\n            params.scale[0] * moveableScale[0],\n            params.scale[1] * moveableScale[1],\n        ];\n        const keepRatio = moveable.props.keepRatio;\n        const { dist, scale } = params;\n\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * dist[0],\n                        ev.datas.originalY * dist[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to scale\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can scaled. (default: false)\n * @name Moveable.Scalable#scalable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, the scale event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the scale event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the scaleEnd event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the scaleEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\n    triggerEvent, fillParams, fillEndParams,\n} from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    calculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    minus,\n    createWarpMatrix,\n    plus,\n} from \"@scena/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport {\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\n    fillTransformStartEvent, resolveTransformEvent,\n    convertTransformFormat, fillOriginalTransform, getTransfromMatrix,\n} from \"../gesto/GestoUtils\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { hasClass, dot, getRad } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirections\";\nimport { hasGuidelines, checkMoveableSnapBounds } from \"./Snappable\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: {\n        warpable: Boolean,\n        renderDirections: Array,\n    } as const,\n    events: {\n        onWarpStart: \"warpStart\",\n        onWarp: \"warp\",\n        onWarpEnd: \"warpEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\n        const { resizable, scalable, warpable, zoom } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return [];\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")}\n                key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4, zoom)}></div>,\n            ...renderAllDirections(moveable, React),\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        return hasClass(e.inputEvent.target, prefix(\"direction\"));\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map(p => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startValue = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"matrix3d\");\n\n        state.snapRenderInfo = {\n            request: e.isRequest,\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startValue = matrix;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, isRequest } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n        resolveTransformEvent(e, \"matrix3d\");\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkMoveableSnapBounds(\n                moveable,\n                isRequest,\n                selectedPoses.map(pos => [pos[0] + distX, pos[1] + distY]),\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[2],\n            poses[1],\n            poses[3],\n            nextPoses[0],\n            nextPoses[2],\n            nextPoses[1],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n        // B * A * M\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\n\n        // B * M * A\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\n\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n        const totalMatrix = multiply(startValue, matrix, 4);\n        const nextTransform = convertTransformFormat(\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\n\n        fillOriginalTransform(e, nextTransform);\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: totalMatrix,\n            dist: matrix,\n            multiply,\n            transform: nextTransform,\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\n        return isDrag;\n    },\n};\n\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n","import { prefix } from \"./utils\";\n\nexport const AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nexport const AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nexport const AVOID = /*#__PURE__*/prefix(\"avoid\");\n","import {\n    createWarpMatrix,\n} from \"@scena/matrix\";\nimport { ref } from \"framework-utils\";\nimport { getRect, calculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\nimport {\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\nimport { addClass, removeClass } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManagerInterface) {\n    const el = moveable.areaElement;\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: {\n        dragArea: Boolean,\n        passDragArea: Boolean,\n    } as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\n        const { width, height, renderPoses } = moveable.state;\n\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            renderPoses[0],\n            renderPoses[1],\n            renderPoses[2],\n            renderPoses[3],\n        );\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        const areaElement = moveable.areaElement;\n        const state = moveable.state;\n        const {\n            moveableClientRect,\n            renderPoses,\n            rootMatrix,\n            is3d,\n        } = state;\n        const { left, top } = moveableClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n            width,\n            height,\n        } = getRect(renderPoses);\n        const n = is3d ? 4 : 3;\n        let [posX, posY] = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\n\n        posX -= relativeLeft;\n        posY -= relativeTop;\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n        state.disableNativeEvent = true;\n        return;\n    },\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\n        this.enableNativeEvent(moveable);\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\n        this.enableNativeEvent(moveable);\n        const { inputEvent, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<DragAreaProps>,\n        e: any,\n    ) {\n        return this.dragEnd(moveable, e);\n    },\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\n        restoreStyle(moveable);\n        moveable.state.disableNativeEvent = false;\n    },\n    enableNativeEvent(moveable: MoveableManagerInterface<DragAreaProps>) {\n        const state = moveable.state;\n        if (state.disableNativeEvent) {\n            requestAnimationFrame(() => {\n                state.disableNativeEvent = false;\n            });\n        }\n    },\n};\n\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n","import { prefix, getControlTransform } from \"../utils\";\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"origin\", {\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\n        const { zoom } = moveable.props;\n        const { beforeOrigin, rotation } = moveable.state;\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, zoom!, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n});\n\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n","\nimport { ScrollableProps, OnScroll, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { triggerEvent, fillParams, getRefTarget } from \"../utils\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: {\n        scrollable: Boolean,\n        scrollContainer: Object,\n        scrollThreshold: Number,\n        getScrollPosition: Function,\n    } as const,\n    events: {\n        onScroll: \"scroll\",\n        onScrollGroup: \"scrollGroup\",\n    } as const,\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer() as HTMLElement,\n        } = props;\n\n        const dragScroll = new DragScroll();\n        const scrollContainerElement = getRefTarget<HTMLElement>(scrollContainer, true);\n\n        e.datas.dragScroll = dragScroll;\n\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY }) => {\n            moveable[gestoName].scrollBy(offsetX, offsetY, e.inputEvent, false);\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainerElement!,\n        });\n    },\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const {\n            dragScroll,\n        } = e.datas;\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer(),\n            scrollThreshold = 0,\n            getScrollPosition = getDefaultScrollPosition,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer,\n            threshold: scrollThreshold,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupContro(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n\n/**\n * Whether or not target can be scrolled to the scroll container (default: false)\n * @name Moveable.Scrollable#scrollable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n * moveable.scrollable = true;\n */\n\n/**\n * The container to which scroll is applied (default: container)\n * @name Moveable.Scrollable#scrollContainer\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n/**\n * Expand the range of the scroll check area. (default: 0)\n * @name Moveable.Scrollable#scrollThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Sets a function to get the scroll position. (default: Function)\n * @name Moveable.Scrollable#getScrollPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n","export default {\n    name: \"\",\n    props: {\n        target: Object,\n        dragTarget: Object,\n        container: Object,\n        portalContainer: Object,\n        rootContainer: Object,\n        zoom: Number,\n        transformOrigin: Array,\n        edge: Boolean,\n        ables: Array,\n        className: String,\n        pinchThreshold: Number,\n        pinchOutside: Boolean,\n        triggerAblesSimultaneously: Boolean,\n        checkInput: Boolean,\n        cspNonce: String,\n        translateZ: Number,\n        props: Object,\n    } as const,\n    events: {} as const,\n};\n","import { prefix, makeMatrixCSS } from \"../utils\";\nimport { Renderer, MoveableManagerInterface } from \"../types\";\nimport { createWarpMatrix } from \"@scena/matrix\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"padding\", {\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\n        const props = moveable.props;\n        if (props.dragArea) {\n            return [];\n        }\n        const padding = props.padding || {};\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = padding;\n        const {\n            renderPoses,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        } = moveable.state;\n\n        const poses = [pos1, pos2, pos3, pos4];\n        const paddingDirections: number[][] = [];\n\n        if (left > 0) {\n            paddingDirections.push([0, 2]);\n        }\n        if (top > 0) {\n            paddingDirections.push([0, 1]);\n        }\n        if (right > 0) {\n            paddingDirections.push([1, 3]);\n        }\n        if (bottom > 0) {\n            paddingDirections.push([2, 3]);\n        }\n        return paddingDirections.map(([dir1, dir2], i) => {\n            const paddingPos1 = poses[dir1];\n            const paddingPos2 = poses[dir2];\n            const paddingPos3 = renderPoses[dir1];\n            const paddingPos4 = renderPoses[dir2];\n\n            const h = createWarpMatrix(\n                [0, 0],\n                [100, 0],\n                [0, 100],\n                [100, 100],\n                paddingPos1,\n                paddingPos2,\n                paddingPos3,\n                paddingPos4,\n            );\n            if (!h.length) {\n                return undefined;\n            }\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\n                transform: makeMatrixCSS(h, true),\n            }}></div>);\n        });\n    },\n});\n\n/**\n * Add padding around the target to increase the drag area. (default: null)\n * @name Moveable#padding\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n","import { convertCSSSize } from \"../../utils\";\nimport { ControlPose } from \"../../types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\n\nfunction calculateRatio(values: number[], size: number) {\n    const sumSize = values[0] + values[1];\n    const sumRatio = sumSize > size ? size / sumSize : 1;\n\n    values[0] *= sumRatio;\n    values[1] = size - values[1] * sumRatio;\n\n    return values;\n}\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\n\nexport function getRadiusStyles(\n    poses: number[][], controlPoses: ControlPose[],\n    isRelative: boolean,\n    width: number,\n    height: number,\n    left = 0,\n    top = 0,\n    right: number = width,\n    bottom: number = height,\n) {\n    const clipStyles: string[] = [];\n    let isVertical = false;\n\n    const raws = poses.map((pos, i) => {\n        const { horizontal, vertical } = controlPoses[i];\n        if (vertical && !isVertical) {\n            isVertical = true;\n            clipStyles.push(\"/\");\n        }\n\n        if (isVertical) {\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n\n            return rawPos;\n        } else {\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n\n            return rawPos;\n        }\n    });\n\n    return {\n        styles: clipStyles,\n        raws,\n    };\n}\nexport function getRadiusRange(controlPoses: ControlPose[]) {\n    // [start, length]\n    const horizontalRange = [0, 0];\n    const verticalRange = [0, 0];\n    const length = controlPoses.length;\n\n    for (let i = 0; i < length; ++i) {\n        const clipPose = controlPoses[i];\n\n        if (!clipPose.sub) {\n            continue;\n        }\n        if (clipPose.horizontal) {\n            if (horizontalRange[1] === 0) {\n                horizontalRange[0] = i;\n            }\n            horizontalRange[1] = i - horizontalRange[0] + 1;\n            verticalRange[0] = i + 1;\n        }\n        if (clipPose.vertical) {\n            if (verticalRange[1] === 0) {\n                verticalRange[0] = i;\n            }\n            verticalRange[1] = i - verticalRange[0] + 1;\n        }\n    }\n\n    return {\n        horizontalRange,\n        verticalRange,\n    };\n}\nexport function getRadiusValues(\n    values: string[],\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n    minCounts: number[] = [0, 0],\n): ControlPose[] {\n    const splitIndex = values.indexOf(\"/\");\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n    const horizontalValues = values.slice(0, splitLength);\n    const verticalValues = values.slice(splitLength + 1);\n    const [\n        nwValue = \"0px\",\n        neValue = nwValue,\n        seValue = nwValue,\n        swValue = neValue,\n    ] = horizontalValues;\n    const [\n        wnValue = nwValue,\n        enValue = wnValue,\n        esValue = wnValue,\n        wsValue = enValue,\n    ] = verticalValues;\n\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\n    const horizontalPoses = horizontalRawPoses.slice();\n    const verticalPoses = verticalRawPoses.slice();\n\n    [horizontalPoses[0], horizontalPoses[1]] = calculateRatio([horizontalPoses[0], horizontalPoses[1]], width);\n    [horizontalPoses[3], horizontalPoses[2]] = calculateRatio([horizontalPoses[3], horizontalPoses[2]], width);\n    [verticalPoses[0], verticalPoses[3]] = calculateRatio([verticalPoses[0], verticalPoses[3]], height);\n    [verticalPoses[1], verticalPoses[2]] = calculateRatio([verticalPoses[1], verticalPoses[2]], height);\n\n    const nextHorizontalPoses\n        = horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValues.length));\n    const nextVerticalPoses\n        = verticalPoses.slice(0, Math.max(minCounts[1], verticalValues.length));\n    return [\n        ...nextHorizontalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n                sub: true,\n                raw: horizontalRawPoses[i],\n                direction,\n            };\n        }),\n        ...nextVerticalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n                sub: true,\n                raw: verticalRawPoses[i],\n                direction,\n            };\n        }),\n    ];\n}\nexport function removeRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    index: number,\n    startIndex: number,\n    length: number = poses.length,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    const radiuslIndex = index - startIndex;\n    let deleteCount = 0;\n\n    if (radiuslIndex === 0) {\n        deleteCount = length;\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n        deleteCount = horizontalRange[1] - radiuslIndex;\n    } else if (radiuslIndex >= verticalRange[0]) {\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n    } else {\n        return;\n    }\n    controlPoses.splice(index, deleteCount);\n    poses.splice(index, deleteCount);\n}\nexport function addRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    startIndex: number,\n    horizontalIndex: number,\n    verticalIndex: number,\n    distX: number,\n    distY: number,\n    right: number,\n    bottom: number,\n    left = 0,\n    top = 0,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    if (horizontalIndex > -1) {\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\n            ? distX - left\n            : right - distX;\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n            let x = 0;\n            if (horizontalIndex === i) {\n                x = distX;\n            } else if (i === 0) {\n                x = left + radiusX;\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n                x = right - (poses[startIndex][0] - left);\n            }\n            controlPoses.splice(startIndex + i, 0, {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [x, y],\n            });\n            poses.splice(startIndex + i, 0, [x, y]);\n\n            if (i === 0) {\n                break;\n            }\n        }\n    } else if (verticalIndex > - 1) {\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\n            ? distY - top\n            : bottom - distY;\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n            const pos = [\n                left + radiusY,\n                top,\n            ];\n            controlPoses.push({\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n                vertical: 0,\n                pos,\n            });\n            poses.push(pos);\n        }\n\n        const startVerticalIndex = verticalRange[0];\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n            let y = 0;\n            if (verticalIndex === i) {\n                y = distY;\n            } else if (i === 0) {\n                y = top + radiusY;\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n                y = poses[startIndex + startVerticalIndex][1];\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n            }\n            controlPoses.push({\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [x, y],\n            });\n            poses.push([x, y]);\n            if (i === 0) {\n                break;\n            }\n        }\n    }\n}\nexport function splitRadiusPoses(\n    controlPoses: ControlPose[],\n    raws: number[] = controlPoses.map(pos => pos.raw!),\n) {\n    const horizontals = controlPoses\n        .map((pos, i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\n    const verticals = controlPoses\n        .map((pos, i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\n\n    return {\n        horizontals,\n        verticals,\n    };\n}\n","import {\n    Renderer, ClippableProps, OnClip,\n    ClippableState, OnClipEnd, OnClipStart,\n    ControlPose, MoveableManagerInterface,\n} from \"../types\";\nimport { splitBracket, splitComma, splitUnit, splitSpace, convertUnitSize, getRad } from \"@daybrush/utils\";\nimport {\n    prefix, calculatePosition, getDiagonalSize,\n    fillParams, triggerEvent,\n    makeMatrixCSS, getRect, fillEndParams,\n    convertCSSSize, moveControlPos,\n    getComputedStyle,\n} from \"../utils\";\nimport { plus, minus } from \"@scena/matrix\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport {\n    getRadiusValues,\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, getRadiusStyles, addRadiusPos, removeRadiusPos,\n} from \"./roundable/borderRadius\";\nimport { renderLine } from \"../renderDirections\";\nimport { getDefaultGuidelines, checkSnapBoundPriority } from \"./snappable/snap\";\nimport { checkSnapBounds } from \"./Snappable\";\n\nconst CLIP_DIRECTIONS = [\n    [0, -1, \"n\"],\n    [1, 0, \"e\"],\n] as const;\nconst CLIP_RECT_DIRECTIONS = [\n    [-1, -1, \"nw\"],\n    [0, -1, \"n\"],\n    [1, -1, \"ne\"],\n    [1, 0, \"e\"],\n    [1, 1, \"se\"],\n    [0, 1, \"s\"],\n    [-1, 1, \"sw\"],\n    [-1, 0, \"w\"],\n] as const;\n\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nfunction getClipStyles(\n    moveable: MoveableManagerInterface<ClippableProps>,\n    clipPath: ReturnType<typeof getClipPath>,\n    poses: number[][],\n) {\n    const {\n        clipRelative,\n    } = moveable.props;\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const {\n        type: clipType,\n        poses: clipPoses,\n    } = clipPath!;\n\n    const isRect = clipType === \"rect\";\n    const isCircle = clipType === \"circle\";\n    if (clipType === \"polygon\") {\n        return poses.map(pos => `${convertCSSSize(pos[0], width, clipRelative)} ${convertCSSSize(pos[1], height, clipRelative)}`);\n    } else if (isRect || clipType === \"inset\") {\n        const top = poses[1][1];\n        const right = poses[3][0];\n        const left = poses[7][0];\n        const bottom = poses[5][1];\n\n        if (isRect) {\n            return [\n                top,\n                right,\n                bottom,\n                left,\n            ].map(pos => `${pos}px`);\n        }\n        const clipStyles\n            = [top, width - right, height - bottom, left]\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\n\n        if (poses.length > 8) {\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\n\n            clipStyles.push(\"round\", ...getRadiusStyles(\n                poses.slice(8),\n                clipPoses.slice(8),\n                clipRelative!,\n                subWidth,\n                subHeight,\n                left, top, right, bottom,\n            ).styles);\n        }\n        return clipStyles;\n    } else if (isCircle || clipType === \"ellipse\") {\n        const center = poses[0];\n        const ry = convertCSSSize(\n            Math.abs(poses[1][1] - center[1]),\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\n            clipRelative,\n        );\n\n        const clipStyles = isCircle ? [ry]\n            : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n\n        clipStyles.push(\n            \"at\", convertCSSSize(center[0], width, clipRelative),\n            convertCSSSize(center[1], height, clipRelative));\n\n        return clipStyles;\n    }\n}\nfunction getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\n    const xs = [left, (left + right) / 2, right];\n    const ys = [top, (top + bottom) / 2, bottom];\n\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\n        const x = xs[dirx + 1];\n        const y = ys[diry + 1];\n        return {\n            vertical: Math.abs(diry),\n            horizontal: Math.abs(dirx),\n            direction: dir,\n            pos: [x, y],\n        };\n    });\n}\nfunction getClipPath(\n    target: HTMLElement | SVGElement,\n    width: number,\n    height: number,\n    defaultClip?: string,\n    customClip?: string,\n) {\n    let clipText: string | undefined = customClip;\n\n    if (!clipText) {\n        const style = getComputedStyle(target!);\n        const clipPath = style.clipPath!;\n\n        clipText = clipPath !== \"none\" ? clipPath : style.clip!;\n    }\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n        clipText = defaultClip;\n\n        if (!clipText) {\n            return;\n        }\n    }\n    const {\n        prefix: clipPrefix = clipText,\n        value = \"\",\n    } = splitBracket(clipText);\n    const isCircle = clipPrefix === \"circle\";\n    let splitter = \" \";\n\n    if (clipPrefix === \"polygon\") {\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\n        splitter = \",\";\n\n        const poses: ControlPose[] = values.map(pos => {\n            const [xPos, yPos] = pos.split(\" \");\n\n            return {\n                vertical: 1,\n                horizontal: 1,\n                pos: [\n                    convertUnitSize(xPos, width),\n                    convertUnitSize(yPos, height),\n                ],\n            };\n        });\n\n        return {\n            type: clipPrefix,\n            clipText,\n            poses,\n            splitter,\n        } as const;\n    } else if (isCircle || clipPrefix === \"ellipse\") {\n        let xPos = \"\";\n        let yPos = \"\";\n        let radiusX = 0;\n        let radiusY = 0;\n        const values = splitSpace(value!);\n\n        if (isCircle) {\n            let radius = \"\";\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n            radiusY = radiusX;\n        } else {\n            let xRadius = \"\";\n            let yRadius = \"\";\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(xRadius, width);\n            radiusY = convertUnitSize(yRadius, height);\n        }\n        const centerPos = [\n            convertUnitSize(xPos, width),\n            convertUnitSize(yPos, height),\n        ];\n        const poses: ControlPose[] = [\n            {\n                vertical: 1,\n                horizontal: 1,\n                pos: centerPos,\n                direction: \"nesw\",\n            },\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\n                vertical: Math.abs(dir[1]),\n                horizontal: dir[0],\n                direction: dir[2],\n                sub: true,\n                pos: [\n                    centerPos[0] + dir[0] * radiusX,\n                    centerPos[1] + dir[1] * radiusY,\n                ],\n            })),\n        ];\n        return {\n            type: clipPrefix as \"circle\" | \"ellipse\",\n            clipText,\n            radiusX,\n            radiusY,\n            left: centerPos[0] - radiusX,\n            top: centerPos[1] - radiusY,\n            poses,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"inset\") {\n        const values = splitSpace(value! || \"0 0 0 0\");\n        const roundIndex = values.indexOf(\"round\");\n\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n        const radiusValues = values.slice(rectLength + 1);\n        const [\n            topValue,\n            rightValue = topValue,\n            bottomValue = topValue,\n            leftValue = rightValue,\n        ] = values.slice(0, rectLength);\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\n        const nextRight = width - right;\n        const nextBottom = height - bottom;\n        const radiusPoses = getRadiusValues(\n            radiusValues,\n            nextRight - left,\n            nextBottom - top,\n            left,\n            top,\n        );\n        const poses: ControlPose[] = [\n            ...getRectPoses(top, nextRight, nextBottom, left),\n            ...radiusPoses,\n        ];\n\n        return {\n            type: \"inset\",\n            clipText,\n            poses,\n            top,\n            left,\n            right: nextRight,\n            bottom: nextBottom,\n            radius: radiusValues,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"rect\") {\n        // top right bottom left\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\n\n        splitter = \",\";\n        const [top, right, bottom, left] = values.map(pos => {\n            const { value: posValue } = splitUnit(pos);\n\n            return posValue;\n        });\n        const poses = getRectPoses(top, right, bottom, left);\n\n        return {\n            type: \"rect\",\n            clipText,\n            poses,\n            top,\n            right,\n            bottom,\n            left,\n            values,\n            splitter,\n        } as const;\n    }\n    return;\n}\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const [distX, distY] = calculatePointerDist(moveable, e);\n    const { clipPath, index } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    if (clipType === \"polygon\") {\n        poses.splice(index, 0, [distX, distY]);\n    } else if (clipType === \"inset\") {\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(index);\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(index);\n        const length = clipPoses.length;\n\n        addRadiusPos(\n            clipPoses,\n            poses,\n            8,\n            horizontalIndex,\n            verticalIndex,\n            distX,\n            distY,\n            poses[4][0],\n            poses[4][1],\n            poses[0][0],\n            poses[0][1],\n        );\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"added\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const { clipPath, index } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    const length = poses.length;\n    if (clipType === \"polygon\") {\n        clipPoses.splice(index, 1);\n        poses.splice(index, 1);\n    } else if (clipType === \"inset\") {\n        if (index < 8) {\n            return;\n        }\n        removeRadiusPos(clipPoses, poses, index, 8, length);\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"removed\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nexport default {\n    name: \"clippable\",\n    props: {\n        clippable: Boolean,\n        defaultClipPath: String,\n        customClipPath: String,\n        clipRelative: Boolean,\n        clipArea: Boolean,\n        dragWithClip: Boolean,\n        clipTargetBounds: Boolean,\n        clipVerticalGuidelines: Array,\n        clipHorizontalGuidelines: Array,\n        clipSnapThreshold: Boolean,\n    } as const,\n    events: {\n        onClipStart: \"clipStart\",\n        onClip: \"clip\",\n        onClipEnd: \"clipEnd\",\n    } as const,\n    css: [\n        `.control.clip-control {\n    background: #6d6;\n    cursor: pointer;\n}\n.control.clip-control.clip-radius {\n    background: #d66;\n}\n.line.clip-line {\n    background: #6e6;\n    cursor: move;\n    z-index: 1;\n}\n.clip-area {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.clip-ellipse {\n    position: absolute;\n    cursor: move;\n    border: 1px solid #6d6;\n    border: var(--zoompx) solid #6d6;\n    border-radius: 50%;\n    transform-origin: 0px 0px;\n}`,\n        `:host {\n    --bounds-color: #d66;\n}`,\n        `.guideline {\n    pointer-events: none;\n    z-index: 2;\n}`,\n        `.line.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\n        const {\n            customClipPath, defaultClipPath,\n            clipArea, zoom,\n        } = moveable.props;\n        const {\n            target, width, height, allMatrix, is3d, left, top,\n            pos1, pos2, pos3, pos4,\n            clipPathState,\n            snapBoundInfos,\n        } = moveable.state;\n\n        if (!target) {\n            return [];\n        }\n\n        const clipPath = getClipPath(\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n\n        if (!clipPath) {\n            return [];\n        }\n        const n = is3d ? 4 : 3;\n        const type = clipPath.type;\n        const clipPoses = clipPath.poses;\n        const poses = clipPoses.map(pos => {\n            // return [x, y];\n            const calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n\n            return [\n                calculatedPos[0] - left,\n                calculatedPos[1] - top,\n            ];\n        });\n\n        let controls: any[] = [];\n        let lines: any[] = [];\n\n        const isRect = type === \"rect\";\n        const isInset = type === \"inset\";\n        const isPolygon = type === \"polygon\";\n\n        if (isRect || isInset || isPolygon) {\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\n\n            lines = linePoses.map((to, i) => {\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\n\n                const rad = getRad(from, to);\n                const dist = getDiagonalSize(from, to);\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\n                    data-clip-index={i}\n                    style={{\n                        width: `${dist}px`,\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n                    }}></div>;\n            });\n        }\n        controls = poses.map((pos, i) => {\n            return <div key={`clipControl${i}`}\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\n                data-clip-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n\n        if (isInset) {\n            controls.push(...poses.slice(8).map((pos, i) => {\n                return <div key={`clipRadiusControl${i}`}\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\n                    data-clip-index={8 + i}\n                    style={{\n                        transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                    }}></div>;\n            }));\n        }\n        if (type === \"circle\" || type === \"ellipse\") {\n            const {\n                left: clipLeft,\n                top: clipTop,\n                radiusX,\n                radiusY,\n            } = clipPath;\n\n            const [distLeft, distTop] = minus(\n                calculatePosition(allMatrix, [clipLeft!, clipTop!], n),\n                calculatePosition(allMatrix, [0, 0], n),\n            );\n            let ellipseClipPath = \"none\";\n\n            if (!clipArea) {\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\n                const areaPoses: number[][] = [];\n\n                for (let i = 0; i <= piece; ++i) {\n                    const rad = Math.PI * 2 / piece * i;\n                    areaPoses.push([\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\n                    ]);\n                }\n                areaPoses.push([radiusX!, -2]);\n                areaPoses.push([-2, -2]);\n                areaPoses.push([-2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, -2]);\n                areaPoses.push([radiusX!, -2]);\n\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\n            }\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\n                width: `${radiusX! * 2}px`,\n                height: `${radiusY! * 2}px`,\n                clipPath: ellipseClipPath,\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\n            }}></div>);\n        }\n        if (clipArea) {\n            const {\n                width: allWidth,\n                height: allHeight,\n                left: allLeft,\n                top: allTop,\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\n            if (isPolygon || isRect || isInset) {\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\n                    width: `${allWidth}px`,\n                    height: `${allHeight}px`,\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\n                    clipPath: `polygon(${areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")})`,\n                }}></div>);\n            }\n        }\n        if (snapBoundInfos) {\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\n                const info = snapBoundInfos[directionType];\n                const isHorizontal = directionType === \"horizontal\";\n                if (info.isSnap) {\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}snap${i}`, \"guideline\");\n                    }));\n                }\n                if (info.isBound) {\n                    lines.push(...info.bounds.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\n                    }));\n                }\n            });\n        }\n        return [\n            ...controls,\n            ...lines,\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n    },\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const props = moveable.props;\n        const {\n            dragWithClip = true,\n        } = props;\n\n        if (dragWithClip) {\n            return false;\n        }\n\n        return this.dragControlStart(moveable, e);\n    },\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControl(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControlEnd(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const state = moveable.state;\n        const { defaultClipPath, customClipPath } = moveable.props;\n        const { target, width, height } = state;\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\n        const className = inputTarget ? inputTarget.getAttribute(\"class\") : \"\";\n        const datas = e.datas;\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\n\n        if (!clipPath) {\n            return false;\n        }\n        const { clipText, type, poses } = clipPath;\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\n            clipType: type,\n            clipStyle: clipText,\n            poses: poses.map(pos => pos.pos),\n        }));\n\n        if (result === false) {\n            datas.isClipStart = false;\n            return false;\n        }\n        datas.isControl = className.indexOf(\"clip-control\") > -1;\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n        datas.index = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n        datas.clipPath = clipPath;\n        datas.isClipStart = true;\n        state.clipPathState = clipText;\n        setDragStart(moveable, e);\n\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const { datas, originalDatas } = e;\n\n        if (!datas.isClipStart) {\n            return false;\n        }\n        const draggableData = (originalDatas && originalDatas.draggable) || {};\n        const { isControl, isLine, isArea, index, clipPath } = datas as {\n            clipPath: ReturnType<typeof getClipPath>,\n            [key: string]: any,\n        };\n        if (!clipPath) {\n            return false;\n        }\n        let [distX, distY] = draggableData.isDrag ? draggableData.prevDist : getDragDist(e);\n        const props = moveable.props;\n        const state = moveable.state;\n        const { width, height } = state;\n        const isDragWithTarget = !isArea && !isControl && !isLine;\n        const {\n            type: clipType,\n            poses: clipPoses,\n            splitter,\n        } = clipPath;\n        const poses = clipPoses.map(pos => pos.pos);\n\n        if (isDragWithTarget) {\n            distX = -distX;\n            distY = -distY;\n        }\n        const isAll = !isControl || clipPoses[index].direction === \"nesw\";\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\n        let dists = clipPoses.map(() => [0, 0]);\n\n        if (isControl && !isAll) {\n            const { horizontal, vertical } = clipPoses[index];\n            const dist = [\n                distX * Math.abs(horizontal),\n                distY * Math.abs(vertical),\n            ];\n            dists = moveControlPos(clipPoses, index, dist, isRect);\n        } else if (isAll) {\n            dists = poses.map(() => [distX, distY]);\n        }\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\n        const guidePoses = [...nextPoses];\n\n        state.snapBoundInfos = null;\n        const isCircle = clipPath.type === \"circle\";\n        const isEllipse = clipPath.type === \"ellipse\";\n\n        if (isCircle || isEllipse) {\n            const guideRect = getRect(nextPoses);\n            const ry = Math.abs(guideRect.bottom - guideRect.top);\n            const rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n            const bottom = nextPoses[0][1] + ry;\n            const left = nextPoses[0][0] - rx;\n            const right = nextPoses[0][0] + rx;\n\n            // right\n            if (isCircle) {\n                guidePoses.push([right, guideRect.bottom]);\n                dists.push([1, 0]);\n            }\n            // bottom\n            guidePoses.push([guideRect.left, bottom]);\n            dists.push([0, 1]);\n            // left\n            guidePoses.push([left, guideRect.bottom]);\n            dists.push([1, 0]);\n        }\n\n        const guidelines = getDefaultGuidelines(\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\n            width!, height!,\n        );\n        let guideXPoses: number[] = [];\n        let guideYPoses: number[] = [];\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\n\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\n        }\n        for (let i = 0; i < 2; ++i) {\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkSnapBounds(\n                guidelines,\n                props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n                guideXPoses,\n                guideYPoses,\n                {\n                    snapThreshold: 5,\n                },\n            );\n            const snapOffsetY = horizontalSnapInfo.offset;\n            const snapOffsetX = verticalSnapInfo.offset;\n\n            if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n                const guideRect = getRect(nextPoses);\n                let cy = guideRect.bottom - guideRect.top;\n                let cx = isEllipse ? guideRect.right - guideRect.left : cy;\n                const distSnapX = verticalSnapInfo.isBound\n                    ? Math.abs(snapOffsetX)\n                    : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\n                const distSnapY = horizontalSnapInfo.isBound\n                    ? Math.abs(snapOffsetY)\n                    : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\n                cx -= distSnapX;\n                cy -= distSnapY;\n\n                if (isCircle) {\n                    cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n                    cx = cy;\n                }\n                const center = guidePoses[0];\n\n                guidePoses[1][1] = center[1] - cy;\n                guidePoses[2][0] = center[0] + cx;\n                guidePoses[3][1] = center[1] + cy;\n                guidePoses[4][0] = center[0] - cx;\n            } else {\n                guidePoses.forEach((pos, j) => {\n                    const dist = dists[j];\n\n                    if (dist[0]) {\n                        pos[0] -= snapOffsetX;\n                    }\n                    if (dist[1]) {\n                        pos[1] -= snapOffsetY;\n                    }\n                });\n                break;\n            }\n        }\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\n\n        state.clipPathState = clipStyle;\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n\n            guideXPoses = rectPoses.map(pos => pos[0]);\n            guideYPoses = rectPoses.map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.map(pos => pos[0]);\n            guideYPoses = guidePoses.map(pos => pos[1]);\n        }\n        state.snapBoundInfos = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            {\n                snapThreshold: 1,\n            },\n        );\n\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n            clipEventType: \"changed\",\n            clipType,\n            poses: nextPoses,\n            clipStyle,\n            clipStyles: nextClipStyles,\n            distX,\n            distY,\n        }));\n\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        this.unset(moveable);\n        const { isDrag, datas, isDouble } = e;\n        const { isLine, isClipStart, isControl } = datas;\n\n        if (!isClipStart) {\n            return false;\n        }\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\n        if (isDouble) {\n            if (isControl) {\n                removeClipPath(moveable, e);\n            } else if (isLine) {\n                // add\n                addClipPath(moveable, e);\n            }\n        }\n        return isDouble || isDrag;\n    },\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\n        moveable.state.clipPathState = \"\";\n        moveable.state.snapBoundInfos = null;\n    },\n};\n\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea. (default: false)\n * @name Moveable.Clippable#clipArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target. (default: false)\n* @name Moveable.Clippable#clipTargetBounds\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* Add clip guidelines in the vertical direction. (default: [])\n* @name Moveable.Clippable#clipVerticalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction. (default: [])\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n* istance value that can snap to clip guidelines. (default: 5)\n* @name Moveable.Clippable#clipSnapThreshold\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    prefix, triggerEvent,\n    fillParams, calculatePoses, getRect, fillEndParams, convertCSSSize,\n} from \"../utils\";\nimport {\n    OnDragOriginStart, OnDragOrigin,\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface,\n} from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport Draggable from \"./Draggable\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\nexport default {\n    name: \"originDraggable\",\n    props: {\n        originDraggable: Boolean,\n        originRelative: Boolean,\n    } as const,\n    events: {\n        onDragOriginStart: \"dragOriginStart\",\n        onDragOrigin: \"dragOrigin\",\n        onDragOriginEnd: \"dragOriginEnd\",\n    } as const,\n    css: [\n        `:host[data-able-origindraggable] .control.origin {\n    pointer-events: auto;\n}`,\n    ],\n    dragControlCondition(_: any, e: any) {\n        if (e.isRequest) {\n            return e.requestAble === \"originDraggable\";\n        }\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas } = e;\n\n        setDragStart(moveable, e);\n\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent<OriginDraggableProps>(\n            moveable, \"onDragOriginStart\", params);\n\n        datas.startOrigin = moveable.state.transformOrigin;\n        datas.startTargetOrigin = moveable.state.targetOrigin;\n        datas.prevOrigin = [0, 0];\n        datas.isDragOrigin = true;\n\n        if (result === false) {\n            datas.isDragOrigin = false;\n            return false;\n        }\n\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas, isPinch, isRequest } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        const [distX, distY] = getDragDist(e);\n        const state = moveable.state;\n        const {\n            width,\n            height,\n            offsetMatrix,\n            targetMatrix,\n            is3d,\n        } = state;\n        const {\n            originRelative = true,\n        } = moveable.props;\n        const n = is3d ? 4 : 3;\n        let dist = [distX, distY];\n\n        if (isRequest) {\n            const distOrigin = e.distOrigin;\n            if (distOrigin[0] || distOrigin[1]) {\n                dist = distOrigin;\n            }\n        }\n        const origin = plus(datas.startOrigin, dist);\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\n        const delta = minus(dist, datas.prevOrigin);\n\n        const nextMatrix = getNextMatrix(\n            offsetMatrix,\n            targetMatrix,\n            origin,\n            n,\n        );\n\n        const rect = moveable.getRect();\n        const nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n\n        const dragDelta = [\n            rect.left - nextRect.left,\n            rect.top - nextRect.top,\n        ];\n\n        datas.prevOrigin = dist;\n        const transformOrigin = [\n            convertCSSSize(targetOrigin[0], width, originRelative),\n            convertCSSSize(targetOrigin[1], height, originRelative),\n        ].join(\" \");\n        const params = fillParams<OnDragOrigin>(moveable, e, {\n            width,\n            height,\n            origin,\n            dist,\n            delta,\n            transformOrigin,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\n            )!,\n        });\n        triggerEvent<OriginDraggableProps>(moveable, \"onDragOrigin\", params);\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        triggerEvent<OriginDraggableProps>(moveable, \"onDragOriginEnd\",\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\n        return true;\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        return true;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        moveable.transformOrigin = params.transformOrigin;\n\n        return true;\n    },\n    /**\n    * @method Moveable.OriginDraggable#request\n    * @param {object} e - the OriginDraggable's request parameter\n    * @param {number} [e.x] - x position\n    * @param {number} [e.y] - y position\n    * @param {number} [e.deltaX] - x number to move\n    * @param {number} [e.deltaY] - y number to move\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n    * @param {array} [e.origin] - transform-origin position\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\n    * @return {Moveable.Requester} Moveable Requester\n    * @example\n\n    * // Instantly Request (requestStart - request - requestEnd)\n    * // Use Relative Value\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n    * // Use Transform Value\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n    * // requestStart\n    * const requester = moveable.request(\"originDraggable\");\n    *\n    * // request\n    * // Use Relative Value\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n    *\n    * // requestEnd\n    * requester.requestEnd();\n    */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        const transformOrigin = rect.transformOrigin;\n        const distOrigin = [0, 0];\n\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaOrigin\" in e) {\n                    distOrigin[0] += e.deltaOrigin[0];\n                    distOrigin[1] += e.deltaOrigin[1];\n                } else if (\"origin\" in e) {\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\n                } else {\n                    if (\"x\" in e) {\n                        distX = e.x - rect.left;\n                    } else if (\"deltaX\" in e) {\n                        distX += e.deltaX;\n                    }\n                    if (\"y\" in e) {\n                        distY = e.y - rect.top;\n                    } else if (\"deltaY\" in e) {\n                        distY += e.deltaY;\n                    }\n                }\n\n                return { datas, distX, distY, distOrigin };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n","import {\n    prefix, triggerEvent,\n    fillParams, fillEndParams, calculatePosition,\n    getComputedStyle,\n} from \"../utils\";\nimport {\n    Renderer, RoundableProps, OnRoundStart, RoundableState, OnRound, ControlPose, OnRoundEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { splitSpace } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    getRadiusValues, getRadiusStyles, removeRadiusPos,\n    addRadiusPos, splitRadiusPoses,\n} from \"./roundable/borderRadius\";\n\nfunction addBorderRadius(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    lineIndex: number,\n    distX: number,\n    distY: number,\n    width: number,\n    height: number,\n) {\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses);\n    const horizontalsLength = horizontals.length;\n    const verticalsLength = verticals.length;\n    // lineIndex\n    // 0 top\n    // 1 right\n    // 2 left\n    // 3 bottom\n\n    // 0 top - left\n    // 1 top - right\n    // 2 bottom - right\n    // 3 bottom - left\n    // 0 left - top\n    // 1 right - top\n    // 2 right - bottom\n    // 3 left - bottom\n    let horizontalIndex = -1;\n    let verticalIndex = -1;\n\n    if (lineIndex === 0) {\n        if (horizontalsLength === 0) {\n            horizontalIndex = 0;\n        } else if (horizontalsLength === 1) {\n            horizontalIndex = 1;\n        }\n    } else if (lineIndex === 3) {\n        if (horizontalsLength <= 2) {\n            horizontalIndex = 2;\n        } else if (horizontalsLength <= 3) {\n            horizontalIndex = 3;\n        }\n    }\n    if (lineIndex === 2) {\n        if (verticalsLength === 0) {\n            verticalIndex = 0;\n        } else if (verticalsLength < 4) {\n            verticalIndex = 3;\n        }\n    } else if (lineIndex === 1) {\n        if (verticalsLength <= 1) {\n            verticalIndex = 1;\n        } else if (verticalsLength <= 2) {\n            verticalIndex = 2;\n        }\n    }\n\n    addRadiusPos(\n        controlPoses, poses, 0,\n        horizontalIndex, verticalIndex,\n        distX, distY, width, height,\n    );\n}\nfunction getBorderRadius(\n    target: HTMLElement | SVGElement,\n    width: number, height: number,\n    minCounts: number[] = [0, 0],\n    state?: string,\n) {\n    let borderRadius: string;\n    let values: string[] = [];\n\n    if (!state) {\n        const style = getComputedStyle(target);\n\n        borderRadius = (style && style.borderRadius) || \"\";\n    } else {\n        borderRadius = state;\n    }\n    if (!borderRadius || (!state && borderRadius === \"0px\")) {\n        values = [];\n    } else {\n        values = splitSpace(borderRadius);\n    }\n\n    return getRadiusValues(values, width, height, 0, 0, minCounts);\n}\n\nfunction triggerRoundEvent(\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\n    e: any,\n    dist: number[],\n    delta: number[],\n    controlPoses: ControlPose[],\n    nextPoses: number[][],\n) {\n    const state = moveable.state;\n    const {\n        width,\n        height,\n    } = state;\n    const {\n        raws,\n        styles,\n    } = getRadiusStyles(\n        nextPoses,\n        controlPoses,\n        moveable.props.roundRelative!,\n        width,\n        height,\n    );\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses, raws);\n    const borderRadius = styles.join(\" \");\n\n    state.borderRadiusState = borderRadius;\n    triggerEvent<RoundableProps>(moveable, \"onRound\", fillParams<OnRound>(moveable, e, {\n        horizontals,\n        verticals,\n        borderRadius,\n        width,\n        height,\n        delta,\n        dist,\n    }));\n}\n\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nexport default {\n    name: \"roundable\",\n    props: {\n        roundable: Boolean,\n        roundRelative: Boolean,\n        minRoundControls: Array,\n        maxRoundControls: Array,\n        roundClickable: Boolean,\n    } as const,\n    events: {\n        onRoundStart: \"roundStart\",\n        onRound: \"round\",\n        onRoundEnd: \"roundEnd\",\n    } as const,\n    css: [\n        `.control.border-radius {\n    background: #d66;\n    cursor: pointer;\n}`,\n        `:host[data-able-roundable] .line.direction {\n    cursor: pointer;\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\n        const {\n            target,\n            width,\n            height,\n            allMatrix,\n            is3d,\n            left,\n            top,\n            borderRadiusState,\n        } = moveable.state;\n        const {\n            minRoundControls = [0, 0],\n            maxRoundControls = [4, 4],\n            zoom,\n        } = moveable.props;\n\n        if (!target) {\n            return null;\n        }\n\n        const n = is3d ? 4 : 3;\n        const radiusValues = getBorderRadius(\n            target, width, height, minRoundControls, borderRadiusState);\n\n        if (!radiusValues) {\n            return null;\n        }\n        let verticalCount = 0;\n        let horizontalCount = 0;\n\n        return radiusValues.map((v, i) => {\n            horizontalCount += Math.abs(v.horizontal);\n            verticalCount += Math.abs(v.vertical);\n            const pos = minus(calculatePosition(allMatrix, v.pos, n), [left, top]);\n            const isDisplay = v.vertical\n                ? verticalCount <= maxRoundControls[1]\n                : horizontalCount <= maxRoundControls[0];\n\n            return <div key={`borderRadiusControl${i}`}\n                className={prefix(\"control\", \"border-radius\")}\n                data-radius-index={i}\n                style={{\n                    display: isDisplay ? \"block\" : \"none\",\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (!e.inputEvent || e.isRequest) {\n            return false;\n        }\n        const className = (e.inputEvent.target.getAttribute(\"class\") || \"\");\n\n        return className.indexOf(\"border-radius\") > -1\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { inputEvent, datas } = e;\n        const inputTarget = inputEvent.target;\n        const className = (inputTarget.getAttribute(\"class\") || \"\");\n        const isControl = className.indexOf(\"border-radius\") > -1;\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n        const lineIndex = isLine ? parseInt(inputTarget.getAttribute(\"data-line-index\"), 10) : -1;\n\n        if (!isControl && !isLine) {\n            return false;\n        }\n\n        const result = triggerEvent<RoundableProps>(\n            moveable, \"onRoundStart\", fillParams<OnRoundStart>(moveable, e, {}));\n\n        if (result === false) {\n            return false;\n        }\n\n        datas.lineIndex = lineIndex;\n        datas.controlIndex = controlIndex;\n        datas.isControl = isControl;\n        datas.isLine = isLine;\n\n        setDragStart(moveable, e);\n\n        const {\n            roundRelative,\n            minRoundControls = [0, 0],\n        } = moveable.props;\n        const state = moveable.state;\n        const {\n            target,\n            width,\n            height,\n        } = state;\n\n        datas.isRound = true;\n        datas.prevDist = [0, 0];\n        const controlPoses = getBorderRadius(target!, width, height, minRoundControls) || [];\n\n        datas.controlPoses = controlPoses;\n\n        state.borderRadiusState = getRadiusStyles(\n            controlPoses.map(pos => pos.pos), controlPoses, roundRelative!, width, height).styles.join(\" \");\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRound || !datas.isControl || !datas.controlPoses.length) {\n            return false;\n        }\n        const index = datas.controlIndex as number;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const [distX, distY] = getDragDist(e);\n        const dist = [distX, distY];\n        const delta = minus(dist, datas.prevDist);\n        const {\n            maxRoundControls = [4, 4],\n        } = moveable.props;\n        const { width, height } = moveable.state;\n        const selectedControlPose = controlPoses[index];\n        const selectedVertical = selectedControlPose.vertical;\n        const selectedHorizontal = selectedControlPose.horizontal;\n\n        // 0: [0, 1, 2, 3] maxCount === 1\n        // 0: [0, 2] maxCount === 2\n        // 1: [1, 3] maxCount === 2\n\n        // 0: [0] maxCount === 3\n        // 1: [1, 3] maxCount === 3\n\n        const dists = controlPoses.map(pose => {\n            const { horizontal, vertical } = pose;\n            const poseDist = [\n                horizontal * selectedHorizontal * dist[0],\n                vertical * selectedVertical * dist[1],\n            ];\n            if (horizontal) {\n                if (maxRoundControls[0] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n                    return poseDist;\n                }\n            } else if (maxRoundControls[1] === 0) {\n                poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n\n                return poseDist;\n            } else if (selectedVertical) {\n                if (maxRoundControls[1] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n                    return poseDist;\n                }\n            }\n            return [0, 0];\n        });\n        dists[index] = dist;\n        const nextPoses = controlPoses.map((pos, i) => plus(pos.pos, dists[i]));\n\n        datas.prevDist = [distX, distY];\n\n        triggerRoundEvent(\n            moveable,\n            e,\n            dist,\n            delta,\n            controlPoses,\n            nextPoses,\n        );\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const state = moveable.state;\n\n        state.borderRadiusState = \"\";\n        const { datas, isDouble } = e;\n        if (!datas.isRound) {\n            return false;\n        }\n        const {\n            width,\n            height,\n        } = state;\n        const {\n            isControl,\n            controlIndex,\n            isLine,\n            lineIndex,\n        } = datas;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const poses = controlPoses.map(pos => pos.pos);\n        const length = poses.length;\n        const {\n            roundClickable = true,\n        } = moveable.props;\n\n        if (isDouble && roundClickable) {\n            if (isControl) {\n                removeRadiusPos(controlPoses, poses, controlIndex, 0);\n            } else if (isLine) {\n                const [distX, distY] = calculatePointerDist(moveable, e);\n\n                addBorderRadius(controlPoses, poses, lineIndex, distX, distY, width, height);\n            }\n            if (length !== controlPoses.length) {\n                triggerRoundEvent(\n                    moveable,\n                    e,\n                    [0, 0],\n                    [0, 0],\n                    controlPoses,\n                    poses,\n                );\n            }\n        }\n        triggerEvent<RoundableProps>(moveable, \"onRoundEnd\",\n            fillEndParams<OnRoundEnd>(moveable, e, {}));\n        state.borderRadiusState = \"\";\n        return true;\n    },\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        moveable.state.borderRadiusState = \"\";\n    },\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * @property - Whether you can add/delete round controls by double-clicking a line or control. (default: true)\n * @name Moveable.Roundable#roundClickable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    MoveableManagerInterface, BeforeRenderableProps,\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd,\n} from \"../types\";\nimport { fillParams, triggerEvent } from \"../utils\";\nimport { convertMatrixtoCSS } from \"@scena/matrix\";\nimport { isArray, splitSpace } from \"@daybrush/utils\";\nimport { fillChildEvents } from \"../groupUtils\";\n\nexport default {\n    isPinch: true,\n    name: \"beforeRenderable\",\n    props: {\n    } as const,\n    events: {\n        onBeforeRenderStart: \"beforeRenderStart\",\n        onBeforeRender: \"beforeRender\",\n        onBeforeRenderEnd: \"beforeRenderEnd\",\n        onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n        onBeforeRenderGroup: \"beforeRenderGroup\",\n        onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\",\n    } as const,\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        const {\n            is3d,\n            target,\n            targetMatrix,\n        } = moveable.state;\n        const transform = target?.style.transform;\n        const cssMatrix = is3d\n            ? `matrix3d(${targetMatrix.join(\",\")})`\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\n        e.datas.startTransforms = !transform || transform === \"none\" ? [cssMatrix] : splitSpace(transform);\n    },\n    resetTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        e.datas.nextTransforms = e.datas.startTransforms;\n        e.datas.nextTransformAppendedIndexes = [];\n    },\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\n            setTransform: (transform: string | string[]) => {\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            },\n            isPinch: !!e.isPinch,\n        });\n    },\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        });\n    },\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.setTransform(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\n    },\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.resetTransform(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragStart(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.setTransform(childMoveable, childEvent);\n            return this.fillDragStartParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            setTransform() { },\n            events: params,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.drag(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.resetTransform(childMoveable, childEvent);\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragEnd(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import {\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\n    OnRenderEnd, MoveableGroupInterface,\n    OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\n\nexport default {\n    name: \"renderable\",\n    props: {\n    } as const,\n    events: {\n        onRenderStart: \"renderStart\",\n        onRender: \"render\",\n        onRenderEnd: \"renderEnd\",\n        onRenderGroupStart: \"renderGroupStart\",\n        onRenderGroup: \"renderGroup\",\n        onRenderGroupEnd: \"renderGroupEnd\",\n    } as const,\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRender`, fillParams<OnRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderEnd`, fillParams<OnRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { convertDragDist } from \"../utils\";\nimport Gesto from \"gesto\";\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\nimport Renderable from \"../ables/Renderable\";\n\nexport function triggerAble(\n    moveable: MoveableManagerInterface,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    requestInstant?: boolean,\n) {\n    const isStart = eventType === \"Start\";\n    const target = moveable.state.target;\n    const isRequest = e.isRequest;\n\n    if (\n        !target\n        || (isStart && eventAffix.indexOf(\"Control\") > -1\n            && !isRequest && moveable.areaElement === e.inputEvent.target)\n    ) {\n        return false;\n    }\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType.indexOf(\"After\") > -1;\n    const isFirstStart = isStart && (\n        !moveable.targetGesto || !moveable.controlGesto\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\n    );\n\n    if (isFirstStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    if (eventType === \"\" && !isAfter && !isRequest) {\n        convertDragDist(moveable.state, e);\n    }\n    // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Able[] = [BeforeRenderable, ...(moveable as any)[ableType].slice(), Renderable];\n\n    if (isRequest) {\n        const requestAble = e.requestAble;\n        if (!ables.some(able => able.name === requestAble)) {\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\n        }\n    }\n\n    if (!ables.length) {\n        return false;\n    }\n    const events = ables.filter((able: any) => able[eventName]);\n    const datas = e.datas;\n\n    if (isFirstStart) {\n        events.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n\n    const inputEvent = e.inputEvent;\n    let inputTarget: Element;\n\n    if (isEnd && inputEvent) {\n        inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n    }\n    const results = events.filter((able: any) => {\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (isStart) {\n            nextDatas.isEventStart = !able[conditionName] || able[conditionName](moveable, e);\n        }\n\n        if (nextDatas.isEventStart) {\n            return able[eventName](moveable, { ...e, datas: nextDatas, originalDatas: datas, inputTarget });\n        }\n        return false;\n    });\n\n    const isUpdate = results.length;\n    const isForceEnd = isStart && events.length && !isUpdate;\n\n    if (isEnd || isForceEnd) {\n        moveable.state.gesto = null;\n\n        if ((moveable as MoveableGroupInterface).moveables) {\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\n                childMoveable.state.gesto = null;\n            });\n        }\n    }\n    if (isFirstStart && isForceEnd) {\n        events.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    if (moveable.isUnmounted || isForceEnd) {\n        return false;\n    }\n    if ((!isStart && isUpdate && !requestInstant) || isEnd) {\n        moveable.updateRect(eventType, true, false);\n        moveable.forceUpdate();\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n    }\n    return true;\n}\n\nexport function getTargetAbleGesto(\n    moveable: MoveableManagerInterface,\n    moveableTarget: HTMLElement | SVGElement,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox.getElement();\n    const targets: Array<HTMLElement | SVGElement> = [];\n\n    targets.push(controlBox);\n\n    if (!moveable.props.dragArea || moveable.props.dragTarget) {\n        targets.push(moveableTarget);\n    }\n\n    const startFunc = (e: any) => {\n        const eventTarget = e.inputEvent.target;\n        const areaElement = moveable.areaElement;\n\n        return eventTarget === areaElement\n            || !moveable.isMoveableElement(eventTarget)\n            || hasClass(eventTarget, \"moveable-area\")\n            || hasClass(eventTarget, \"moveable-padding\");\n    };\n\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n        dragStart: startFunc,\n        pinchStart: startFunc,\n    });\n}\nexport function getAbleGesto(\n    moveable: MoveableManagerInterface,\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n) {\n    const {\n        pinchOutside,\n        pinchThreshold,\n    } = moveable.props;\n    const options: IObject<any> = {\n        container: window,\n        pinchThreshold,\n        pinchOutside,\n    };\n    const gesto = new Gesto(target!, options);\n\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n            gesto.on(`${eventOperation}${eventType}` as any, e => {\n                const eventName = e.eventType;\n\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                    e.stop();\n                    return;\n                }\n                const result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n\n                if (!result) {\n                    e.stop();\n                }\n            });\n        });\n    });\n\n    return gesto;\n}\n","import { Able, MoveableManagerInterface } from \"./types\";\n\nexport default class EventManager {\n    private ables: Able[] = [];\n    constructor(\n        private target: HTMLElement | SVGElement | null,\n        private moveable: MoveableManagerInterface | null,\n        private eventName: string,\n    ) {\n        this.target!.addEventListener(this.eventName.toLowerCase(), this.onEvent);\n    }\n    public setAbles(ables: Able[]) {\n        this.ables = ables;\n    }\n    public onEvent = (e: Event) => {\n        const eventName = this.eventName;\n        const moveable = this.moveable!;\n\n        if (moveable.state.disableNativeEvent) {\n            return;\n        }\n        this.ables.forEach(able => {\n            (able as any)[eventName](moveable, {\n                inputEvent: e,\n            });\n        });\n    }\n    public destroy() {\n        this.target!.removeEventListener(this.eventName.toLowerCase(), this.onEvent);\n        this.target = null;\n        this.moveable = null;\n    }\n}\n","import * as React from \"react\";\nimport { createElement } from \"react\";\nimport { PREFIX } from \"./consts\";\nimport {\n    prefix,\n    getTargetInfo,\n    unset,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    flat,\n    groupByMap,\n    calculatePadding,\n    getAbsoluteRotation,\n} from \"./utils\";\nimport Gesto from \"gesto\";\nimport { ref } from \"framework-utils\";\nimport {\n    MoveableManagerProps, MoveableManagerState, Able,\n    RectInfo, Requester, PaddingBox, HitRect, MoveableManagerInterface,\n} from \"./types\";\nimport { triggerAble, getTargetAbleGesto, getAbleGesto } from \"./gesto/getAbleGesto\";\nimport { plus } from \"@scena/matrix\";\nimport { getKeys, IObject } from \"@daybrush/utils\";\nimport { renderLine } from \"./renderDirections\";\nimport { fitPoints, getAreaSize, getOverlapSize, isInside } from \"overlap-area\";\nimport EventManager from \"./EventManager\";\nimport styled from \"react-css-styled\";\n\nexport default class MoveableManager<T = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        dragTarget: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        edge: false,\n        parentMoveable: null,\n        wrapperMoveable: null,\n        parentPosition: null,\n        portalContainer: null,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        passDragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        triggerAblesSimultaneously: false,\n        padding: {},\n        pinchOutside: true,\n        checkInput: false,\n        groupable: false,\n        cspNonce: \"\",\n        translateZ: 0,\n        cssStyled: null,\n        customStyledMap: {},\n        props: {},\n    };\n    public state: MoveableManagerState = {\n        container: null,\n        target: null,\n        gesto: null,\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n        disableNativeEvent: false,\n        ...getTargetInfo(null),\n    };\n    public enabledAbles: Able[] = [];\n    public targetAbles: Able[] = [];\n    public controlAbles: Able[] = [];\n    public controlBox!: { getElement(): HTMLElement };\n    public areaElement!: HTMLElement;\n    public targetGesto!: Gesto;\n    public controlGesto!: Gesto;\n    public rotation = 0;\n    public scale: number[] = [1, 1];\n    public isUnmounted = false;\n    public events: Record<string, EventManager | null>  = {\n        \"mouseEnter\": null,\n        \"mouseLeave\": null,\n    };\n\n    public render() {\n        const props = this.props;\n        const state = this.state;\n        const {\n            edge, parentPosition, className,\n            target: propsTarget,\n            zoom, cspNonce,\n            translateZ,\n            cssStyled: ControlBoxElement,\n            portalContainer,\n        } = props;\n\n        this.checkUpdate();\n        this.updateRenderPoses();\n\n        const { left: parentLeft, top: parentTop } = parentPosition! || { left: 0, top: 0 };\n        const { left, top, target: stateTarget, direction, renderPoses } = state;\n        const groupTargets = (props as any).targets;\n        const isDisplay = ((groupTargets && groupTargets.length) || propsTarget) && stateTarget;\n        const isDragging = this.isDragging();\n        const ableAttributes: IObject<boolean> = {};\n        const Renderer = {\n            createElement: React.createElement,\n        };\n        this.getEnabledAbles().forEach(able => {\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\n        });\n        return (\n            <ControlBoxElement\n                cspNonce={cspNonce}\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1\n                    ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${className}`}\n                {...ableAttributes}\n                onClick={this.onPreventClick}\n                portalContainer={portalContainer}\n                style={{\n                    \"position\": \"absolute\",\n                    \"display\": isDisplay ? \"block\" : \"none\",\n                    \"transform\": `translate3d(${left - parentLeft}px, ${top - parentTop}px, ${translateZ})`,\n                    \"--zoom\": zoom,\n                    \"--zoompx\": `${zoom}px`,\n                }}>\n                {this.renderAbles()}\n                {renderLine(Renderer, edge ? \"n\" : \"\", renderPoses[0], renderPoses[1], zoom!, 0)}\n                {renderLine(Renderer, edge ? \"e\" : \"\", renderPoses[1], renderPoses[3], zoom!, 1)}\n                {renderLine(Renderer, edge ? \"w\" : \"\", renderPoses[0], renderPoses[2], zoom!, 2)}\n                {renderLine(Renderer, edge ? \"s\" : \"\", renderPoses[2], renderPoses[3], zoom!, 3)}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.controlBox.getElement();\n        const props = this.props;\n        const { parentMoveable, container, wrapperMoveable } = props;\n\n        this.updateEvent(props);\n        this.updateNativeEvents(props);\n        if (!container && !parentMoveable && !wrapperMoveable) {\n            this.updateRect(\"\", false, true);\n        }\n        this.updateCheckInput();\n    }\n    public componentDidUpdate(prevProps: MoveableManagerProps) {\n        this.updateNativeEvents(prevProps);\n        this.updateEvent(prevProps);\n        this.updateCheckInput();\n    }\n    public componentWillUnmount() {\n        this.isUnmounted = true;\n        unset(this, \"targetGesto\");\n        unset(this, \"controlGesto\");\n\n        const events = this.events;\n        for (const name in events) {\n            const manager = events[name];\n            manager && manager.destroy();\n        }\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, wrapperMoveable, container } = this.props;\n\n        return container!\n            || (wrapperMoveable && wrapperMoveable.getContainer())\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.getElement().parentElement!;\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: Element) {\n        return target && ((target.getAttribute(\"class\") || \"\").indexOf(PREFIX) > -1);\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent) {\n        if (this.targetGesto) {\n            this.targetGesto.triggerDragStart(e);\n        }\n        return this;\n    }\n    /**\n     * Hit test an element or rect on a moveable target.\n     * @method Moveable#hitTest\n     * @param - element or rect to test\n     * @return - Get hit test rate (rate > 0 is hitted)\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.hitTest(e.target) > 0) {\n     *          console.log(\"hiited\");\n     *     }\n     * });\n     */\n    public hitTest(el: Element | HitRect): number {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return 0;\n        }\n        let rect: Required<HitRect>;\n\n        if (el instanceof Element) {\n            const clientRect = el.getBoundingClientRect();\n\n            rect = {\n                left: clientRect.left,\n                top: clientRect.top,\n                width: clientRect.width,\n                height: clientRect.height,\n            };\n        } else {\n            rect = { width: 0, height: 0, ...el };\n        }\n\n        const {\n            left: rectLeft,\n            top: rectTop,\n            width: rectWidth,\n            height: rectHeight,\n        } = rect;\n        const points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n        const size = getOverlapSize(points, [\n            [rectLeft, rectTop],\n            [rectLeft + rectWidth, rectTop],\n            [rectLeft + rectWidth, rectTop + rectHeight],\n            [rectLeft, rectTop + rectHeight],\n        ]);\n        const totalSize = getAreaSize(points);\n\n        if (!size || !totalSize) {\n            return 0;\n        }\n\n        return Math.min(100, size / totalSize * 100);\n    }\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number) {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || this.props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? parentMoveable.props.rootContainer\n            : props.rootContainer;\n        this.updateState(\n            getTargetInfo(this.controlBox && this.controlBox.getElement(),\n                target, container, container,\n                rootContainer || container,\n                // isTarget ? state : undefined\n            ),\n            parentMoveable ? false : isSetState,\n        );\n    }\n    public isTargetChanged(prevProps: MoveableManagerProps, useDragArea?: boolean) {\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const prevTarget = prevProps.dragTarget || prevProps.target;\n        const dragArea = props.dragArea;\n        const prevDragArea = prevProps.dragArea;\n        const isTargetChanged = !dragArea && prevTarget !== target;\n\n        return isTargetChanged || ((useDragArea || dragArea) && prevDragArea !== dragArea);\n    }\n    public updateNativeEvents(prevProps: MoveableManagerProps) {\n        const props = this.props;\n        const target = props.dragArea ? this.areaElement : this.state.target;\n        const events = this.events;\n        const eventKeys = getKeys(events);\n\n        if (this.isTargetChanged(prevProps)) {\n            for (const eventName in events) {\n                const manager = events[eventName];\n                manager && manager.destroy();\n                events[eventName] = null;\n            }\n        }\n        if (!target) {\n            return;\n        }\n        const enabledAbles = this.enabledAbles;\n        eventKeys.forEach(eventName => {\n            const ables = filterAbles(enabledAbles, [eventName] as any);\n            const hasAbles = ables.length > 0;\n            let manager = events[eventName];\n\n            if (!hasAbles) {\n                if (manager) {\n                    manager.destroy();\n                    events[eventName] = null;\n                }\n                return;\n            }\n            if (!manager) {\n                manager = new EventManager(target, this, eventName);\n                events[eventName] = manager;\n            }\n            manager.setAbles(ables);\n        });\n    }\n    public updateEvent(prevProps: MoveableManagerProps) {\n        const controlBoxElement = this.controlBox.getElement();\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const isTargetChanged = this.isTargetChanged(prevProps, true);\n        const isUnset = (!hasTargetAble && this.targetGesto) || isTargetChanged;\n\n        if (isUnset) {\n            unset(this, \"targetGesto\");\n            this.updateState({ gesto: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlGesto\");\n        }\n\n        if (target && hasTargetAble && !this.targetGesto) {\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\n        }\n        if (!this.controlGesto && hasControlAble) {\n            this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n        }\n        if (isUnset) {\n            this.unsetAbles();\n        }\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging() {\n        return (this.targetGesto ? this.targetGesto.isFlag() : false)\n            || (this.controlGesto ? this.controlGesto.isFlag() : false);\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @method Moveable#updateTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        const transformOrigin = state.transformOrigin;\n\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n            transformOrigin,\n            rotation: this.getRotation(),\n        };\n    }\n    /**\n     * Get a manager that manages the moveable's state and props.\n     * @method Moveable#getManager\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const manager = moveable.getManager(); // real moveable class instance\n     */\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this as any;\n    }\n    public getRotation() {\n        const {\n            pos1,\n            pos2,\n            direction,\n        } = this.state;\n\n        return getAbsoluteRotation(pos1, pos2, direction);\n    }\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n     * @param - ableName\n     * @param - request to be able params.\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const requestInstant = isInstant || param.isInstant;\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n            requestEnd() {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            requestAble: ableName,\n            isRequest: true,\n        }, requestInstant);\n\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.componentWillUnmount();\n    }\n    public updateRenderPoses() {\n        const state = this.state;\n        const props = this.props;\n        const {\n            originalBeforeOrigin, transformOrigin,\n            allMatrix, is3d, pos1, pos2, pos3, pos4,\n            left: stateLeft, top: stateTop,\n        } = state;\n        const {\n            left = 0,\n            top = 0,\n            bottom = 0,\n            right = 0,\n        } = (props.padding || {}) as PaddingBox;\n        const n = is3d ? 4 : 3;\n        const absoluteOrigin = (props as any).groupable\n            ? originalBeforeOrigin : plus(originalBeforeOrigin, [stateLeft, stateTop]);\n\n        state.renderPoses = [\n            plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)),\n            plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n)),\n        ];\n    }\n    public checkUpdate() {\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isChanged = !equals(stateTarget, target) || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n\n        this.updateState({ target, container });\n\n        if (!parentMoveable && (container || this.controlBox)) {\n            this.updateRect(\"End\", false, false);\n        }\n    }\n    public triggerEvent(name: string, e: any): any {\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    public useCSS(tag: string, css: string) {\n        const customStyleMap = this.props.customStyledMap as Record<string, any>;\n\n        const key = tag + css;\n\n        if (!customStyleMap[key]) {\n            customStyleMap[key] = styled(tag, css);\n        }\n        return customStyleMap[key];\n    }\n    protected unsetAbles() {\n        if (this.targetAbles.filter(able => {\n            if (able.unset) {\n                able.unset(this);\n                return true;\n            }\n            return false;\n        }).length) {\n            this.forceUpdate();\n        }\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = ables!.filter(able => able && (able.always || props[able.name]));\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.enabledAbles = enabledAbles;\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            this.setState(nextState);\n        } else {\n            const state = this.state;\n\n            for (const name in nextState) {\n                (state as any)[name] = nextState[name];\n            }\n        }\n    }\n    protected getEnabledAbles() {\n        const props = this.props as any;\n        const ables: Able[] = props.ables!;\n        return ables.filter(able => able && props[able.name]);\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const Renderer = {\n            createElement,\n        };\n\n        return groupByMap(flat<any>(\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n                return render!(this, Renderer) || [];\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n    protected updateCheckInput() {\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n    }\n    protected onPreventClick = (e: any) => {\n        e.stopPropagation();\n    }\n}\n\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Zooms in the elements of a moveable. (default: 1)\n * @name Moveable#zoom\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox. (default: \"\")\n * @name Moveable#className\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s) (default: target)\n * @name Moveable#dragTarget\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n","import { refs } from \"framework-utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { Renderer, MoveableGroupInterface } from \"../types\";\n\nexport default {\n    name: \"groupable\",\n    props: {\n        defaultGroupRotate: Number,\n        defaultGroupOrigin: String,\n        groupable: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableGroupInterface, React: Renderer): any[] {\n        const targets = moveable.props.targets || [];\n\n        moveable.moveables = [];\n        const { left, top } = moveable.state;\n        const position = { left, top };\n\n        return targets.map((target, i) => {\n            return <MoveableManager\n                key={\"moveable\" + i}\n                ref={refs(moveable, \"moveables\", i)}\n                target={target}\n                origin={false}\n                cssStyled={moveable.props.cssStyled}\n                customStyledMap={moveable.props.customStyledMap}\n                parentMoveable={moveable}\n                parentPosition={position}\n            />;\n        });\n    },\n};\n","import {\n    MoveableManagerInterface, MoveableGroupInterface,\n    ClickableProps, OnClick, OnClickGroup,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { findIndex } from \"@daybrush/utils\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"clickable\", {\n    props: {},\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    always: true,\n    dragStart() {},\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        const target = moveable.state.target!;\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n        ) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent<ClickableProps>(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            isDouble: e.isDouble,\n            inputTarget,\n            isTarget: target === inputTarget,\n            containsTarget,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n            || e.datas.inputTarget === inputTarget\n        ) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent<ClickableProps>(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\n            isDouble: e.isDouble,\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n        }));\n    },\n});\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n","import { hasClass } from \"@daybrush/utils\";\nimport { DraggableProps, MoveableGroupInterface, MoveableManagerInterface } from \"../types\";\nimport { prefix } from \"../utils\";\nimport Draggable from \"./Draggable\";\nimport { makeAble } from \"./AbleManager\";\n\nfunction getDraggableEvent(e: any) {\n    let datas = e.originalDatas.draggable;\n    if (!datas) {\n        e.originalDatas.draggable = {};\n        datas = e.originalDatas.draggable;\n    }\n    return { ...e, datas };\n}\nexport default makeAble(\"edgeDraggable\", {\n    dragControlCondition(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.dragStart(moveable, getDraggableEvent(e));\n    },\n    dragControl(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.drag(moveable, getDraggableEvent(e));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragEnd(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlCondition(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroup(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n    },\n    unset(moveable: any) {\n        moveable.state.dragInfo = null;\n    },\n});\n\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n","export default {\n    name: \"individualGroupable\",\n    props: {\n        individualGroupable: Boolean,\n    } as const,\n    events: {} as const,\n} as const;\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\nimport Padding from \"./Padding\";\nimport Clippable from \"./Clippable\";\nimport OriginDraggable from \"./OriginDraggable\";\nimport Roundable from \"./Roundable\";\nimport { UnionToIntersection } from \"../types\";\nimport { invertObject } from \"../utils\";\nimport Groupable from \"./Groupable\";\nimport BeforeRenderable from \"./BeforeRenderable\";\nimport Renderable from \"./Renderable\";\nimport Clickable from \"./Clickable\";\nimport edgeDraggable from \"./edgeDraggable\";\nimport IndividualGroupable from \"./IndividualGroupable\";\n\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\n    BeforeRenderable,\n    Default, Snappable, Pinchable, Draggable, edgeDraggable, Rotatable,\n    Resizable, Scalable, Warpable, Scrollable, Padding, Origin,\n    OriginDraggable,\n    Clippable, Roundable, Groupable, IndividualGroupable,\n    Clickable,\n    DragArea,\n    Renderable,\n] as const;\n\nexport const MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...(\"events\" in able ? able.events : {})};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"events\"]>;\nexport const MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.props};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"props\"]>;\n\nexport const MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nexport const MOVEABLE_EVENTS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_EVENTS_MAP);\nexport const MOVEABLE_PROPS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_PROPS_MAP);\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, MoveableManagerProps, RectInfo } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport { getTargetInfo, throttle, getAbsolutePosesByState, equals, unset } from \"./utils\";\nimport { minus, plus, rotate } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getGroupRect(moveables: MoveableManager[], rotation: number) {\n    if (!moveables.length) {\n        return [0, 0, 0, 0];\n    }\n\n    const moveablePoses = moveables.map(({ state }) => getAbsolutePosesByState(state));\n    let minX = MAX_NUM;\n    let minY = MAX_NUM;\n    let groupWidth = 0;\n    let groupHeight = 0;\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = fixedRotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        const b1MinMax = [MIN_NUM, MAX_NUM];\n        const b2MinMax = [MIN_NUM, MAX_NUM];\n\n        moveablePoses.forEach(poses => {\n            poses.forEach(pos => {\n                // ax + b = y\n                // b = y - ax\n                const b1 = pos[1] - a1 * pos[0];\n                const b2 = pos[1] - a2 * pos[0];\n\n                b1MinMax[0] = Math.max(b1MinMax[0], b1);\n                b1MinMax[1] = Math.min(b1MinMax[1], b1);\n                b2MinMax[0] = Math.max(b2MinMax[0], b2);\n                b2MinMax[1] = Math.min(b2MinMax[1], b2);\n            });\n        });\n\n        b1MinMax.forEach(b1 => {\n            // a1x + b1 = a2x + b2\n            b2MinMax.forEach(b2 => {\n                // (a1 - a2)x = b2 - b1\n                const x = (b2 - b1) / (a1 - a2);\n                const y = a1 * x + b1;\n\n                minX = Math.min(minX, x);\n                minY = Math.min(minY, y);\n            });\n        });\n        const rotatePoses = moveablePoses.map(([pos1, pos2, pos3, pos4]) => {\n            return [\n                rotate(pos1, -rad),\n                rotate(pos2, -rad),\n                rotate(pos3, -rad),\n                rotate(pos4, -rad),\n            ];\n        });\n\n        groupWidth = getMaxPos(rotatePoses, 0) - getMinPos(rotatePoses, 0);\n        groupHeight = getMaxPos(rotatePoses, 1) - getMinPos(rotatePoses, 1);\n    } else {\n        minX = getMinPos(moveablePoses, 0);\n        minY = getMinPos(moveablePoses, 1);\n        groupWidth = getMaxPos(moveablePoses, 0) - minX;\n        groupHeight = getMaxPos(moveablePoses, 1) - minY;\n\n        if (fixedRotation % 180) {\n            const changedWidth = groupWidth;\n\n            groupWidth = groupHeight;\n            groupHeight = changedWidth;\n        }\n    }\n    return [minX, minY, groupWidth, groupHeight];\n}\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\nclass MoveableGroup extends MoveableManager<GroupableProps> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n        defaultGroupOrigin: \"50% 50%\",\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public transformOrigin = \"50% 50%\";\n\n    public updateEvent(prevProps: MoveableManagerProps<GroupableProps>) {\n        const state = this.state;\n        const props = this.props;\n\n        const prevTarget = prevProps.dragTarget || state.target;\n        const nextTarget = props.dragTarget || this.areaElement;\n\n        if (prevTarget !== nextTarget) {\n            unset(this, \"targetGesto\");\n            unset(this, \"controlGesto\");\n            state.target = null;\n        }\n\n        if (!state.target) {\n            state.target = this.areaElement;\n\n            this.controlBox.getElement().style.display = \"block\";\n            this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n            this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n        }\n        const isContainerChanged = !equals(prevProps.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const { added, changed, removed } = this.differ.update(props.targets!);\n\n        if (isContainerChanged || added.length || changed.length || removed.length) {\n            this.updateRect();\n        }\n    }\n    public checkUpdate() {\n        this.updateAbles();\n    }\n\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState = true) {\n        if (!this.controlBox) {\n            return;\n        }\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const state = this.state;\n        const props = this.props;\n        const target = state.target! || props.target!;\n\n        if (!isTarget || (type !== \"\" && props.updateGroup)) {\n            // reset rotataion\n            this.rotation = props.defaultGroupRotate!;\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n            this.scale = [1, 1];\n\n        }\n        const rotation = this.rotation;\n        const scale = this.scale;\n        const [left, top, width, height] = getGroupRect(this.moveables, rotation);\n\n        // tslint:disable-next-line: max-line-length\n        const transform = `rotate(${rotation}deg) scale(${scale[0] >= 0 ? 1 : -1}, ${scale[1] >= 0 ? 1 : -1})`;\n        target.style.cssText += `left:0px;top:0px; transform-origin: ${this.transformOrigin}; width:${width}px; height:${height}px;`\n            + `transform:${transform}`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getTargetInfo(\n            this.controlBox.getElement(),\n            target,\n            this.controlBox.getElement(),\n            this.getContainer(),\n            this.props.rootContainer || container,\n            // state,\n        );\n        const pos = [info.left!, info.top!];\n        const [\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        ] = getAbsolutePosesByState(info); // info.left + info.pos(1 ~ 4)\n\n        const minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n        const delta = [minPos.minX, minPos.minY];\n        info.pos1 = minus(pos1, delta);\n        info.pos2 = minus(pos2, delta);\n        info.pos3 = minus(pos3, delta);\n        info.pos4 = minus(pos4, delta);\n        info.left = left - info.left! + delta[0];\n        info.top = top - info.top! + delta[1];\n        info.origin = minus(plus(pos, info.origin!), delta);\n        info.beforeOrigin = minus(plus(pos, info.beforeOrigin!), delta);\n        info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin!);\n        // info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\n\n        const clientRect = info.targetClientRect!;\n        const direction = scale[0] * scale[1] > 0 ? 1 : -1;\n\n        clientRect.top += info.top - state.top;\n        clientRect.left += info.left - state.left;\n\n        target.style.transform = `translate(${-delta[0]}px, ${-delta[1]}px) ${transform}`;\n\n        this.updateState(\n            {\n                ...info,\n                direction,\n                beforeDirection: direction,\n            },\n            isSetState,\n        );\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\n        if (isManager || name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        }\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n}\n\n/**\n * Sets the initial rotation of the group. (default 0)\n * @name Moveable.Group#defaultGroupRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupRotate: 0,\n * });\n *\n * moveable.defaultGroupRotate = 40;\n */\n\n/**\n * Sets the initial origin of the group. (default 0)\n * @name Moveable.Group#defaultGroupOrigin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupOrigin: \"50% 50%\",\n * });\n *\n * moveable.defaultGroupOrigin = \"20% 40%\";\n */\nexport default MoveableGroup;\n","import { ref, refs } from \"framework-utils\";\nimport * as React from \"react\";\nimport MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, RectInfo } from \"./types\";\nimport { prefix } from \"./utils\";\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\nclass MoveableIndividualGroup extends MoveableManager<GroupableProps> {\n    public moveables: MoveableManager[] = [];\n    public render() {\n        const {\n            cspNonce,\n            cssStyled: ControlBoxElement,\n            targets,\n        } = this.props;\n\n        return <ControlBoxElement\n            cspNonce={cspNonce}\n            ref={ref(this, \"controlBox\")}\n            className={prefix(\"control-box\")}>\n            {targets!.map((target, i) => {\n                return <MoveableManager\n                    key={\"moveable\" + i}\n                    ref={refs(this, \"moveables\", i)}\n                    {...this.props}\n                    target={target}\n                    wrapperMoveable={this}\n                />;\n            })}\n        </ControlBoxElement>;\n    }\n    public componentDidUpdate() {}\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, isTarget, isSetState);\n        });\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public request() {\n        return {\n            request() {\n                return this;\n            },\n            requestEnd() {\n                return this;\n            },\n        };\n    }\n    public dragStart() {\n        return this;\n    }\n    public hitTest() {\n        return 0;\n    }\n    public isInside() {\n        return false;\n    }\n    public isDragging() {\n        return false;\n    }\n    public updateRenderPoses() { }\n    public updateEvent() { }\n    public checkUpdate() { }\n    public triggerEvent() { }\n    protected updateAbles() { }\n}\n\n/**\n * Create targets individually, not as a group.\n * @name Moveable.IndividualGroup#individualGroupable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   individualGroupable: true,\n * });\n */\nexport default MoveableIndividualGroup;\n","import * as React from \"react\";\nimport {\n    Able, MoveableInterface, GroupableProps, MoveableDefaultProps,\n    IndividualGroupableProps, MoveableManagerInterface,\n} from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\nimport { getKeys, IObject, isString } from \"@daybrush/utils\";\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\nimport Default from \"./ables/Default\";\nimport Groupable from \"./ables/Groupable\";\nimport DragArea from \"./ables/DragArea\";\nimport styled from \"react-css-styled\";\nimport { getRefTargets, getElementTargets } from \"./utils\";\nimport IndividualGroupable from \"./ables/IndividualGroupable\";\nimport MoveableIndividualGroup from \"./MoveableIndividualGroup\";\n\n\nexport class InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & IndividualGroupableProps & T> {\n    public static defaultAbles: Able[] = [];\n    public static customStyledMap: Record<string, any> = {};\n    public static defaultStyled: any = null;\n    public static makeStyled() {\n        const cssMap: IObject<boolean> = {};\n\n        const ables = this.getTotalAbles();\n        ables.forEach(({ css }: Able) => {\n            if (!css) {\n                return;\n            }\n            css.forEach(text => {\n                cssMap[text] = true;\n            });\n        });\n        const style = getKeys(cssMap).join(\"\\n\");\n\n        this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n    }\n    public static getTotalAbles(): Able[] {\n\n        return [Default, Groupable, IndividualGroupable, DragArea, ...this.defaultAbles];\n    }\n    @withMethods(MOVEABLE_METHODS)\n    public moveable!: MoveableManager | MoveableGroup | MoveableIndividualGroup;\n    public refTargets: Array<HTMLElement | SVGElement | string | undefined | null> = [];\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    public render() {\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\n\n        if (!moveableContructor.defaultStyled) {\n            moveableContructor.makeStyled();\n        }\n        const {\n            ables: userAbles,\n            props: userProps,\n            ...props\n        } = this.props;\n        const refTargets = getRefTargets((props.target || props.targets) as any);\n        const elementTargets = getElementTargets(refTargets, this.selectorMap);\n\n        this.refTargets = refTargets;\n\n        const isGroup = elementTargets.length > 1;\n        const totalAbles = moveableContructor.getTotalAbles();\n        const ables = [\n            ...totalAbles,\n            ...(userAbles as any || []),\n        ];\n        const nextProps = {\n            ...props,\n            ...(userProps || {}),\n            ables,\n            cssStyled: moveableContructor.defaultStyled,\n            customStyledMap: moveableContructor.customStyledMap,\n        };\n\n        if (isGroup) {\n            if (props.individualGroupable) {\n                return <MoveableIndividualGroup key=\"individual-group\" ref={ref(this, \"moveable\")}\n                    {...nextProps}\n                    target={null}\n                    targets={elementTargets} />;\n            }\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={null}\n                targets={elementTargets}  />;\n        } else {\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={elementTargets[0]} />;\n        }\n    }\n    public componentDidMount() {\n        this.updateRefs();\n    }\n    public componentDidUpdate() {\n        this.updateRefs();\n    }\n    public updateRefs(isReset?: boolean) {\n        const refTargets = getRefTargets((this.props.target || this.props.targets) as any);\n        let isUpdate = this.refTargets.some((target, i) => {\n            const nextTarget = refTargets[i];\n\n            if (!target && !nextTarget) {\n                return false;\n            } else if (target !== nextTarget) {\n                return true;\n            }\n            return false;\n        });\n        const selectorMap = isReset ? {} : this.selectorMap;\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n        this.refTargets.forEach(target => {\n            if (isString(target)) {\n                if (!selectorMap[target]) {\n                    isUpdate = true;\n                    nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n                } else {\n                    nextSelectorMap[target] = selectorMap[target];\n                }\n            }\n        });\n\n        this.selectorMap = nextSelectorMap;\n\n        if (isUpdate) {\n            this.forceUpdate();\n        }\n    }\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this.moveable;\n    }\n}\nexport interface InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & IndividualGroupableProps & T>,\n    MoveableInterface {\n    setState(state: any, callback?: () => any): any;\n}\n","import { MoveableProps, Able } from \"./types\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\n}\n","import { Able } from \"./types\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport function makeMoveable<T = {}>(\n    ables: Array<Able<T>>): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\n    return class Moveable extends InitialMoveable<T> {\n        public static defaultAbles = ables;\n    };\n}\n","import Moveable, * as others from \"./index.esm\";\n\nfor (const name in others) {\n    (Moveable as any)[name] = (others as any)[name];\n}\nexport default Moveable;\n"],"names":["makeAble","name","able","__assign","events","props","_a","Boolean","getSVGCursor","scale","degree","getCursorCSS","x1","x2","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","browser","webkit","IS_WEBKIT605","res","exec","navigator","userAgent","toLowerCase","parseFloat","PREFIX","MOVEABLE_CSS","map","join","NEARBY_POS","FLOAT_POINT_NUM","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTIONS","DIRECTION_INDEXES","n","s","w","e","nw","ne","sw","se","DIRECTION_ROTATIONS","MOVEABLE_METHODS","multiply2","pos1","pos2","prefix","_i","classNames","prefixNames","getTransformMatrix","transform","isObject","value","splitBracket","split","v","getAbsoluteMatrix","matrix","origin","multiplies","createOriginMatrix","a","measureSVGSize","el","unit","isHorizontal","viewBox","getSVGViewBox","ownerSVGElement","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","getComputedStyle","o","i","splitUnit","style","transformOrigin","getOffsetInfo","lastParent","isParent","body","document","target","parentElement","isEnd","position","tagName","isStatic","offsetParent","getOffsetPosInfo","container","isFixed","offsetLeft","offsetTop","containerClientRect","documentElement","getBoundingClientRect","left","top","isSVG","isUndefined","hasOffset","targetOrigin","pos","slice","getSVGGraphicsOffset","offset","getBodyOffset","bodyStyle","bodyPosition","marginLeft","parseInt","marginTop","bottom","right","convert3DMatrixes","matrixes","forEach","info","convertDimension","getMatrixStackInfo","is3d","targetTransformOrigin","targetMatrix","offsetContainer","convertCSStoMatrix","length","offsetPos","push","type","getSVGMatrix","createIdentityMatrix","_b","isOffsetEnd","parentClientLeft","parentClientTop","clientLeft","clientTop","margin","scrollLeft","scrollTop","calculateElementInfo","rootContainer","isAbsolute3d","width","height","rotation","allResult","offsetWidth","offsetHeight","getSize","result","calculateMatrixStack","calculateMoveablePosition","allMatrix","rotationPosition","getRotationRad","direction","rootMatrix","beforeMatrix","offsetMatrix","targetTransform","pos3","pos4","getElementInfo","prevTargetMatrix","rootMatrixes","isRoot3d","isNext3d","isSVGGraphicElement","originalContainer","endContainer","reverse","multiply","nextInfo","getSVGOffset","isMatrix3d","makeMatrixCSS","ignoreDimension","convertMatrixtoCSS","clientWidth","clientHeight","x","y","baseVal","viewBoxWidth","viewBoxHeight","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","translate","xAlign","yAlign","floor","scaleDimension","max","min","scaleMatrix","createScaleMatrix","getBBox","bbox","calculatePosition","calculate","convertPositionMatrix","calculatePoses","getRect","poses","posesX","posesY","rectWidth","rectHeight","calculateRect","offsetInfo","targetInfo","undefined","rect","rectLeft","rectTop","mat","_c","prevLeft","prevTop","prevWidth","prevHeight","posOrigin","prevOrigin","minus","rectOrigin","count","inverseBeforeMatrix","invert","mat2","_d","nextLeft","nextTop","distLeft","distTop","abs","p","y1","y2","x3","y3","x4","y4","_e","originX","originY","getShapeDirection","getDistSize","vec","sqrt","getDiagonalSize","getLineStyle","zoom","rad","getRad","getControlTransform","reduce","prev","getCSSSize","isOffset","isBoxSizing","boxSizing","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","getTargetInfo","moveableElement","parentContainer","beforeDirection","beforeOrigin","targetClientRect","resetClientRect","moveableClientRect","beforePosition","plus","getOrigin","getClientRect","originalBeforeOrigin","scrollWidth","scrollHeight","isExtends","window","innerWidth","innerHeight","clientRect","overflow","getDirection","direciton","getAttribute","dir","indexOf","getAbsolutePoses","dist","getAbsolutePosesByState","roundSign","num","throttle","throttleArray","nums","_","unset","self","fillParams","moveable","params","datas","nextParams","state","clientX","clientY","inputEvent","currentTarget","isStartEvent","lastEvent","fillEndParams","isDrag","isDouble","triggerEvent","isManager","pseudoElt","filterAbles","ables","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","filter","some","method","ableGroup","equals","a1","a2","selectValue","values","groupBy","arr","func","groups","groupKeys","index","groupKey","keyIndex","group","groupByMap","flat","cur","concat","maxOffset","args","sort","b","minOffset","calculateInversePosition","convertDragDist","distX","distY","calculatePadding","convertCSSSize","size","isRelative","moveControlPos","controlPoses","isRect","sub","dists","directions","verticalDirection_1","horizontalDirection_1","controlPose","controlDir","isVertical","dirDir","dirHorizontal","dirVertical","getTinyDist","directionCondition","isRequest","requestAble","parentDirection","hasClass","invertObject","obj","nextObj","getTransform","transforms","beforeFunctionTexts","beforeFunctionTexts2","targetFunctionText","afterFunctionTexts","afterFunctionTexts2","beforeFunctions","parse","beforeFunctions2","targetFunctions","afterFunctions","afterFunctions2","beforeFunctionMatrix","toMat","beforeFunctionMatrix2","afterFunctionMatrix","afterFunctionMatrix2","allFunctionMatrix","targetFunctionMatrix","targetFunction","isArrayFormat","isArray","getRefTarget","isSelector","isString","querySelector","isFunction","current","getRefTargets","targets","userTargets","call","querySelectorAll","getElementTargets","selectorMap","elementTargets","getAbsoluteRotation","deg","PI","getDragDistByState","inverseMatrix","calculateMatrixDist","onPinchStart","onPinch","onPinchEnd","onPinchGroupStart","onPinchGroup","onPinchGroupEnd","dragStart","pinchStart","angle","originalDatas","pinchable","eventName","controlEventName","pinchAbles","controlAbles","canPinch","isPinch","ableEvent","parentRotate","snapRenderInfo","request","pinch","pinchScale","distance","parentDistance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","setCustomDrag","delta","isConvert","gesto","move","draggableDatas","draggable","parentEvent","client","isFlag","prevX","prevY","startX","startY","deltaX","deltaY","parentGesto","fillChildEvents","groupable","groupableDatas","childDatas","moveables","triggerChildGesto","isStart","match","childs","ev","childMoveable","childEvent","CustomGesto","childGestos","parentFlag","child","triggerChildAbles","eachEvent","callback","calculatePointerDist","posX","posY","getDragDist","setDragStart","absoluteOrigin","startDragBeforeDist","startDragDist","getTransformDirection","beforeTransform","resolveTransformEvent","event","functionName","transformIndex","nextTransforms","nextTransformAppendedIndexes","nextIndex","matFunctionName","beforeTransform2","targetTansform","afterTransform","afterTransform2","targetAllTransform","splice","isAppendTransform","convertTransformFormat","getTransformDist","getBeforeDragDist","bx","by","getTransfromMatrix","fromTranslation","isAfter","nextTargetMatrix","res1","afterTargetMatrix","isBefore","getInverseDragDist","calculateTransformOrigin","prevSize","isNaN","measureRatio","getPosIndexesByDirection","indexes","getPosesByDirection","getPosByDirection","nextPoses","average","getPosByReverseDirection","getDist","startPos","fixedDirection","fixedPos","getNextMatrix","getNextTransformMatrix","parseMat","fillTransformStartEvent","beforeRenderable","setTransform","startTransforms","splitSpace","setTransformIndex","setDefaultTransformIndex","property","findIndex","startValue","functionValue","fillOriginalTransform","fillTransformEvent","nextTransform","drag","Draggable","getTranslateDist","fixedPosition","nextMatrix","groupLeft","groupTop","nextFixedPosition","getDirectionOffset","getScaleDist","scaleDist","getOriginDirection","nextFixedOffset","getRotateDist","rotateDist","getResizeDist","nextOrigin","getAbsolutePosition","calculateContainerPos","containerRect","clientPos","getGapGuidelines","guidelines","snapThreshold","start","end","otherStart","otherEnd","totalGuidelines","otherIndex","otherType","elementGuidelines","guidelineType","element","sizes","guideline1","elementStart","elementEnd","guideline2","guideline2Pos","guideline2Sizes","guideline2Element","guidline2ClassName","targetStart","targetEnd","gap","canSnap","className","gapGuidelines","centerPos","getDefaultGuidelines","horizontalGuidelines","verticalGuidelines","snapOffset","snapOffsetLeft","snapOffsetTop","snapOffsetBottom","snapOffsetRight","snapWidth","snapHeight","calculateElementGuidelines","snapCenter","containerLeft","containerTop","getMinMaxs","targetLeft","targetTop","topValue","leftValue","rightValue","bottomValue","elementLeft","elementTop","elementRight","elementBottom","center","getElementGuidelines","isRefresh","prevGuidelines","prevValues","elementGuidelineValues","nextValues","diff","added","removed","removedElements","addedGuidelines","refresh","guideline","getTotalGuidelines","staticGuidelines","containerHeight","containerWidth","containerClientHeight","containerClientWidth","snapHorizontal","snapVertical","_f","snapGap","_g","_h","snapGridWidth","_j","snapGridHeight","_k","getGridGuidelines","hide","checkMoveableSnapPoses","customSnapThreshold","snapElement","checkSnapPoses","options","vertical","checkSnap","horizontal","checkSnapKeepRatio","endPos","endX","endY","dx","dy","isBottom","isRight","verticalInfo","isSnap","horizontalInfo","verticalSnapInfo","horizontalSnapInfo","posInfos","getNearestSnapGuidelineInfo","isVerticalSnap","verticalGuideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","checkSnaps","isCenter","isSnapCenter","verticalNames","horizontalNames","snapInfo","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","alignPoses","keepRatio","checkSnapBoundPriority","aDist","bDist","isBound","getNearOffsetInfo","offsets","aSign","sign","bSign","aOffset","bOffset","isStartLine","dot","line","cx","cy","hitTestLine","test1","test2","isSameStartLine","dots","error","centerSign","every","checkInnerBoundDot","threshold","checkInnerBound","bounds","innerBounds","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","isHorizontalStart","isVerticalStart","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","verticalOffset","horizontalOffset","boundLine","isRender","dot1","dot2","boundDot1","boundDot2","dy1","dx1","dy2","dx2","getInnerBoundInfo","lines","multiple","sizeOffset","getInnerBoundDragInfo","getCheckInnerBoundLines","innerBoundInfo","widthOffsetInfo","heightOffsetInfo","getCheckSnapLineDirections","lineDirections","dir1","dir2","isBoundRotate","relativePoses","boundDots","rotate","getDistPointLine","solveReverseLine","checkRotateInnerBounds","prevPoses","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","checkBoundPoses","Infinity","nextBounds","checkBounds","getBounds","externalBounds","isCSS","checkBoundKeepRatio","startBoundPos","endBoundPos","minPos","maxPos","boundInfos","boundRect","boundRotate","boundPos","r","nextPos","checkRotateBounds","relativeRad1","relativeRad2","DIRECTION_NAMES","groupByElementGuidelines","groupInfos","elementPos","groupInfo","find","groupElement","groupPos","getElementGuidelineDist","elementSize","targetSize","relativePos","renderGuideline","React","key","scaleDirection","createElement","renderInnerGuideline","__spreadArrays","sizeValue","posValue","renderElementGroups","clientSize","snapDigit","snapDistFormat","isDisplaySnapDigit","posName1","posName2","sizeName","isFirstRenderSize","j","linePos","lineSize","isRenderSize","snapSize","toFixed","renderSnapPoses","snapPoses","renderPos","filterElementInnerGuidelines","targetSizes","isDisplayInnerSnapDigit","targetContentPos","targetContentSize","nextGuidelines","innerGuidelines","contentPos","inlinePos","inner","element1","size1","contentPos1","element2","size2","contentPos2","groupGuideline","renderGuidelines","renderGapGuidelines","absGap","snapStart","snapContainer","snapContainerTarget","snapContainerRect","offset1","offset2","enableSnap","hasGuidelines","ableName","snappable","solveNextOffset","solveEquation","isOutside","dist1","dist2","widthOffset","heightOffset","getNextFixedPoses","getSnapBoundOffset","boundInfo","getSnapBound","checkSnapBoundsKeepRatio","horizontalBoundInfo","verticalBoundInfo","horizontalDist","verticalDist","checkMoveableSnapBounds","boundPoses","horizontalBoundInfos","verticalBoundInfos","snapIndex","snap","checkSnapBounds","guideines","checkMaxBounds","maxWidth","maxHeight","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","nextOtherPos","isHeightOutside","isWidthOutside","checkSnapRightLine","snapBoundInfo","rad180","isHorizontalLine","isVerticalLine","getSnapBoundInfo","startDirection","endDirection","otherStartPos","otherEndPos","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","snapLine","getCheckSnapDirections","getSizeOffsetInfo","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","checkSnapRotate","checkSnapResize","checkSnapScale","sizeDist","startCheckSnapDrag","absolutePoses","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","checkSnapDrag","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","getSnapGuidelines","getGapGuidelinesToStart","guidelinePos","gapPos","aPos","bPos","gapSizes","gapGuideline","getGapGuidelinesToEnd","minSize","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","verticalInnerBoundPoses","horizontalInnerBoundPoses","innerPos","Array","Object","Number","Function","onSnap","css","render","minLeft","minTop","containerPos","externalPoses","snapInfos","hasExternalPoses","externalRect","middle","verticalPosInfos","horizontalPosInfos","gapHorizontalGuidelines","gapVerticalGuidelines","allGuidelines","elements","gaps","nextHorizontalGuidelines","elementHorizontalGroups","innerGapHorizontalGuidelines","nextVerticalGuidelines","elementVerticalGroups","innerGapVerticalGuidelines","dragEnd","dragControlCondition","rotatableDragControlCondtion","dragControlStart","dragControl","dragControlEnd","dragGroupStart","dragGroup","dragGroupEnd","dragGroupControlStart","dragGroupControl","dragGroupControlEnd","throttleDrag","startDragRotate","edgeDraggable","onDragStart","onDrag","onDragEnd","onDragGroupStart","onDragGroup","onDragGroupEnd","dragInfo","targetGesto","prevDist","prevBeforeDist","set","startRect","parentMoveable","dragRotateRad","ry","cos","rx","sin","passDeltaX","passDistX","passDeltaY","passDistY","beforeTranslate","beforeDist","beforeDelta","isControl","requestStart","requestEnd","renderDirectionControls","defaultDirections","additionalClassName","renderPoses","radRotation","directionMap","renderDirections","degRotation","directionRotation","renderLine","renderAllDirections","renderDiagonalDirections","setRotateStartInfo","startAbsoluteOrigin","prevDeg","prevSnapDeg","startDeg","loop","getParentDeg","moveableRect","parentDist","getDeg","throttleRotate","prevLoop","absolutePrevSnapDeg","absoluteDeg","getRotateInfo","getRotationPositions","radPoses","isReverse","rotationTarget","contains","rotatable","String","onRotateStart","onRotate","onRotateEnd","onRotateGroupStart","onRotateGroup","onRotateGroupEnd","positions","jsxs","absoluteInfo","externalRotate","beforeInfo","afterInfo","rotatation","isRotate","groupDelta","targetDirection","_l","beforeRotate","absoluteDelta","absoluteDist","absoluteRotate","absoluteStartDeg","inverseDist","inverseDelta","prevInverseDist","dragGroupControlCondition","parentLeft","parentTop","parentBeforeOrigin","childClient","groupClient","rotateMatrix","distRotate","startRotation","getRotation","deltaRotate","resizable","throttleResize","onResizeStart","onResize","onResizeEnd","onResizeGroupStart","onResizeGroup","onResizeGroupEnd","edge","startOffsetWidth","startOffsetHeight","startWidth","startHeight","padding","maxSize","minWidth","minHeight","isParentElement","containerStyle","convertUnitSize","isWidth","setRatio","ratio","isFinite","setFixedDirection","setMin","setMax","setOrigin","isResize","parentScale","parentKeepRatio","dragClient","sizeDirection","distWidth","distHeight","standardRad","signSize","startWidthSize","startHeightSize","distSize","ratioRad","nextDirection","snapDist","isNoSnap","calculateBoundSize","dragControlAfter","errorWidth","errorHeight","isErrorWidth","isErrorHeight","originalEvents","setDist","createRotateMatrix","originalX","originalY","deltaWidth","deltaHeight","scalable","throttleScale","onScaleStart","onScale","onScaleEnd","onScaleGroupStart","onScaleGroup","onScaleGroupEnd","scaleWidth","scaleHeight","scaleXRatio","scaleYRatio","isScale","dragDist","distScaleWidth","distScaleHeight","dragRad","stateDirection","moveableScale","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","warpable","onWarpStart","onWarp","onWarpEnd","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","inputTarget","warpTargetMatrix","targetInverseMatrix","prevMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","afterMatrix","totalMatrix","AREA_PIECES","AREA_PIECE","AVOID","restoreStyle","areaElement","removeClass","cssText","renderPieces","dragArea","passDragArea","onClick","onClickGroup","ref","isDragArea","rects","children","nextElementSibling","addClass","disableNativeEvent","enableNativeEvent","requestAnimationFrame","getDefaultScrollPosition","scrollContainer","scrollable","scrollThreshold","getScrollPosition","onScroll","onScrollGroup","getContainer","dragScroll","DragScroll","scrollContainerElement","gestoName","on","scrollBy","checkScroll","dragGroupContro","dragGroupControEnd","dragTarget","portalContainer","pinchThreshold","pinchOutside","checkInput","cspNonce","translateZ","paddingDirections","paddingPos1","paddingPos2","paddingPos3","paddingPos4","RADIUS_DIRECTIONS","calculateRatio","sumSize","sumRatio","HORIZONTAL_RADIUS_ORDER","VERTICAL_RADIUS_ORDER","HORIZONTAL_RADIUS_DIRECTIONS","VERTICAL_RADIUS_DIRECTIONS","getRadiusStyles","clipStyles","raws","rawPos","styles","getRadiusRange","horizontalRange","verticalRange","clipPose","getRadiusValues","minCounts","splitIndex","splitLength","horizontalValues","verticalValues","nwValue","neValue","seValue","swValue","wnValue","enValue","esValue","_m","wsValue","horizontalRawPoses","verticalRawPoses","nextHorizontalPoses","nextVerticalPoses","raw","removeRadiusPos","startIndex","radiuslIndex","deleteCount","addRadiusPos","horizontalIndex","verticalIndex","radiusX","radiusY","startVerticalIndex","splitRadiusPoses","horizontals","verticals","CLIP_DIRECTIONS","CLIP_RECT_DIRECTIONS","getClipStyles","clipPath","clipRelative","clipType","clipPoses","isCircle","subWidth","subHeight","getRectPoses","xs","ys","dirx","diry","getClipPath","defaultClip","customClip","clipText","clip","clipPrefix","splitter","splitComma","xPos","yPos","radiusX_1","radiusY_1","radius","xRadius","yRadius","centerPos_1","roundIndex","rectLength","radiusValues","_o","_p","_q","_r","nextRight","nextBottom","radiusPoses","_s","addClipPath","clipEventType","clipStyle","removeClipPath","clippable","defaultClipPath","customClipPath","clipArea","dragWithClip","clipTargetBounds","clipVerticalGuidelines","clipHorizontalGuidelines","clipSnapThreshold","onClipStart","onClip","onClipEnd","clipPathState","snapBoundInfos","calculatedPos","controls","isInset","isPolygon","linePoses_1","to","from","clipLeft","clipTop","ellipseClipPath","piece","areaPoses","allWidth","allHeight","allLeft_1","allTop_1","directionType","snapPos1","snapPos2","isClipStart","isLine","isArea","draggableData","isDragWithTarget","isAll","guidePoses","isEllipse","guideRect","guideXPoses","guideYPoses","rectPoses","rectDists_1","snapOffsetY","snapOffsetX","distSnapX","distSnapY","nextClipStyles","originDraggable","originRelative","onDragOriginStart","onDragOrigin","onDragOriginEnd","startOrigin","startTargetOrigin","isDragOrigin","distOrigin","nextRect","dragDelta","deltaOrigin","addBorderRadius","lineIndex","horizontalsLength","verticalsLength","getBorderRadius","borderRadius","triggerRoundEvent","roundRelative","borderRadiusState","roundable","minRoundControls","maxRoundControls","roundClickable","onRoundStart","onRound","onRoundEnd","verticalCount","horizontalCount","isDisplay","display","controlIndex","isRound","selectedControlPose","selectedVertical","selectedHorizontal","pose","poseDist","onBeforeRenderStart","onBeforeRender","onBeforeRenderEnd","onBeforeRenderGroupStart","onBeforeRenderGroup","onBeforeRenderGroupEnd","cssMatrix","resetTransform","fillDragStartParams","fillDragParams","_this","onRenderStart","onRender","onRenderEnd","onRenderGroupStart","onRenderGroup","onRenderGroupEnd","triggerAble","ableType","eventOperation","eventAffix","eventType","requestInstant","conditionName","isFirstStart","controlGesto","updateRect","BeforeRenderable","Renderable","requestAble_1","elementFromPoint","results","nextDatas","isEventStart","isUpdate","isForceEnd","isUnmounted","forceUpdate","getTargetAbleGesto","moveableTarget","controlBox","getElement","startFunc","eventTarget","isMoveableElement","getAbleGesto","conditionFunctions","Gesto","stop","addEventListener","onEvent","removeEventListener","__extends","stopPropagation","parentPosition","propsTarget","ControlBoxElement","checkUpdate","updateRenderPoses","stateTarget","groupTargets","isDragging","ableAttributes","Renderer","getEnabledAbles","onPreventClick","renderAbles","wrapperMoveable","updateEvent","updateNativeEvents","updateCheckInput","prevProps","manager","destroy","triggerDragStart","Element","points","fitPoints","getOverlapSize","totalSize","getAreaSize","isInside","isTarget","isSetState","updateState","useDragArea","prevTarget","prevDragArea","isTargetChanged","eventKeys","getKeys","hasAbles","EventManager","setAbles","controlBoxElement","hasTargetAble","targetAbles","hasControlAble","isUnset","unsetAbles","statePos","param","isInstant","requsetAble","ableRequester","requester","ableParam","componentWillUnmount","stateLeft","stateTop","stateContainer","updateAbles","isChanged","tag","customStyleMap","customStyledMap","styled","always","nextState","setState","MoveableManager","cssStyled","defaultGroupRotate","defaultGroupOrigin","refs","containsTarget","targetIndex","parentTarget","getDraggableEvent","individualGroupable","MOVEABLE_ABLES","Default","Snappable","Pinchable","Rotatable","Resizable","Scalable","Warpable","Scrollable","Padding","Origin","OriginDraggable","Clippable","Roundable","Groupable","IndividualGroupable","Clickable","DragArea","MOVEABLE_EVENTS_PROPS_MAP","MOVEABLE_PROPS_MAP","MOVEABLE_EVENTS_MAP","MOVEABLE_EVENTS","keys","MOVEABLE_PROPS","getMaxPos","getMinPos","getGroupRect","moveablePoses","minX","minY","groupWidth","groupHeight","fixedRotation","rad_1","a1_1","tan","a2_1","b1MinMax_1","b2MinMax_1","b1","b2","rotatePoses","changedWidth","ChildrenDiffer","nextTarget","isContainerChanged","differ","update","changed","updateGroup","_super","MoveableGroup","defaultProps","InitialMoveable","cssMap","getTotalAbles","text","defaultStyled","prefixCSS","defaultAbles","moveableContructor","constructor","makeStyled","userAbles","userProps","refTargets","isGroup","totalAbles","nextProps","MoveableIndividualGroup","updateRefs","isReset","nextSelectorMap","__decorate","withMethods","Moveable","makeMoveable","others"],"mappings":"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"}